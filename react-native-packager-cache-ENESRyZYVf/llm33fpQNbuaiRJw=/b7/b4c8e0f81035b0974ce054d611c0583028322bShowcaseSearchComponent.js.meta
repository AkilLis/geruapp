["e14562fed8c81ecbecee3c171a7ae696c215ce82","02e0ecab5f3e25f192fe4c041d5f2f1cef8d5376",["react","react-native","react-native-vector-icons/Ionicons","../../styles/variables","./RecentSearch","./SuggestedTags"],[86,183,225,355,478,600],{"version":3,"sources":["/var/www/geruapp/src/showcase/components/ShowcaseSearchComponent.js"],"names":["ShowcaseSearchComponent","props","onSearchValueCleared","text","onChangeSearchValue","searchByTag","recentlySearch","searchText","get","styles","container","searchContainer","handleSearchText","bind","clearSearch","onBackAction","marginLeft","trim","length","create","h4","fontSize","fontFamily","h5","color","flex","padding","height","flexDirection","justifyContent","alignItems","backgroundColor","borderWidth","FONT_HEAVY","propTypes","func","object"],"mappings":";;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;IAGqBA,uB;;;AACpB,kCAAYC,KAAZ,EAAmB;AAAA;AAAA,uJACXA,KADW;AAElB;;;;gCAEa;AACb,QAAKA,KAAL,CAAWC,oBAAX;AACA;;;mCAEgBC,I,EAAM;AACtB,QAAKF,KAAL,CAAWG,mBAAX,CAA+BD,IAA/B;AACA;;;2BAEQ;AAAA;;AAAA,gBAC8B,KAAKF,KADnC;AAAA,OACFI,WADE,UACFA,WADE;AAAA,OACWC,cADX,UACWA,cADX;;AAER,OAAIC,aAAaF,YAAYG,GAAZ,CAAgB,aAAhB,CAAjB;;AAEA,UACC;AAAA;AAAA,MAAM,OAAOC,OAAOC,SAApB;AACC;AAAA;AAAA,OAAM,OAAOD,OAAOE,eAApB;AACC,6DAAW,WAAW,IAAtB;AACC,mBAAY,oBADb;AAEC,mBAAa,KAFd;AAGC,4BAAsB,SAHvB;AAIC,sBAAgB,SAJjB;AAKC,6BAAuB,MALxB;AAMC,aAAOJ,UANR;AAOO,aAAOE,OAAOF,UAPrB;AAQO,oBAAc,KAAKK,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B;AARrB,OADD;AAYC;AAAA;AAAA,QAAkB,SAAS;AAAA,eAAM,OAAKC,WAAL,EAAN;AAAA,QAA3B;AACC,0DAAM,MAAK,iBAAX,EAA6B,MAAM,EAAnC,EAAuC,OAAM,SAA7C;AADD,MAZD;AAgBC;AAAA;AAAA,QAAkB,SAAS;AAAA,eAAM,OAAKb,KAAL,CAAWc,YAAX,EAAN;AAAA,QAA3B,EAA4D,OAAO,EAACC,YAAY,CAAb,EAAnE;AACC;AAAA;AAAA;AAAA;AAAA;AADD;AAhBD,KADD;AAuBET,eAAWU,IAAX,GAAkBC,MAAlB,IAA4B,CAA5B,GACA,wDAAc,gBAAgBZ,cAA9B,GADA,GAGA,yDAAe,WAAWC,UAA1B;AACK,eAAUF,YAAYG,GAAZ,CAAgB,UAAhB,CADf;AAEK,WAAMH,YAAYG,GAAZ,CAAgB,cAAhB,CAFX;AA1BF,IADD;AAiCA;;;;;kBAlDmBR,uB;;;AAqDrB,IAAIS,SAAS,wBAAWU,MAAX,CAAkB;AAC9BC,KAAI;AACHC,YAAU,EADP;AAEHC,cAAY;AAFT,EAD0B;;AAM9BC,KAAI;AACHF,YAAU,EADP;AAEHG,SAAO;AAFJ,EAN0B;;AAW9Bd,YAAW;AACVe,QAAM,CADI;AAEVC,WAAS;AAFC,EAXmB;;AAgB9Bf,kBAAiB;AAChBgB,UAAQ,EADQ;AAEhBC,iBAAe,KAFC;AAGhBC,kBAAgB,eAHA;AAIhBC,cAAY;AAJI,EAhBa;;AAuB9BvB,aAAY;AACXkB,QAAM,CADK;AAEXM,mBAAiB,MAFN;AAGXC,eAAa,CAHF;AAIXX,YAAU,EAJC;AAKXC,cAAY,oBAAUW;AALX;AAvBkB,CAAlB,CAAb;;AAgCAjC,wBAAwBkC,SAAxB,GAAoC;AACnCnB,eAAc,iBAAUoB,IADW;AAEnC9B,cAAa,iBAAU+B;AAFY,CAApC","sourcesContent":["import React, { PropTypes, Component } from 'react'\nimport { StyleSheet, View, Text, TextInput, Image, TouchableOpacity } from 'react-native'\nimport Icon from 'react-native-vector-icons/Ionicons'\nimport variables from '../../styles/variables'\n\n\nimport RecentSearch from './RecentSearch'\nimport SuggestedTags from './SuggestedTags'\n\n\nexport default class ShowcaseSearchComponent extends Component {\n\tconstructor(props) {\n\t  super(props)\n\t}\n\n\tclearSearch() {\n\t\tthis.props.onSearchValueCleared()\n\t}\n\n\thandleSearchText(text) {\n\t\tthis.props.onChangeSearchValue(text)\n\t}\n\n\trender() {\n\t\tlet { searchByTag, recentlySearch } = this.props\n\t\tlet searchText = searchByTag.get('searchValue')\n\t\t\n\t\treturn (\n\t\t\t<View style={styles.container}>\n\t\t\t\t<View style={styles.searchContainer}>\n\t\t\t\t\t<TextInput autoFocus={true}\n\t\t\t\t\t\tplaceholder=\"Browse on projects\"\n\t\t\t\t\t\tautoCorrect={false}\n\t\t\t\t\t\tplaceholderTextColor={'#b5b5b5'}\n\t\t\t\t\t\tselectionColor={'#efefef'}\n\t\t\t\t\t\tunderlineColorAndroid={'#fff'}\n\t\t\t\t\t\tvalue={searchText}\n\t\t\t\t        style={styles.searchText}\n\t\t\t\t        onChangeText={this.handleSearchText.bind(this)}\n\t\t\t\t      />\n\t\t\t\t\t\n\t\t\t\t\t<TouchableOpacity onPress={() => this.clearSearch()}>\n\t\t\t\t\t\t<Icon name=\"md-close-circle\" size={20} color=\"#b5b5b5\"/>\n\t\t\t\t\t</TouchableOpacity>\n\n\t\t\t\t\t<TouchableOpacity onPress={() => this.props.onBackAction()} style={{marginLeft: 3}}>\n\t\t\t\t\t\t<Text>Cancel</Text>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t</View>\n\n\t\t\t\t{\n\t\t\t\t\tsearchText.trim().length == 0 ? \n\t\t\t\t\t<RecentSearch recentlySearch={recentlySearch}/>\n\t\t\t\t\t:\n\t\t\t\t\t<SuggestedTags searchTag={searchText}\n\t\t\t\t\t\t\t   fetching={searchByTag.get('fetching')}\n\t\t\t\t\t\t\t   tags={searchByTag.get('searchResult')}/>\n\t\t\t\t}\n\t\t\t</View>\n\t\t)\n\t}\n}\n\nvar styles = StyleSheet.create({\n\th4: {\n\t\tfontSize: 18,\n\t\tfontFamily: 'Lato-Bold',\n\t},\n\n\th5: {\n\t\tfontSize: 15,\n\t\tcolor: '#b5b5b5'\n\t},\n\n\tcontainer: {\n\t\tflex: 1,\n\t\tpadding: 10,\n\t},\n\n\tsearchContainer: {\n\t\theight: 44,\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'space-between',\n\t\talignItems: 'center'\n\t},\n\n\tsearchText: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#fff', \n\t\tborderWidth: 0, \n\t\tfontSize: 18,\n\t\tfontFamily: variables.FONT_HEAVY,\n\t}\n})\n\nShowcaseSearchComponent.propTypes = {\n\tonBackAction: PropTypes.func,\n\tsearchByTag: PropTypes.object\n}"]}]