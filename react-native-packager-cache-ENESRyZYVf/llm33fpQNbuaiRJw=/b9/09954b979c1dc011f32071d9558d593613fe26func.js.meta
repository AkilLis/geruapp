["d1ccb0ddc5c076bedcdd54497b2822cf7e6861cb","98f3429a5f91e314a89dbe11403c1ddf417e332c",["./assert","./isTypeName","./Function","./isArray","./list","./isObject","./create","./isNil","./isBoolean","./tuple","./getFunctionName","./getTypeName","./isType"],[21,59,103,140,173,207,243,276,312,348,390,438,477],{"version":3,"sources":["/var/www/geruapp/node_modules/tcomb/lib/func.js"],"names":["assert","require","isTypeName","FunctionType","isArray","list","isObject","create","isNil","isBoolean","tuple","getFunctionName","getTypeName","isType","getDefaultName","domain","codomain","map","join","isInstrumented","f","is","instrumentation","getOptionalArgumentsIndex","types","end","length","areAllMaybes","i","type","meta","kind","func","name","process","env","NODE_ENV","stringify","displayName","domainLength","optionalArgumentsIndex","FuncType","value","path","of","identity","x","every","curried","fn","args","Array","prototype","slice","call","arguments","argsLength","tupleLength","Math","max","g","Function","bind","apply","concat","newDomain","module","exports"],"mappings":"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","sourcesContent":["var assert = require('./assert');\nvar isTypeName = require('./isTypeName');\nvar FunctionType = require('./Function');\nvar isArray = require('./isArray');\nvar list = require('./list');\nvar isObject = require('./isObject');\nvar create = require('./create');\nvar isNil = require('./isNil');\nvar isBoolean = require('./isBoolean');\nvar tuple = require('./tuple');\nvar getFunctionName = require('./getFunctionName');\nvar getTypeName = require('./getTypeName');\nvar isType = require('./isType');\n\nfunction getDefaultName(domain, codomain) {\n  return '(' + domain.map(getTypeName).join(', ') + ') => ' + getTypeName(codomain);\n}\n\nfunction isInstrumented(f) {\n  return FunctionType.is(f) && isObject(f.instrumentation);\n}\n\nfunction getOptionalArgumentsIndex(types) {\n  var end = types.length;\n  var areAllMaybes = false;\n  for (var i = end - 1; i >= 0; i--) {\n    var type = types[i];\n    if (!isType(type) || type.meta.kind !== 'maybe') {\n      return (i + 1);\n    } else {\n      areAllMaybes = true;\n    }\n  }\n  return areAllMaybes ? 0 : end;\n}\n\nfunction func(domain, codomain, name) {\n\n  domain = isArray(domain) ? domain : [domain]; // handle handy syntax for unary functions\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(list(FunctionType).is(domain), function () { return 'Invalid argument domain ' + assert.stringify(domain) + ' supplied to func(domain, codomain, [name]) combinator (expected an array of types)'; });\n    assert(FunctionType.is(codomain), function () { return 'Invalid argument codomain ' + assert.stringify(codomain) + ' supplied to func(domain, codomain, [name]) combinator (expected a type)'; });\n    assert(isTypeName(name), function () { return 'Invalid argument name ' + assert.stringify(name) + ' supplied to func(domain, codomain, [name]) combinator (expected a string)'; });\n  }\n\n  var displayName = name || getDefaultName(domain, codomain);\n  var domainLength = domain.length;\n  var optionalArgumentsIndex = getOptionalArgumentsIndex(domain);\n\n  function FuncType(value, path) {\n\n    if (!isInstrumented(value)) { // automatically instrument the function\n      return FuncType.of(value);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      path = path || [displayName];\n      assert(FuncType.is(value), function () { return 'Invalid value ' + assert.stringify(value) + ' supplied to ' + path.join('/'); });\n    }\n\n    return value;\n  }\n\n  FuncType.meta = {\n    kind: 'func',\n    domain: domain,\n    codomain: codomain,\n    name: name,\n    identity: true\n  };\n\n  FuncType.displayName = displayName;\n\n  FuncType.is = function (x) {\n    return isInstrumented(x) &&\n      x.instrumentation.domain.length === domainLength &&\n      x.instrumentation.domain.every(function (type, i) {\n        return type === domain[i];\n      }) &&\n      x.instrumentation.codomain === codomain;\n  };\n\n  FuncType.of = function (f, curried) {\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(FunctionType.is(f), function () { return 'Invalid argument f supplied to func.of ' + displayName + ' (expected a function)'; });\n      assert(isNil(curried) || isBoolean(curried), function () { return 'Invalid argument curried ' + assert.stringify(curried) + ' supplied to func.of ' + displayName + ' (expected a boolean)'; });\n    }\n\n    if (FuncType.is(f)) { // makes FuncType.of idempotent\n      return f;\n    }\n\n    function fn() {\n      var args = Array.prototype.slice.call(arguments);\n      var argsLength = args.length;\n\n      if (process.env.NODE_ENV !== 'production') {\n        // type-check arguments\n        var tupleLength = curried ? argsLength : Math.max(argsLength, optionalArgumentsIndex);\n        tuple(domain.slice(0, tupleLength), 'arguments of function ' + displayName)(args);\n      }\n\n      if (curried && argsLength < domainLength) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(argsLength > 0, 'Invalid arguments.length = 0 for curried function ' + displayName);\n        }\n        var g = Function.prototype.bind.apply(f, [this].concat(args));\n        var newDomain = func(domain.slice(argsLength), codomain);\n        return newDomain.of(g, true);\n      }\n      else {\n        return create(codomain, f.apply(this, args));\n      }\n    }\n\n    fn.instrumentation = {\n      domain: domain,\n      codomain: codomain,\n      f: f\n    };\n\n    fn.displayName = getFunctionName(f);\n\n    return fn;\n\n  };\n\n  return FuncType;\n\n}\n\nfunc.getDefaultName = getDefaultName;\nfunc.getOptionalArgumentsIndex = getOptionalArgumentsIndex;\nmodule.exports = func;\n"]}]