["a137b0289a5f1446d4d76ed9b7d34dd3fc1be9bc","a8ebb6fcb194e970ea202097572b24b3cbf5f631",["react","react-native","react-native-vector-icons/Ionicons","react-native-modalbox","lodash"],[86,183,225,365,501],{"version":3,"sources":["/var/www/geruapp/src/components/ModalPicker.js"],"names":["ModalPicker","createClass","propTypes","style","func","disabled","bool","options","array","selectedIndex","number","onChange","onClosed","label","initLabel","string","isOpen","title","closed","closeAfterChoosed","selectedOption","any","identity","multiple","getDefaultProps","getInitialState","loaded","setChoosed","item","props","forceUpdate","refs","modal","close","_renderItemStyle","isSelected","forEach","option","styles","regularOption","Object","render","modal4","height","header","closeBtn","scrollView","map","i","create","flex","flexDirection","justifyContent","alignItems","marginLeft","padding","backgroundColor","fontFamily","fontSize","color"],"mappings":"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","sourcesContent":["import React, { Component, PropTypes, Animated } from 'react'\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Platform,\n  ScrollView,\n} from 'react-native'\n\nimport Icon from 'react-native-vector-icons/Ionicons'\nimport Modal from 'react-native-modalbox'\nimport _ from 'lodash'\n\nexport default ModalPicker = React.createClass({\n\tpropTypes: {\n\t\tstyle: PropTypes.func,\n\t\tdisabled: PropTypes.bool,\n\t\toptions: PropTypes.array,\n\t\tselectedIndex: PropTypes.number,\n\t\tonChange: PropTypes.func,\n\t\tonClosed: PropTypes.func,\n\t\tlabel: PropTypes.func,\n\t\tinitLabel: PropTypes.string,\n\t\tisOpen: PropTypes.bool,\n\t\ttitle: PropTypes.string,\n\t\tclosed: PropTypes.func,\n\t\tcloseAfterChoosed: PropTypes.bool,\n\t\tselectedOption: PropTypes.any,\n\t\tidentity: PropTypes.string,\n\t\tmultiple: PropTypes.bool,\n  \t},\n\n  \tgetDefaultProps: function () {\n\t    return {\n\t      selectedIndex: -1,\n\t      selectedOption: -1,\n\t      initLabel: 'Сонгох',\n\t      onChange: ()=> {},\n\t      onClosed: ()=> {},\n\t      disabled: false,\n\t      options: [],\n\t      closed: null,\n\t      closeAfterChoosed: true,\n\t      multiple: false,\n\t    }\n\t},\n\n\tgetInitialState() {\n\t    return {\n\t    \tloaded: false,\n\t    }\n\t},\n\n\tsetChoosed(item) {\n\t\tthis.props.onChange(item)\n\t\tif(this.props.multiple)\n\t\t\tthis.forceUpdate()\n\t\tif(this.props.closeAfterChoosed) \n\t\t\tthis.closed()\n\t},\n\n\tclosed() {\n\t\tthis.refs.modal.close()\n\t\t//this.props.closed()\n\t},\n\n\t_renderItemStyle(item) {\n\t\tif(this.props.multiple) {\n\t\t\tvar isSelected = false\n\t\t\t_.forEach(this.props.selectedOption, (option) => {\n\t\t\t\tif(option[this.props.identity] == item[this.props.identity]) {\n\t\t\t\t\tisSelected = true\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t    })\n\n\t\t    return isSelected ? styles.selectedOption : styles.regularOption\n\t\t}\n\n\t\tif(item instanceof Object) {\n\t\t\treturn this.props.selectedOption === item[this.props.identity] ? styles.selectedOption : styles.regularOption\n\t\t}\n\t\t\n\t\treturn this.props.selectedOption == item ? styles.selectedOption : styles.regularOption\n\t},\n\n\trender() {\n\t\treturn <Modal swipeToClose={false} \n\t\t              animationDuration={200}\n\t\t              isOpen={this.props.isOpen} \n\t\t              ref={\"modal\"}\n\t\t              onClosed={this.props.onClosed}\n\t\t              style={[styles.modal, styles.modal4]} \n\t\t              position={\"bottom\"}>\n\t\t        <View style={{height: 70}}>\n\t\t\t\t\t<View style={styles.header}>\n\t\t\t\t\t\t<TouchableOpacity onPress={this.closed}>\n\t\t\t\t\t\t\t<Icon name=\"md-close\"\n\t\t\t\t\t\t\t\t  color=\"#b5b5b5\"\n\t\t\t\t\t\t\t\t  size={30} \n\t\t\t\t\t\t\t\t  style={styles.closeBtn}/>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t<Text style={styles.title}>{this.props.title}</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t<ScrollView\n\t\t          automaticallyAdjustContentInsets={false}\n\t\t          style={styles.scrollView}>\n\t\t            \n\t\t          {\n\t\t          \tthis.props.options.map((item, i) => (\n\n\t\t          \t\t<TouchableOpacity key={i} onPress={() => this.setChoosed(item)} style={styles.item}>\n\t\t          \t\t\t<Text style = {[\n\t\t          \t\t\t\tstyles.label, \n\t\t          \t\t\t\tthis._renderItemStyle(item)\n\t\t          \t\t\t]}>{this.props.label(item)}</Text>\n\t\t\t\t\t    </TouchableOpacity>\n\n\t\t          \t))\n\t\t          }\n\n\t\t            \n\t\t        </ScrollView>\n\t\t\t</Modal>\n\t}\n})\n\nvar styles = StyleSheet.create({\n\tmodal: {\n\t\theight: 300,\n  \t},\n\n  \tmodal4: {\n\n  \t},\n\n  \theader: {\n  \t\tflex: 1,\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        marginLeft: 10,\n  \t},\n\n  \tscrollView: {\n\t    padding: 20,\n    },\n\n    item: {\n    \theight: 50,\n    \tbackgroundColor: 'rgba(0,0,0,0)',\n    },\n\n  \ttitle: {\n  \t\tmarginLeft: 10,\n  \t\tfontFamily: 'Lato-Black',\n  \t\tfontSize: 20,\n  \t\tcolor: '#3e474f',\n  \t},\n\n\tcloseBtn: {\n\n\t},\n\n\tlabel: {\n\t\tfontSize: 17,\n\t\tbackgroundColor: 'rgba(0,0,0,0)',\n\t},\n\n\tselectedOption: {\n\t\tfontFamily: 'Lato-Black',\n\t\tcolor: '#3e474f'\n\t}, \n\n\tregularOption: {\n\t\tcolor: '#b5b5b5',\n\t\tfontFamily: 'Lato-Medium'\n\t}\n})"]}]