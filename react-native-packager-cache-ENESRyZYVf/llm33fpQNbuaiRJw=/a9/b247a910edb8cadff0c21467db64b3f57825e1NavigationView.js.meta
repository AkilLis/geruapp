["3a440e31a5489229acea85a82335fdf2482be119","60e426ad9d610cd03cbae48837a376b8e2372908",["react-native","./NavigationContainer","react","./NavigationScenesReducer","prop-types"],[39,99,145,180,227,287,342],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-experimental-navigation/NavigationView.js"],"names":["Animated","require","NavigationContainer","React","StyleSheet","View","NavigationScenesReducer","PropTypes","NavigationView","props","context","layout","initWidth","initHeight","isMeasured","width","Value","height","navigationState","_position","index","state","scenes","nextProps","setState","setValue","_onLayout","bind","onNavigate","sceneProps","position","scene","style","_renderScene","child","renderScene","key","styles","event","nativeEvent","PureComponent","propTypes","object","isRequired","func","create","bottom","left","right","top","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule NavigationView\n * @flow\n */\n'use strict';\n\nconst Animated = require('react-native').Animated;\nconst NavigationContainer = require('./NavigationContainer');\nconst React = require('react');\nconst StyleSheet = require('react-native').StyleSheet;\nconst View = require('react-native').View;\nconst NavigationScenesReducer = require('./NavigationScenesReducer');\n\nimport type {\n  NavigationActionCaller,\n  NavigationAnimatedValue,\n  NavigationLayout,\n  NavigationParentState,\n  NavigationScene,\n  NavigationSceneRenderer,\n  NavigationSceneRendererProps,\n} from 'NavigationTypeDefinition';\n\ntype Props = {\n  navigationState: NavigationParentState,\n  onNavigate: NavigationActionCaller,\n  renderScene: NavigationSceneRenderer,\n  style: any,\n};\n\ntype State = {\n  layout: NavigationLayout,\n  scenes: Array<NavigationScene>,\n};\n\nconst PropTypes = require('prop-types');\n\n/**\n * A simple view that will render a scene for the currently focused sub-state.\n * The most common use-case is for tabs, where no transition is needed\n */\nclass NavigationView extends React.PureComponent<any, Props, any> {\n  _onLayout: (event: any) => void;\n  _position: NavigationAnimatedValue;\n\n  props: Props;\n  state: State;\n\n  static propTypes = {\n    navigationState: PropTypes.object.isRequired,\n    onNavigate: PropTypes.func.isRequired,\n    renderScene: PropTypes.func.isRequired,\n  };\n\n  constructor(props: Props, context: any) {\n    super(props, context);\n\n    const layout = {\n      initWidth: 0,\n      initHeight: 0,\n      isMeasured: false,\n      width: new Animated.Value(0),\n      height: new Animated.Value(0),\n    };\n\n    const {navigationState} = this.props;\n\n    this._position = new Animated.Value(navigationState.index);\n\n    this.state = {\n      layout,\n      scenes: NavigationScenesReducer([], navigationState),\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props): void {\n    if (nextProps.navigationState !== this.props.navigationState) {\n      const {navigationState} = nextProps;\n      this.setState(\n        {\n          scenes: NavigationScenesReducer(\n            this.state.scenes,\n            navigationState,\n            null, // There will be no transtion.\n          ),\n        },\n        () => {\n          this._position.setValue(navigationState.index);\n        },\n      );\n    }\n  }\n\n  componentWillMount(): void {\n    this._onLayout = this._onLayout.bind(this);\n  }\n\n  render(): ReactElement {\n    const {\n      navigationState,\n      onNavigate\n    } = this.props;\n\n    const {\n      layout,\n      scenes,\n    } = this.state;\n\n    const sceneProps = {\n      layout,\n      navigationState: navigationState,\n      onNavigate: onNavigate,\n      position: this._position,\n      scene: scenes[navigationState.index],\n      scenes,\n    };\n\n    return (\n      <View\n        onLayout={this._onLayout}\n        style={this.props.style}>\n        {this._renderScene(sceneProps)}\n      </View>\n    );\n  }\n\n  _renderScene(props: NavigationSceneRendererProps): ?ReactElement {\n\n    const child = this.props.renderScene(props);\n    if (child === null) {\n      return null;\n    }\n    return <View key={props.scene.key} style={styles.scene}>{child}</View>;\n  }\n\n  _onLayout(event: any): void {\n    const {height, width} = event.nativeEvent.layout;\n\n    const layout = {\n      ...this.state.layout,\n      initHeight: height,\n      initWidth: width,\n      isMeasured: true,\n    };\n\n    layout.height.setValue(height);\n    layout.width.setValue(width);\n\n    this.setState({ layout });\n  }\n}\n\nconst styles = StyleSheet.create({\n  scene: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n});\n\nmodule.exports = NavigationContainer.create(NavigationView);\n"]}]