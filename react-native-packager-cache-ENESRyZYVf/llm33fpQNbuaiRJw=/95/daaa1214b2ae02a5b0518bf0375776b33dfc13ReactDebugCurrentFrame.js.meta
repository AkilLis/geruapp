["a721432dac61eb60cdf2fe3daace0fa5cfa37bcd","430f632ab49fdac4c967cdad931a9fd298cc7479",["./ReactComponentTreeHook","./ReactFiberComponentTreeHook"],[121,303],{"version":3,"sources":["/var/www/geruapp/node_modules/react/lib/ReactDebugCurrentFrame.js"],"names":["ReactDebugCurrentFrame","process","env","NODE_ENV","_require","require","getStackAddendumByID","getCurrentStackAddendum","_require2","getStackAddendumByWorkInProgressFiber","current","element","getStackAddendum","stack","debugID","tag","workInProgress","module","exports"],"mappings":";;AAWA;;AAEA,IAAIA,yBAAyB,EAA7B;;AAEA,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAIC,WAAWC,QAAQ,0BAAR,CAAf;AAAA,MACIC,uBAAuBF,SAASE,oBADpC;AAAA,MAEIC,0BAA0BH,SAASG,uBAFvC;;AAIA,MAAIC,YAAYH,QAAQ,+BAAR,CAAhB;AAAA,MACII,wCAAwCD,UAAUC,qCADtD;;AAMAT,yBAAuBU,OAAvB,GAAiC,IAAjC;;AAGAV,yBAAuBW,OAAvB,GAAiC,IAAjC;;AAEAX,yBAAuBY,gBAAvB,GAA0C,YAAY;AACpD,QAAIC,QAAQ,IAAZ;AACA,QAAIH,UAAUV,uBAAuBU,OAArC;AACA,QAAIC,UAAUX,uBAAuBW,OAArC;AACA,QAAID,YAAY,IAAhB,EAAsB;AACpB,UAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAE/B,YAAII,UAAUJ,OAAd;AACAG,gBAAQP,qBAAqBQ,OAArB,CAAR;AACD,OAJD,MAIO,IAAI,OAAOJ,QAAQK,GAAf,KAAuB,QAA3B,EAAqC;AAI1C,YAAIC,iBAAiBN,OAArB;AACAG,gBAAQJ,sCAAsCO,cAAtC,CAAR;AACD;AACF,KAZD,MAYO,IAAIL,YAAY,IAAhB,EAAsB;AAC3BE,cAAQN,wBAAwBI,OAAxB,CAAR;AACD;AACD,WAAOE,KAAP;AACD,GApBD;AAqBD;;AAEDI,OAAOC,OAAP,GAAiBlB,sBAAjB","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactDebugCurrentFrame = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var _require = require('./ReactComponentTreeHook'),\n      getStackAddendumByID = _require.getStackAddendumByID,\n      getCurrentStackAddendum = _require.getCurrentStackAddendum;\n\n  var _require2 = require('./ReactFiberComponentTreeHook'),\n      getStackAddendumByWorkInProgressFiber = _require2.getStackAddendumByWorkInProgressFiber;\n\n  // Component that is being worked on\n\n\n  ReactDebugCurrentFrame.current = null;\n\n  // Element that is being cloned or created\n  ReactDebugCurrentFrame.element = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = null;\n    var current = ReactDebugCurrentFrame.current;\n    var element = ReactDebugCurrentFrame.element;\n    if (current !== null) {\n      if (typeof current === 'number') {\n        // DebugID from Stack.\n        var debugID = current;\n        stack = getStackAddendumByID(debugID);\n      } else if (typeof current.tag === 'number') {\n        // This is a Fiber.\n        // The stack will only be correct if this is a work in progress\n        // version and we're calling it during reconciliation.\n        var workInProgress = current;\n        stack = getStackAddendumByWorkInProgressFiber(workInProgress);\n      }\n    } else if (element !== null) {\n      stack = getCurrentStackAddendum(element);\n    }\n    return stack;\n  };\n}\n\nmodule.exports = ReactDebugCurrentFrame;"]}]