["136dfb603ed224a340e804de7fdd71b960df6b94","48c5b30c9790041032d3098bb348df861e78e8b3",["./authInitialState","../components/fieldValidation","./authFormValidation","./authConstants"],[145,281,429,569],{"version":3,"sources":["/var/www/geruapp/src/auth/authReducer.js"],"names":["authReducer","initialState","state","action","mergeDeep","type","nextState","setIn","payload","field","value","form","JSON","parse","auth","next","disabled","error","isValid","isFetching","fields","username","usernameHasError","email","emailHasError","password","passwordHasError","passwordAgain","passwordAgainHasError"],"mappings":"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","sourcesContent":["/**\n * # authReducer.js\n *\n * The reducer for all the actions from the various log states\n */\n'use strict'\n/**\n * ## Imports\n * The InitialState for auth\n * fieldValidation for validating the fields\n * formValidation for setting the form's valid flag\n */\nimport InitialState from './authInitialState'\nimport fieldValidation from '../components/fieldValidation'\nimport formValidation from './authFormValidation'\n\n/**\n * ## Auth actions\n */\nimport {\n  SESSION_TOKEN_REQUEST,\n  SESSION_TOKEN_SUCCESS,\n  SESSION_TOKEN_FAILURE,\n\n  DELETE_TOKEN_REQUEST,\n  DELETE_TOKEN_SUCCESS,\n\n  LOGOUT,\n  REGISTER,\n  LOGIN,\n  FORGOT_PASSWORD,\n\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAILURE,\n\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n\n  ON_AUTH_FORM_FIELD_CHANGE,\n  SIGNUP_REQUEST,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAILURE,\n\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAILURE,\n\n  SET_STATE\n} from './authConstants'\n\nconst initialState = new InitialState()\n/**\n * ## authReducer function\n * @param {Object} state - initialState\n * @param {Object} action - type and payload\n */\nexport default function authReducer (state = initialState, action) {\n  if (!(state instanceof InitialState)) return initialState.mergeDeep(state)\n\n  switch (action.type) {\n    /**\n     * ### Requests start\n     * set the form to fetching and clear any errors\n     */\n    case SESSION_TOKEN_REQUEST:\n    case SIGNUP_REQUEST:\n    case LOGOUT_REQUEST:\n    case LOGIN_REQUEST:\n    case RESET_PASSWORD_REQUEST: {\n      let nextState = state\n        .setIn(['form', 'isFetching'], true)\n        .setIn(['form', 'error'], null)\n      return nextState\n    }\n\n    /**\n     * ### Logout state\n     * The logged in user logs out\n     * Clear the form's error and all the fields\n     */\n    case LOGOUT:\n      return formValidation(\n      state.setIn(['form', 'state'], action.type)\n        .setIn(['form', 'error'], null)\n        .setIn(['form', 'fields', 'username'], '')\n        .setIn(['form', 'fields', 'email'], '')\n        .setIn(['form', 'fields', 'password'], '')\n        .setIn(['form', 'fields', 'passwordAgain'], '')\n    )\n\n    /**\n     * ### Loggin in state\n     * The user isn't logged in, and needs to\n     * login, register or reset password\n     *\n     * Set the form state and clear any errors\n     */\n    case LOGIN:\n    case REGISTER:\n    case FORGOT_PASSWORD:\n      return formValidation(\n      state.setIn(['form', 'state'], action.type)\n        .setIn(['form', 'error'], null)\n    )\n\n    /**\n     * ### Auth form field change\n     *\n     * Set the form's field with the value\n     * Clear the forms error\n     * Pass the fieldValidation results to the\n     * the formValidation\n     */\n    case ON_AUTH_FORM_FIELD_CHANGE: {\n      const {field, value} = action.payload\n      let nextState = state.setIn(['form', 'fields', field], value)\n          .setIn(['form', 'error'], null)\n\n      return formValidation(\n      fieldValidation(nextState, action)\n      , action)\n    }\n    /**\n     * ### Requests end, good or bad\n     * Set the fetching flag so the forms will be enabled\n     */\n    case SESSION_TOKEN_SUCCESS:\n    case SESSION_TOKEN_FAILURE:\n    case SIGNUP_SUCCESS:\n    case LOGIN_SUCCESS:\n    case LOGOUT_SUCCESS:\n    case RESET_PASSWORD_SUCCESS:\n      return state.setIn(['form', 'isFetching'], false)\n\n    /**\n     *\n     * The fetching is done, but save the error\n     * for display to the user\n     */\n    case SIGNUP_FAILURE:\n    case LOGOUT_FAILURE:\n    case LOGIN_FAILURE:\n    case RESET_PASSWORD_FAILURE:\n      return state.setIn(['form', 'isFetching'], false)\n      .setIn(['form', 'error'], action.payload)\n\n    /**\n     * ### Hot Loading support\n     *\n     * Set all the field values from the payload\n     */\n    case SET_STATE:\n      var form = JSON.parse(action.payload).auth.form\n\n      var next = state.setIn(['form', 'state'], form.state)\n          .setIn(['form', 'disabled'], form.disabled)\n          .setIn(['form', 'error'], form.error)\n          .setIn(['form', 'isValid'], form.isValid)\n          .setIn(['form', 'isFetching'], form.isFetching)\n          .setIn(['form', 'fields', 'username'], form.fields.username)\n          .setIn(['form', 'fields', 'usernameHasError'], form.fields.usernameHasError)\n          .setIn(['form', 'fields', 'email'], form.fields.email)\n          .setIn(['form', 'fields', 'emailHasError'], form.fields.emailHasError)\n          .setIn(['form', 'fields', 'password'], form.fields.password)\n          .setIn(['form', 'fields', 'passwordHasError'], form.fields.passwordHasError)\n          .setIn(['form', 'fields', 'passwordAgain'], form.fields.passwordAgain)\n          .setIn(['form', 'fields', 'passwordAgainHasError'], form.fields.passwordAgainHasError)\n\n      return next\n\n    case DELETE_TOKEN_REQUEST:\n    case DELETE_TOKEN_SUCCESS:\n        /**\n         * no state change, just an ability to track action requests...\n         */\n      return state\n\n  }\n  /**\n   * ## Default\n   */\n  return state\n}"]}]