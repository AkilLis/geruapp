["ddfe4dd6f8c9cb4d1942d0fbad6f1d8ec4d08a0e","7b44c9f06fd33888971739766f0e329d16b6ab8b",["./NavigationFindReducer","./NavigationStateUtils"],[52,115],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-experimental-navigation/NavigationTabsReducer.js"],"names":["NavigationFindReducer","require","NavigationStateUtils","ActionTypes","JUMP_TO","NavigationTabsJumpToAction","index","type","NavigationTabsReducer","key","initialIndex","tabReducers","lastNavState","action","children","map","reducer","lastParentNavState","getParent","jumpToIndex","subReducers","tabReducer","tabIndex","navState","tabAction","parentState","tabState","nextTabState","tabs","selectedTabReducer","splice","unshift","findReducer","JumpToAction","module","exports"],"mappings":";AAWA;;AAEA,IAAMA,wBAAwBC,QAAQ,yBAAR,CAA9B;AACA,IAAMC,uBAAuBD,QAAQ,wBAAR,CAA7B;;AAOA,IAAME,cAAc;AAClBC,WAAS;AADS,CAApB;;AAQA,SAASC,0BAAT,CAAoCC,KAApC,EAAiE;AAC/D,SAAO;AACLC,UAAMJ,YAAYC,OADb;AAELE;AAFK,GAAP;AAID;;AAQD,SAASE,qBAAT,OAAuG;AAAA,MAAvEC,GAAuE,QAAvEA,GAAuE;AAAA,MAAlEC,YAAkE,QAAlEA,YAAkE;AAAA,MAApDC,WAAoD,QAApDA,WAAoD;;AACrG,SAAO,UAASC,YAAT,EAAyCC,MAAzC,EAAwE;AAC7E,QAAI,CAACD,YAAL,EAAmB;AACjBA,qBAAe;AACbE,kBAAUH,YAAYI,GAAZ,CAAgB;AAAA,iBAAWC,QAAQ,IAAR,EAAc,IAAd,CAAX;AAAA,SAAhB,CADG;AAEbV,eAAOI,gBAAgB,CAFV;AAGbD;AAHa,OAAf;AAKD;AACD,QAAMQ,qBAAqBf,qBAAqBgB,SAArB,CAA+BN,YAA/B,CAA3B;AACA,QAAI,CAACC,MAAD,IAAW,CAACI,kBAAhB,EAAoC;AAClC,aAAOL,YAAP;AACD;AACD,QACEC,OAAON,IAAP,KAAgBJ,YAAYC,OAA5B,IACAS,OAAOP,KAAP,KAAiBW,mBAAmBX,KAFtC,EAGE;AACA,aAAOJ,qBAAqBiB,WAArB,CACLF,kBADK,EAELJ,OAAOP,KAFF,CAAP;AAID;AACD,QAAMc,cAAcT,YAAYI,GAAZ,CAAgB,UAACM,UAAD,EAAaC,QAAb,EAA0B;AAC5D,aAAO,UAASC,QAAT,EAAqCC,SAArC,EAAsE;AAC3E,YAAI,CAACD,QAAL,EAAe;AACb,iBAAON,kBAAP;AACD;AACD,YAAMQ,cAAcvB,qBAAqBgB,SAArB,CAA+BK,QAA/B,CAApB;AACA,YAAMG,WAAWD,eAAeA,YAAYX,QAAZ,CAAqBQ,QAArB,CAAhC;AACA,YAAMK,eAAeN,WAAWK,QAAX,EAAqBF,SAArB,CAArB;AACA,YAAIG,gBAAgBD,aAAaC,YAAjC,EAA+C;AAC7C,cAAMC,OAAOH,eAAeA,YAAYX,QAA3B,IAAuC,EAApD;AACAc,eAAKN,QAAL,IAAiBK,YAAjB;AACA,0CACKV,kBADL;AAEEW,sBAFF;AAGEtB,mBAAOgB;AAHT;AAKD;AACD,eAAOL,kBAAP;AACD,OAjBD;AAkBD,KAnBmB,CAApB;AAoBA,QAAIY,qBAAqBT,YAAYU,MAAZ,CAAmBb,mBAAmBX,KAAtC,EAA6C,CAA7C,EAAgD,CAAhD,CAAzB;AACAc,gBAAYW,OAAZ,CAAoB,UAASR,QAAT,EAAqCV,MAArC,EAAmE;AACrF,UAAIU,YAAYV,OAAON,IAAP,KAAgB,YAAhC,EAA8C;AAC5C,eAAOL,qBAAqBiB,WAArB,CACLF,kBADK,EAELP,gBAAgB,CAFX,CAAP;AAID;AACD,aAAOO,kBAAP;AACD,KARD;AASAG,gBAAYW,OAAZ,CAAoBF,kBAApB;AACA,QAAMG,cAAchC,sBAAsBoB,WAAtB,EAAmCH,kBAAnC,CAApB;AACA,WAAOe,YAAYf,kBAAZ,EAAgCJ,MAAhC,CAAP;AACD,GAtDD;AAuDD;;AAEDL,sBAAsByB,YAAtB,GAAqC5B,0BAArC;;AAEA6B,OAAOC,OAAP,GAAiB3B,qBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule NavigationTabsReducer\n * @flow\n */\n'use strict';\n\nconst NavigationFindReducer = require('./NavigationFindReducer');\nconst NavigationStateUtils = require('./NavigationStateUtils');\n\nimport type {\n  NavigationReducer,\n  NavigationState,\n} from 'NavigationTypeDefinition';\n\nconst ActionTypes = {\n  JUMP_TO: 'react-native/NavigationExperimental/tabs-jumpTo',\n};\n\nexport type JumpToAction = {\n  type: typeof ActionTypes.JUMP_TO,\n  index: number,\n};\nfunction NavigationTabsJumpToAction(index: number): JumpToAction {\n  return {\n    type: ActionTypes.JUMP_TO,\n    index,\n  };\n}\n\ntype TabsReducerConfig = {\n  key: string;\n  initialIndex: number;\n  tabReducers: Array<NavigationReducer>;\n};\n\nfunction NavigationTabsReducer({key, initialIndex, tabReducers}: TabsReducerConfig): NavigationReducer {\n  return function(lastNavState: ?NavigationState, action: ?any): NavigationState {\n    if (!lastNavState) {\n      lastNavState = {\n        children: tabReducers.map(reducer => reducer(null, null)),\n        index: initialIndex || 0,\n        key,\n      };\n    }\n    const lastParentNavState = NavigationStateUtils.getParent(lastNavState);\n    if (!action || !lastParentNavState) {\n      return lastNavState;\n    }\n    if (\n      action.type === ActionTypes.JUMP_TO &&\n      action.index !== lastParentNavState.index\n    ) {\n      return NavigationStateUtils.jumpToIndex(\n        lastParentNavState,\n        action.index,\n      );\n    }\n    const subReducers = tabReducers.map((tabReducer, tabIndex) => {\n      return function(navState: ?NavigationState, tabAction: any): NavigationState {\n        if (!navState) {\n          return lastParentNavState;\n        }\n        const parentState = NavigationStateUtils.getParent(navState);\n        const tabState = parentState && parentState.children[tabIndex];\n        const nextTabState = tabReducer(tabState, tabAction);\n        if (nextTabState && tabState !== nextTabState) {\n          const tabs = parentState && parentState.children || [];\n          tabs[tabIndex] = nextTabState;\n          return {\n            ...lastParentNavState,\n            tabs,\n            index: tabIndex,\n          };\n        }\n        return lastParentNavState;\n      };\n    });\n    let selectedTabReducer = subReducers.splice(lastParentNavState.index, 1)[0];\n    subReducers.unshift(function(navState: ?NavigationState, action: any): NavigationState {\n      if (navState && action.type === 'BackAction') {\n        return NavigationStateUtils.jumpToIndex(\n          lastParentNavState,\n          initialIndex || 0\n        );\n      }\n      return lastParentNavState;\n    });\n    subReducers.unshift(selectedTabReducer);\n    const findReducer = NavigationFindReducer(subReducers, lastParentNavState);\n    return findReducer(lastParentNavState, action);\n  };\n}\n\nNavigationTabsReducer.JumpToAction = NavigationTabsJumpToAction;\n\nmodule.exports = NavigationTabsReducer;\n"]}]