["84bd86162c02686027f274c1143ad3252386f4e7","b2cc5bfbc531bf0efe5813e710680f09937d6ca0",["KeyEscapeUtils","ReactFeatureFlags","ReactReconciler","instantiateReactComponent","shouldUpdateReactComponent","traverseAllChildren","fbjs/lib/warning","react/lib/ReactComponentTreeHook"],[46,97,149,210,281,346,392,566,821],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/stack/reconciler/ReactChildReconciler.js"],"names":["KeyEscapeUtils","require","ReactFeatureFlags","ReactReconciler","instantiateReactComponent","shouldUpdateReactComponent","traverseAllChildren","warning","ReactComponentTreeHook","process","env","NODE_ENV","instantiateChild","childInstances","child","name","selfDebugID","keyUnique","undefined","__DEV__","unescape","getStackAddendumByID","ReactChildReconciler","instantiateChildren","nestedChildNodes","transaction","context","childInsts","updateChildren","prevChildren","nextChildren","mountImages","removedNodes","hostParent","hostContainerInfo","prevChild","hasOwnProperty","prevElement","_currentElement","nextElement","receiveComponent","prepareNewChildrenBeforeUnmountInStack","getHostNode","unmountComponent","nextChildInstance","nextChildMountImage","mountComponent","push","unmountChildren","renderedChildren","safely","skipLifecycle","renderedChild","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildReconciler\n */\n\n'use strict';\n\nvar KeyEscapeUtils = require('KeyEscapeUtils');\nvar ReactFeatureFlags = require('ReactFeatureFlags');\nvar ReactReconciler = require('ReactReconciler');\n\nvar instantiateReactComponent = require('instantiateReactComponent');\nvar shouldUpdateReactComponent = require('shouldUpdateReactComponent');\nvar traverseAllChildren = require('traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (\n  typeof process !== 'undefined' &&\n  process.env &&\n  process.env.NODE_ENV === 'test'\n) {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n}\n\nfunction instantiateChild(childInstances, child, name, selfDebugID) {\n  // We found a component instance.\n  var keyUnique = childInstances[name] === undefined;\n  if (__DEV__) {\n    if (!ReactComponentTreeHook) {\n      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n    }\n    if (!keyUnique) {\n      warning(\n        false,\n        'flattenChildren(...): Encountered two children with the same key, ' +\n          '`%s`. Child keys must be unique; when two children share a key, only ' +\n          'the first child will be used.%s',\n        KeyEscapeUtils.unescape(name),\n        ReactComponentTreeHook.getStackAddendumByID(selfDebugID),\n      );\n    }\n  }\n  if (child != null && keyUnique) {\n    childInstances[name] = instantiateReactComponent(child, true);\n  }\n}\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function(\n    nestedChildNodes,\n    transaction,\n    context,\n    selfDebugID, // 0 in production and for roots\n  ) {\n    if (nestedChildNodes == null) {\n      return null;\n    }\n    var childInstances = {};\n\n    if (__DEV__) {\n      traverseAllChildren(\n        nestedChildNodes,\n        (childInsts, child, name) =>\n          instantiateChild(childInsts, child, name, selfDebugID),\n        childInstances,\n      );\n    } else {\n      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n    }\n    return childInstances;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextChildren Flat child element maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function(\n    prevChildren,\n    nextChildren,\n    mountImages,\n    removedNodes,\n    transaction,\n    hostParent,\n    hostContainerInfo,\n    context,\n    selfDebugID, // 0 in production and for roots\n  ) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    if (!nextChildren && !prevChildren) {\n      return;\n    }\n    var name;\n    var prevChild;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (\n        prevChild != null &&\n        shouldUpdateReactComponent(prevElement, nextElement)\n      ) {\n        ReactReconciler.receiveComponent(\n          prevChild,\n          nextElement,\n          transaction,\n          context,\n        );\n        nextChildren[name] = prevChild;\n      } else {\n        if (\n          !ReactFeatureFlags.prepareNewChildrenBeforeUnmountInStack && prevChild\n        ) {\n          removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n          ReactReconciler.unmountComponent(\n            prevChild,\n            false /* safely */,\n            false /* skipLifecycle */,\n          );\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(nextElement, true);\n        nextChildren[name] = nextChildInstance;\n        // Creating mount image now ensures refs are resolved in right order\n        // (see https://github.com/facebook/react/pull/7101 for explanation).\n        var nextChildMountImage = ReactReconciler.mountComponent(\n          nextChildInstance,\n          transaction,\n          hostParent,\n          hostContainerInfo,\n          context,\n          selfDebugID,\n        );\n        mountImages.push(nextChildMountImage);\n        if (\n          ReactFeatureFlags.prepareNewChildrenBeforeUnmountInStack && prevChild\n        ) {\n          removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n          ReactReconciler.unmountComponent(\n            prevChild,\n            false /* safely */,\n            false /* skipLifecycle */,\n          );\n        }\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (\n        prevChildren.hasOwnProperty(name) &&\n        !(nextChildren && nextChildren.hasOwnProperty(name))\n      ) {\n        prevChild = prevChildren[name];\n        removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n        ReactReconciler.unmountComponent(\n          prevChild,\n          false /* safely */,\n          false /* skipLifecycle */,\n        );\n      }\n    }\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function(renderedChildren, safely, skipLifecycle) {\n    for (var name in renderedChildren) {\n      if (renderedChildren.hasOwnProperty(name)) {\n        var renderedChild = renderedChildren[name];\n        ReactReconciler.unmountComponent(renderedChild, safely, skipLifecycle);\n      }\n    }\n  },\n};\n\nmodule.exports = ReactChildReconciler;\n"]}]