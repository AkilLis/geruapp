["3ada723ff8087e9eb3316e83ea91dc091297c420","a484bb2fae19c86976f5c25fa3763fe3b3069a19",["fbjs/lib/warning"],[39],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/fiber/ReactFiberDevToolsHook.js"],"names":["warning","require","rendererID","injectInternals","onCommitRoot","onCommitUnmount","__REACT_DEVTOOLS_GLOBAL_HOOK__","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","internals","root","err","__DEV__","fiber","exports"],"mappings":";;AAYA;;AAEA,IAAIA,UAAUC,QAAQ,kBAAR,CAAd;;AAOA,IAAIC,aAAa,IAAjB;AACA,IAAIC,kBAAkB,IAAtB;AACA,IAAIC,eAAe,IAAnB;AACA,IAAIC,kBAAkB,IAAtB;AACA,IACE,OAAOC,8BAAP,KAA0C,WAA1C,IACAA,+BAA+BC,aAFjC,EAGE;AAAA,MAEEC,MAFF,GAKIF,8BALJ,CAEEE,MAFF;AAAA,MAGEC,iBAHF,GAKIH,8BALJ,CAGEG,iBAHF;AAAA,MAIEC,oBAJF,GAKIJ,8BALJ,CAIEI,oBAJF;;;AAOAP,oBAAkB,yBAASQ,SAAT,EAA4B;AAC5CX,YAAQE,cAAc,IAAtB,EAA4B,oCAA5B;AACAA,iBAAaM,OAAOG,SAAP,CAAb;AACD,GAHD;;AAKAP,iBAAe,sBAASQ,IAAT,EAA0B;AACvC,QAAIV,cAAc,IAAlB,EAAwB;AACtB;AACD;AACD,QAAI;AACFO,wBAAkBP,UAAlB,EAA8BU,IAA9B;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AAEZ,UAAIC,OAAJ,EAAa;AACXd,gBAAQ,KAAR,EAAe,yCAAf,EAA0Da,GAA1D;AACD;AACF;AACF,GAZD;;AAcAR,oBAAkB,yBAASU,KAAT,EAAuB;AACvC,QAAIb,cAAc,IAAlB,EAAwB;AACtB;AACD;AACD,QAAI;AACFQ,2BAAqBR,UAArB,EAAiCa,KAAjC;AACD,KAFD,CAEE,OAAOF,GAAP,EAAY;AAEZ,UAAIC,OAAJ,EAAa;AACXd,gBAAQ,KAAR,EAAe,yCAAf,EAA0Da,GAA1D;AACD;AACF;AACF,GAZD;AAaD;;AAEDG,QAAQb,eAAR,GAA0BA,eAA1B;AACAa,QAAQZ,YAAR,GAAuBA,YAAvB;AACAY,QAAQX,eAAR,GAA0BA,eAA1B","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactFiberDevToolsHook\n * @flow\n */\n\n'use strict';\n\nvar warning = require('fbjs/lib/warning');\n\nimport type {Fiber} from 'ReactFiber';\nimport type {FiberRoot} from 'ReactFiberRoot';\n\ndeclare var __REACT_DEVTOOLS_GLOBAL_HOOK__: Object | void;\n\nlet rendererID = null;\nlet injectInternals = null;\nlet onCommitRoot = null;\nlet onCommitUnmount = null;\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.supportsFiber\n) {\n  let {\n    inject,\n    onCommitFiberRoot,\n    onCommitFiberUnmount,\n  } = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n  injectInternals = function(internals: Object) {\n    warning(rendererID == null, 'Cannot inject into DevTools twice.');\n    rendererID = inject(internals);\n  };\n\n  onCommitRoot = function(root: FiberRoot) {\n    if (rendererID == null) {\n      return;\n    }\n    try {\n      onCommitFiberRoot(rendererID, root);\n    } catch (err) {\n      // Catch all errors because it is unsafe to throw in the commit phase.\n      if (__DEV__) {\n        warning(false, 'React DevTools encountered an error: %s', err);\n      }\n    }\n  };\n\n  onCommitUnmount = function(fiber: Fiber) {\n    if (rendererID == null) {\n      return;\n    }\n    try {\n      onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      // Catch all errors because it is unsafe to throw in the commit phase.\n      if (__DEV__) {\n        warning(false, 'React DevTools encountered an error: %s', err);\n      }\n    }\n  };\n}\n\nexports.injectInternals = injectInternals;\nexports.onCommitRoot = onCommitRoot;\nexports.onCommitUnmount = onCommitUnmount;\n"]}]