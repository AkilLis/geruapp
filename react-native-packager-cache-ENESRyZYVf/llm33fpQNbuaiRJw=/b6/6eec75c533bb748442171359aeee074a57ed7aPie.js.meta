["74309881c1f00eeacfd38679cd0f2ea96f7fbc42","b348afa20ec50e3d80397b2bf540dcf0c7b1d4de",["react","prop-types","react-native","./Shapes/Circle","./Shapes/Sector","./withAnimation"],[120,215,325,365,469,580],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-progress/Pie.js"],"names":["CIRCLE","Math","PI","AnimatedSurface","createAnimatedComponent","Surface","AnimatedSector","styles","create","container","backgroundColor","overflow","ProgressPie","props","animated","borderColor","borderWidth","children","color","progress","rotation","size","style","unfilledColor","restProps","Shape","angle","multiply","radius","offset","top","left","transform","rotate","interpolate","inputRange","outputRange","undefined","propTypes","bool","string","number","node","oneOfType","instanceOf","Value","defaultProps"],"mappings":";;;;;AAAA;;;;AACA;;;;AACA;;AAOA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,SAASC,KAAKC,EAAL,GAAU,CAAzB;;AAEA,IAAMC,kBAAkB,sBAASC,uBAAT,CAAiC,iBAAIC,OAArC,CAAxB;AACA,IAAMC,iBAAiB,sBAASF,uBAAT,kBAAvB;;AAEA,IAAMG,SAAS,wBAAWC,MAAX,CAAkB;AAC/BC,aAAW;AACTC,qBAAiB,aADR;AAETC,cAAU;AAFD;AADoB,CAAlB,CAAf;;IAOaC,W,WAAAA,W;;;;;;;;;;6BAwBF;AAAA,mBAaH,KAAKC,KAbF;AAAA,UAELC,QAFK,UAELA,QAFK;AAAA,UAGLC,WAHK,UAGLA,WAHK;AAAA,UAILC,WAJK,UAILA,WAJK;AAAA,UAKLC,QALK,UAKLA,QALK;AAAA,UAMLC,KANK,UAMLA,KANK;AAAA,UAOLC,QAPK,UAOLA,QAPK;AAAA,UAQLC,QARK,UAQLA,QARK;AAAA,UASLC,IATK,UASLA,IATK;AAAA,UAULC,KAVK,UAULA,KAVK;AAAA,UAWLC,aAXK,UAWLA,aAXK;AAAA,UAYFC,SAZE;;;AAgBP,UAAMnB,UAAUe,WAAWjB,eAAX,GAA6B,iBAAIE,OAAjD;AACA,UAAMoB,QAAQX,WAAWR,cAAX,mBAAd;;AAEA,UAAMoB,QAAQZ,WAAW,sBAASa,QAAT,CAAkBR,QAAlB,EAA4BnB,MAA5B,CAAX,GAAiDmB,WAAWnB,MAA1E;AACA,UAAM4B,SAAUP,OAAO,CAAR,GAAaL,WAA5B;AACA,UAAMa,SAAS;AACbC,aAAKd,WADQ;AAEbe,cAAMf;AAFO,OAAf;;AAKA,aACE;AAAA;AAAA,+BAAM,OAAO,CAACT,OAAOE,SAAR,EAAmBa,KAAnB,CAAb,IAA4CE,SAA5C;AACE;AAAC,iBAAD;AAAA;AACE,mBAAOH,IADT;AAEE,oBAAQA,IAFV;AAGE,mBAAOD,WAAW;AAChBY,yBAAW,CAAC;AACVC,wBAAQb,SAASc,WAAT,CAAqB;AAC3BC,8BAAY,CAAC,CAAD,EAAI,CAAJ,CADe;AAE3BC,+BAAa,CAAC,MAAD,EAAS,QAAT;AAFc,iBAArB;AADE,eAAD;AADK,aAAX,GAOHC;AAVN;AAYGd,0BACC;AACE,oBAAQK,MADV;AAEE,oBAAQC,MAFV;AAGE,kBAAMN;AAHR,YADD,GAMG,KAlBN;AAmBE,wCAAC,KAAD;AACE,oBAAQK,MADV;AAEE,mBAAOF,KAFT;AAGE,oBAAQG,MAHV;AAIE,kBAAMX;AAJR,YAnBF;AAyBGF,wBACC;AACE,oBAAQK,OAAO,CADjB;AAEE,oBAAQN,eAAeG,KAFzB;AAGE,yBAAaF;AAHf,YADD,GAMG;AA/BN,SADF;AAkCGC;AAlCH,OADF;AAsCD;;;;;AAxFUL,W,CACJ0B,S,GAAY;AACjBxB,YAAU,oBAAUyB,IADH;AAEjBxB,eAAa,oBAAUyB,MAFN;AAGjBxB,eAAa,oBAAUyB,MAHN;AAIjBvB,SAAO,oBAAUsB,MAJA;AAKjBvB,YAAU,oBAAUyB,IALH;AAMjBvB,YAAU,oBAAUwB,SAAV,CAAoB,CAC5B,oBAAUF,MADkB,EAE5B,oBAAUG,UAAV,CAAqB,sBAASC,KAA9B,CAF4B,CAApB,CANO;AAUjBzB,YAAU,oBAAUwB,UAAV,CAAqB,sBAASC,KAA9B,CAVO;AAWjBxB,QAAM,oBAAUoB,MAXC;AAYjBnB,SAAO,kBAAKgB,SAAL,CAAehB,KAZL;AAajBC,iBAAe,oBAAUiB;AAbR,C;AADR5B,W,CAiBJkC,Y,GAAe;AACpB9B,eAAa,CADO;AAEpBE,SAAO,sBAFa;AAGpBC,YAAU,CAHU;AAIpBE,QAAM;AAJc,C;kBA0ET,6BAAcT,WAAd,EAA2B,GAA3B,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  ART,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport Circle from './Shapes/Circle';\nimport Sector from './Shapes/Sector';\nimport withAnimation from './withAnimation';\n\nconst CIRCLE = Math.PI * 2;\n\nconst AnimatedSurface = Animated.createAnimatedComponent(ART.Surface);\nconst AnimatedSector = Animated.createAnimatedComponent(Sector);\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n    overflow: 'hidden',\n  },\n});\n\nexport class ProgressPie extends Component {\n  static propTypes = {\n    animated: PropTypes.bool,\n    borderColor: PropTypes.string,\n    borderWidth: PropTypes.number,\n    color: PropTypes.string,\n    children: PropTypes.node,\n    progress: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.instanceOf(Animated.Value),\n    ]),\n    rotation: PropTypes.instanceOf(Animated.Value),\n    size: PropTypes.number,\n    style: View.propTypes.style,\n    unfilledColor: PropTypes.string,\n  };\n\n  static defaultProps = {\n    borderWidth: 1,\n    color: 'rgba(0, 122, 255, 1)',\n    progress: 0,\n    size: 40,\n  };\n\n  render() {\n    const {\n      animated,\n      borderColor,\n      borderWidth,\n      children,\n      color,\n      progress,\n      rotation,\n      size,\n      style,\n      unfilledColor,\n      ...restProps\n    } = this.props;\n\n\n    const Surface = rotation ? AnimatedSurface : ART.Surface;\n    const Shape = animated ? AnimatedSector : Sector;\n\n    const angle = animated ? Animated.multiply(progress, CIRCLE) : progress * CIRCLE;\n    const radius = (size / 2) - borderWidth;\n    const offset = {\n      top: borderWidth,\n      left: borderWidth,\n    };\n\n    return (\n      <View style={[styles.container, style]} {...restProps}>\n        <Surface\n          width={size}\n          height={size}\n          style={rotation ? {\n            transform: [{\n              rotate: rotation.interpolate({\n                inputRange: [0, 1],\n                outputRange: ['0deg', '360deg'],\n              }),\n            }],\n          } : undefined}\n        >\n          {unfilledColor ? (\n            <Circle\n              radius={radius}\n              offset={offset}\n              fill={unfilledColor}\n            />\n          ) : false}\n          <Shape\n            radius={radius}\n            angle={angle}\n            offset={offset}\n            fill={color}\n          />\n          {borderWidth ? (\n            <Circle\n              radius={size / 2}\n              stroke={borderColor || color}\n              strokeWidth={borderWidth}\n            />\n          ) : false}\n        </Surface>\n        {children}\n      </View>\n    );\n  }\n}\n\nexport default withAnimation(ProgressPie, 0.2);\n"]}]