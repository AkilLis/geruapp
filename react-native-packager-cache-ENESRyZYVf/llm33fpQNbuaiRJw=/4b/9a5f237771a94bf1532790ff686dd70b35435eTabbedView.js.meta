["19e82789a4199768003dcea16866c2f5f267f1da","0dc1f20bc7aa9444d3bd3fd66f80109455255fb2",["react","react-native","react-static-container"],[87,184,238],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-router-flux/src/TabbedView.js"],"names":["styles","create","scene","bottom","left","position","right","top","TabbedView","props","context","renderedSceneKeys","renderScene","bind","navigationState","index","isSelected","key","opacity","scenes","children","forEach","item","i","push","style","propTypes","object","isRequired","func"],"mappings":";;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAAS,wBAAWC,MAAX,CAAkB;AAC/BC,SAAO;AACLC,YAAQ,CADH;AAELC,UAAM,CAFD;AAGLC,cAAU,UAHL;AAILC,WAAO,CAJF;AAKLC,SAAK;AALA;AADwB,CAAlB,CAAf;;IAUMC,U;;;AAQJ,sBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,oIACpBD,KADoB,EACbC,OADa;;AAE1B,UAAKC,iBAAL,GAAyB,EAAzB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AAH0B;AAI3B;;;;gCAEWC,e,EAAiBC,K,EAAO;AAClC,UAAMC,aAAaD,UAAU,KAAKN,KAAL,CAAWK,eAAX,CAA2BC,KAAxD;AACA,aACE;AAAA;AAAA;AACE,eAAKD,gBAAgBG,GADvB;AAEE,yBAAeD,aAAa,MAAb,GAAsB,MAFvC;AAGE,iCAAuB,CAACA,UAH1B;AAIE,iBAAO,CACLhB,OAAOE,KADF,EAEL,EAAEgB,SAASF,aAAa,CAAb,GAAiB,CAA5B,EAFK;AAJT;AASE;AAAA;AAAA,YAAiB,cAAcA,UAA/B;AACG,eAAKP,KAAL,CAAWG,WAAX,CAAuBE,eAAvB,EAAwCC,KAAxC;AADH;AATF,OADF;AAeD;;;6BAEQ;AAAA;;AACP,UAAMI,SAAS,EAAf;AADO,kCAEqB,KAAKV,KAAL,CAAWK,eAFhC;AAAA,UAECC,KAFD,yBAECA,KAFD;AAAA,UAEQK,QAFR,yBAEQA,QAFR;;AAGPA,eAASC,OAAT,CAAiB,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC5B,YAAMN,MAAMK,KAAKL,GAAjB;AACA,YAAIM,MAAMR,KAAN,IAAe,CAAC,OAAKJ,iBAAL,CAAuBM,GAAvB,CAApB,EAAiD;AAC/C;AACD;AACD,eAAKN,iBAAL,CAAuBM,GAAvB,IAA8B,IAA9B;AACAE,eAAOK,IAAP,CAAY,OAAKZ,WAAL,CAAiBU,IAAjB,EAAuBC,CAAvB,CAAZ;AACD,OAPD;AAQA,aACE;AAAA;AAAA,UAAM,OAAO,KAAKd,KAAL,CAAWgB,KAAxB;AACGN;AADH,OADF;AAKD;;;;;AAjDGX,U,CAEGkB,S,GAAY;AACjBZ,mBAAiB,iBAAUa,MAAV,CAAiBC,UADjB;AAEjBhB,eAAa,iBAAUiB,IAAV,CAAeD,UAFX;AAGjBH,SAAO,2BAAcA;AAHJ,C;kBAmDNjB,U","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { View, StyleSheet, ViewPropTypes } from 'react-native';\nimport StaticContainer from 'react-static-container';\n\nconst styles = StyleSheet.create({\n  scene: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n});\n\nclass TabbedView extends Component {\n\n  static propTypes = {\n    navigationState: PropTypes.object.isRequired,\n    renderScene: PropTypes.func.isRequired,\n    style: ViewPropTypes.style,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.renderedSceneKeys = {};\n    this.renderScene = this.renderScene.bind(this);\n  }\n\n  renderScene(navigationState, index) {\n    const isSelected = index === this.props.navigationState.index;\n    return (\n      <View\n        key={navigationState.key}\n        pointerEvents={isSelected ? 'auto' : 'none'}\n        removeClippedSubviews={!isSelected}\n        style={[\n          styles.scene,\n          { opacity: isSelected ? 1 : 0 },\n        ]}\n      >\n        <StaticContainer shouldUpdate={isSelected}>\n          {this.props.renderScene(navigationState, index)}\n        </StaticContainer>\n      </View>\n    );\n  }\n\n  render() {\n    const scenes = [];\n    const { index, children } = this.props.navigationState;\n    children.forEach((item, i) => {\n      const key = item.key;\n      if (i !== index && !this.renderedSceneKeys[key]) {\n        return;\n      }\n      this.renderedSceneKeys[key] = true;\n      scenes.push(this.renderScene(item, i));\n    });\n    return (\n      <View style={this.props.style}>\n        {scenes}\n      </View>\n    );\n  }\n\n}\n\nexport default TabbedView;\n"]}]