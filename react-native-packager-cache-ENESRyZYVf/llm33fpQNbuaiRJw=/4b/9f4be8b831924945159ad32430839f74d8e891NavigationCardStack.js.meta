["c921c8bef2772fbd57490ae0bce42244a58740b9","62468aa43f60c9c1150d2d5222689d8a267ab741",["./NavigationAnimatedView","./NavigationCard","./NavigationCardStackStyleInterpolator","./NavigationContainer","./NavigationCardStackPanResponder","./NavigationPropTypes","react","react-native","fbjs/lib/emptyFunction","prop-types"],[53,111,183,260,332,404,450,485,542,594],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-experimental-navigation/NavigationCardStack.js"],"names":["NavigationAnimatedView","require","NavigationCard","NavigationCardStackStyleInterpolator","NavigationContainer","NavigationCardStackPanResponder","NavigationPropTypes","React","StyleSheet","emptyFunction","PropTypes","Directions","NavigationCardStack","props","context","_renderScene","bind","navigationState","renderOverlay","styles","animatedView","style","isVertical","direction","forVertical","forHorizontal","panHandlers","scene","key","renderScene","PureComponent","propTypes","oneOf","HORIZONTAL","VERTICAL","navigationParentState","isRequired","func","defaultProps","thatReturnsNull","create","flex","module","exports"],"mappings":";AAgCA;;AAEA,IAAMA,yBAAyBC,QAAQ,0BAAR,CAA/B;AACA,IAAMC,iBAAiBD,QAAQ,kBAAR,CAAvB;AACA,IAAME,uCAAuCF,QAAQ,wCAAR,CAA7C;AACA,IAAMG,sBAAsBH,QAAQ,uBAAR,CAA5B;AACA,IAAMI,kCAAkCJ,QAAQ,mCAAR,CAAxC;AACA,IAAMK,sBAAsBL,QAAQ,uBAAR,CAA5B;AACA,IAAMM,QAAQN,QAAQ,OAAR,CAAd;AACA,IAAMO,aAAaP,QAAQ,cAAR,EAAwBO,UAA3C;;AAEA,IAAMC,gBAAgBR,QAAQ,wBAAR,CAAtB;;AAEA,IAAMS,YAAYT,QAAQ,YAAR,CAAlB;IACOU,U,GAAcN,+B,CAAdM,U;;IAsCDC,mB;;;AAeJ,+BAAYC,KAAZ,EAA0BC,OAA1B,EAAwC;AAAA;AAAA,iJAChCD,KADgC,EACzBC,OADyB;AAEvC;;;;yCAE0B;AACzB,WAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;;6BAEsB;AACrB,aACE,oBAAC,sBAAD;AACE,yBAAiB,KAAKH,KAAL,CAAWI,eAD9B;AAEE,uBAAe,KAAKJ,KAAL,CAAWK,aAF5B;AAGE,qBAAa,KAAKH,YAHpB;;AAKE,eAAO,CAACI,OAAOC,YAAR,EAAsB,KAAKP,KAAL,CAAWQ,KAAjC;AALT,QADF;AASD;;;iCAEYR,K,EAAmD;AAC9D,UAAMS,aAAa,KAAKT,KAAL,CAAWU,SAAX,KAAyB,UAA5C;;AAEA,UAAMF,QAAQC,aACZnB,qCAAqCqB,WAArC,CAAiDX,KAAjD,CADY,GAEZV,qCAAqCsB,aAArC,CAAmDZ,KAAnD,CAFF;;AAIA,UAAMa,cAAcJ,aAClBjB,gCAAgCmB,WAAhC,CAA4CX,KAA5C,CADkB,GAElBR,gCAAgCoB,aAAhC,CAA8CZ,KAA9C,CAFF;;AAIA,aACE,oBAAC,cAAD,2BACMA,KADN;AAEE,aAAK,UAAUA,MAAMc,KAAN,CAAYC,GAF7B;AAGE,qBAAaF,WAHf;AAIE,qBAAa,KAAKb,KAAL,CAAWgB,WAJ1B;AAKE,eAAOR;AALT,SADF;AASD;;;EAvD+Bd,MAAMuB,a;;AAAlClB,mB,CAGGmB,S,GAAY;AACjBR,aAAWb,UAAUsB,KAAV,CAAgB,CAACrB,WAAWsB,UAAZ,EAAwBtB,WAAWuB,QAAnC,CAAhB,CADM;AAEjBjB,mBAAiBX,oBAAoB6B,qBAApB,CAA0CC,UAF1C;AAGjBlB,iBAAeR,UAAU2B,IAHR;AAIjBR,eAAanB,UAAU2B,IAAV,CAAeD;AAJX,C;AAHfxB,mB,CAUG0B,Y,GAA6B;AAClCf,aAAWZ,WAAWsB,UADY;AAElCf,iBAAeT,cAAc8B;AAFK,C;;;AAgDtC,IAAMpB,SAASX,WAAWgC,MAAX,CAAkB;AAC/BpB,gBAAc;AACZqB,UAAM;AADM;AADiB,CAAlB,CAAf;;AAMAC,OAAOC,OAAP,GAAiBvC,oBAAoBoC,MAApB,CAA2B5B,mBAA3B,CAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Facebook, Inc. (\"Facebook\") owns all right, title and interest, including\n * all intellectual property and other proprietary rights, in and to the React\n * Native CustomComponents software (the \"Software\").  Subject to your\n * compliance with these terms, you are hereby granted a non-exclusive,\n * worldwide, royalty-free copyright license to (1) use and copy the Software;\n * and (2) reproduce and distribute the Software as part of your own software\n * (\"Your Software\").  Facebook reserves all rights not expressly granted to\n * you in this license agreement.\n *\n * THE SOFTWARE AND DOCUMENTATION, IF ANY, ARE PROVIDED \"AS IS\" AND ANY EXPRESS\n * OR IMPLIED WARRANTIES (INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE) ARE DISCLAIMED.\n * IN NO EVENT SHALL FACEBOOK OR ITS AFFILIATES, OFFICERS, DIRECTORS OR\n * EMPLOYEES BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @providesModule NavigationCardStack\n * @flow\n */\n'use strict';\n\nconst NavigationAnimatedView = require('./NavigationAnimatedView');\nconst NavigationCard = require('./NavigationCard');\nconst NavigationCardStackStyleInterpolator = require('./NavigationCardStackStyleInterpolator');\nconst NavigationContainer = require('./NavigationContainer');\nconst NavigationCardStackPanResponder = require('./NavigationCardStackPanResponder');\nconst NavigationPropTypes = require('./NavigationPropTypes');\nconst React = require('react');\nconst StyleSheet = require('react-native').StyleSheet;\n\nconst emptyFunction = require('fbjs/lib/emptyFunction');\n\nconst PropTypes = require('prop-types');\nconst {Directions} = NavigationCardStackPanResponder;\n\nimport type {\n  NavigationParentState,\n  NavigationSceneRenderer,\n  NavigationSceneRendererProps,\n} from 'NavigationTypeDefinition';\n\nimport type {\n  NavigationGestureDirection,\n} from 'NavigationCardStackPanResponder';\n\ntype Props = {\n  direction: NavigationGestureDirection,\n  navigationState: NavigationParentState,\n  renderOverlay: ?NavigationSceneRenderer,\n  renderScene: NavigationSceneRenderer,\n};\n\ntype DefaultProps = {\n  direction: NavigationGestureDirection,\n  renderOverlay: ?NavigationSceneRenderer,\n};\n\n/**\n * A controlled navigation view that renders a stack of cards.\n *\n *     +------------+\n *   +-+            |\n * +-+ |            |\n * | | |            |\n * | | |  Focused   |\n * | | |   Card     |\n * | | |            |\n * +-+ |            |\n *   +-+            |\n *     +------------+\n */\nclass NavigationCardStack extends React.PureComponent<DefaultProps, Props, void> {\n  _renderScene : NavigationSceneRenderer;\n\n  static propTypes = {\n    direction: PropTypes.oneOf([Directions.HORIZONTAL, Directions.VERTICAL]),\n    navigationState: NavigationPropTypes.navigationParentState.isRequired,\n    renderOverlay: PropTypes.func,\n    renderScene: PropTypes.func.isRequired,\n  };\n\n  static defaultProps: DefaultProps = {\n    direction: Directions.HORIZONTAL,\n    renderOverlay: emptyFunction.thatReturnsNull,\n  };\n\n  constructor(props: Props, context: any) {\n    super(props, context);\n  }\n\n  componentWillMount(): void {\n    this._renderScene = this._renderScene.bind(this);\n  }\n\n  render(): ReactElement {\n    return (\n      <NavigationAnimatedView\n        navigationState={this.props.navigationState}\n        renderOverlay={this.props.renderOverlay}\n        renderScene={this._renderScene}\n        // $FlowFixMe - style should be declared\n        style={[styles.animatedView, this.props.style]}\n      />\n    );\n  }\n\n  _renderScene(props: NavigationSceneRendererProps): ReactElement {\n    const isVertical = this.props.direction === 'vertical';\n\n    const style = isVertical ?\n      NavigationCardStackStyleInterpolator.forVertical(props) :\n      NavigationCardStackStyleInterpolator.forHorizontal(props);\n\n    const panHandlers = isVertical ?\n      NavigationCardStackPanResponder.forVertical(props) :\n      NavigationCardStackPanResponder.forHorizontal(props);\n\n    return (\n      <NavigationCard\n        {...props}\n        key={'card_' + props.scene.key}\n        panHandlers={panHandlers}\n        renderScene={this.props.renderScene}\n        style={style}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  animatedView: {\n    flex: 1,\n  },\n});\n\nmodule.exports = NavigationContainer.create(NavigationCardStack);\n"]}]