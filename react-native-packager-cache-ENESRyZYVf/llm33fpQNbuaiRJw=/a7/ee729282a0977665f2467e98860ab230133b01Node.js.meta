["3b5879ead5441192bf317f06ef6d894b1090cd03","59c080dfa9d80e3f0df76355c6982731ae690ce4",["./env","underscore","axios","querystring"],[142,234,340,437],{"version":3,"sources":["/var/www/geruapp/src/Node.js"],"names":["Node","token","isNull","isUndefined","sessionToken","Error","_sessionToken","API_BASE_URL","backend","nodeLocal","node","local","url","remote","data","params","tags","forEach","tag","push","name","get","stringify","page","user_id","filter","post","formData"],"mappings":";AAOA;;;;;;;AAOA;;;;AACA;;;;AACA;;;;AACA;;;;IAEaA,I,WAAAA,I;;;;;;;+BAECC,K,EAAO;;AAEjB,UAAI,CAAC,qBAAEC,MAAF,CAASD,KAAT,CAAD,IAAoB,qBAAEE,WAAF,CAAcF,MAAMG,YAApB,CAAxB,EAA2D;AACzD,cAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AACD;;AAED,WAAKC,aAAL,GAAqB,qBAAEJ,MAAF,CAASD,KAAT,IAAkB,IAAlB,GAAyBA,MAAMG,YAAN,CAAmBA,YAAjE;AACA,WAAKG,YAAL,GAAoB,cAAOC,OAAP,CAAeC,SAAf,GAClB,cAAOC,IAAP,CAAYC,KAAZ,CAAkBC,GADA,GAElB,cAAOF,IAAP,CAAYG,MAAZ,CAAmBD,GAFrB;AAKD;;;0BAEKE,I,EAAM,CAEX;;;sCAEiBC,M,EAAQ;AAExB,UAAIC,OAAO,EAAX;AACA,2BAAEC,OAAF,CAAUF,OAAOC,IAAjB,EAAuB,UAAUE,GAAV,EAAe;AAClCF,aAAKG,IAAL,CAAUD,IAAIE,IAAd;AACH,OAFD;;AAIA,aAAO,gBAAMC,GAAN,CAAU,KAAKd,YAAL,GAAoB,eAApB,GACf,sBAAYe,SAAZ,CAAsB;AACpBC,cAAMR,OAAOQ,IADO;AAEpBP;AAFoB,OAAtB,CADK,CAAP;AAKD;;;6CAEwBF,I,EAAM;AAC7B,aAAO,gBAAMO,GAAN,CAAU,KAAKd,YAAL,GAAoB,eAA9B,EAA+C;AACpDQ,gBAAQD;AAD4C,OAA/C,CAAP;AAGD;;;uCAEkBC,M,EAAQ;AACzB,aAAO,gBAAMM,GAAN,CAAU,KAAKd,YAAL,GAAoB,mBAA9B,EAAmD;AACxDQ;AADwD,OAAnD,CAAP;AAGD;;;kCAEaD,I,EAAM;AAClB,aAAO,gBAAMO,GAAN,CAAU,KAAKd,YAAL,GAAoB,OAApB,GAA8BO,KAAKU,OAAnC,GAA6C,WAAvD,CAAP;AACD;;;4BAGOC,M,EAAQ;AACZ,aAAO,gBAAMJ,GAAN,CAAU,KAAKd,YAAL,GAAoB,MAApB,GAA6B,sBAAYe,SAAZ,CAAsB;AAClEN,cAAMS,OAAOT,IAAP,GAAcS,OAAOT,IAArB,GAA4B;AADgC,OAAtB,CAAvC,EAEF;AACHD,gBAAQU;AADL,OAFE,CAAP;AAKH;;;gCAEWX,I,EAAM;AACd,aAAO,gBAAMY,IAAN,CAAW,KAAKnB,YAAL,GAAoB,aAA/B,EAA8CO,KAAKa,QAAnD,CAAP;AACH;;;;;AAII,IAAIjB,sBAAO,IAAIV,IAAJ,EAAX","sourcesContent":["/**\n * # Parse.js\n *\n * This class interfaces with parse-server using the rest api\n * see [https://parseplatform.github.io/docs/rest/guide/]\n *\n */\n'use strict'\n\n/**\n * ## Imports\n *\n * Config for defaults and underscore for a couple of features\n */\nimport CONFIG from './env'\nimport _ from 'underscore'\nimport axios from 'axios'\nimport querystring from 'querystring'\n\nexport class Node {\n  \n  initialize (token) {\n\n    if (!_.isNull(token) && _.isUndefined(token.sessionToken)) {\n      throw new Error('TokenMissing')\n    }\n\n    this._sessionToken = _.isNull(token) ? null : token.sessionToken.sessionToken\n    this.API_BASE_URL = CONFIG.backend.nodeLocal\n    ? CONFIG.node.local.url\n    : CONFIG.node.remote.url\n\n    //alert(this.API_BASE_URL)\n  }\n\n  login(data) {\n    \n  }\n\n  getShowcaseByTags(params) {\n   /* */\n    var tags = []\n    _.forEach(params.tags, function (tag) {\n        tags.push(tag.name)\n    })\n\n    return axios.get(this.API_BASE_URL + 'showcase/tag?'+ \n      querystring.stringify({\n        page: params.page,\n        tags \n      }))\n  }\n\n  getShowcaseSuggestedTags(data) {\n    return axios.get(this.API_BASE_URL + 'tag/suggested', {\n      params: data\n    })\n  }\n\n  getTagAutoComplete(params) {\n    return axios.get(this.API_BASE_URL + 'tag/auto_complete', { \n      params\n    })\n  }\n\n  getMyBookmark(data) {\n    return axios.get(this.API_BASE_URL + 'user/' + data.user_id + '/bookmark')\n  }\n\n  //tags\n  getTags(filter) {\n      return axios.get(this.API_BASE_URL + 'tag?' + querystring.stringify({\n        tags: filter.tags ? filter.tags : [],\n      }),  {\n        params: filter\n      })\n  }\n\n  saveProject(data) {\n      return axios.post(this.API_BASE_URL + 'api/project', data.formData)\n  }\n  \n}\n\nexport let node = new Node()"]}]