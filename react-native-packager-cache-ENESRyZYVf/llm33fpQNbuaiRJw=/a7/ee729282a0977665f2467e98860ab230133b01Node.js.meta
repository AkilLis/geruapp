["a53cc4b961d3b6be6a6580b53e3e78e90a0beec9","fd0166facc53439e6d8dc59dc4ee3887e5ac00ac",["./env","underscore","axios"],[142,234,340],{"version":3,"sources":["/var/www/geruapp/src/Node.js"],"names":["Node","token","isNull","isUndefined","sessionToken","Error","_sessionToken","API_BASE_URL","backend","nodeLocal","node","local","url","remote","data","get","user_id","params","filter","FormData","append","searchValue","String","tags","post","formData"],"mappings":";AAOA;;;;;;;AAOA;;;;AACA;;;;AACA;;;;IAEaA,I,WAAAA,I;;;;;;;+BAECC,K,EAAO;;AAEjB,UAAI,CAAC,qBAAEC,MAAF,CAASD,KAAT,CAAD,IAAoB,qBAAEE,WAAF,CAAcF,MAAMG,YAApB,CAAxB,EAA2D;AACzD,cAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AACD;;AAED,WAAKC,aAAL,GAAqB,qBAAEJ,MAAF,CAASD,KAAT,IAAkB,IAAlB,GAAyBA,MAAMG,YAAN,CAAmBA,YAAjE;AACA,WAAKG,YAAL,GAAoB,cAAOC,OAAP,CAAeC,SAAf,GAClB,cAAOC,IAAP,CAAYC,KAAZ,CAAkBC,GADA,GAElB,cAAOF,IAAP,CAAYG,MAAZ,CAAmBD,GAFrB;AAKD;;;0BAEKE,I,EAAM,CAEX;;;kCAEaA,I,EAAM;AAClB,aAAO,gBAAMC,GAAN,CAAU,KAAKR,YAAL,GAAoB,OAApB,GAA8BO,KAAKE,OAAnC,GAA6C,WAAvD,CAAP;AACD;;;uCAEkBC,M,EAAQ;AACzB,aAAO,gBAAMF,GAAN,CAAU,KAAKR,YAAL,GAAoB,kBAA9B,EAAkD;AACvDU;AADuD,OAAlD,CAAP;AAGD;;;4BAGOC,M,EAAQ;;AAEZ,UAAIJ,OAAO,IAAIK,QAAJ,EAAX;AACAL,WAAKM,MAAL,CAAY,aAAZ,EAA2BF,OAAOG,WAAlC;AACAP,WAAKM,MAAL,CAAY,MAAZ,EAAoBE,OAAOJ,OAAOK,IAAd,CAApB;;AAEA,aAAO,gBAAMC,IAAN,CAAW,KAAKjB,YAAL,GAAoB,gBAA/B,EAAiDO,IAAjD,CAAP;AACH;;;gCAEWA,I,EAAM;AACd,aAAO,gBAAMU,IAAN,CAAW,KAAKjB,YAAL,GAAoB,aAA/B,EAA8CO,KAAKW,QAAnD,CAAP;AACH;;;;;AAII,IAAIf,sBAAO,IAAIV,IAAJ,EAAX","sourcesContent":["/**\n * # Parse.js\n *\n * This class interfaces with parse-server using the rest api\n * see [https://parseplatform.github.io/docs/rest/guide/]\n *\n */\n'use strict'\n\n/**\n * ## Imports\n *\n * Config for defaults and underscore for a couple of features\n */\nimport CONFIG from './env'\nimport _ from 'underscore'\nimport axios from 'axios'\n\nexport class Node {\n  \n  initialize (token) {\n\n    if (!_.isNull(token) && _.isUndefined(token.sessionToken)) {\n      throw new Error('TokenMissing')\n    }\n\n    this._sessionToken = _.isNull(token) ? null : token.sessionToken.sessionToken\n    this.API_BASE_URL = CONFIG.backend.nodeLocal\n    ? CONFIG.node.local.url\n    : CONFIG.node.remote.url\n\n    //alert(this.API_BASE_URL)\n  }\n\n  login(data) {\n    \n  }\n\n  getMyBookmark(data) {\n    return axios.get(this.API_BASE_URL + 'user/' + data.user_id + '/bookmark')\n  }\n\n  getTagAutoComplete(params) {\n    return axios.get(this.API_BASE_URL + 'tag/autocomplete', {\n      params\n    })\n  }\n\n  //tags\n  getTags(filter) {\n\n      let data = new FormData()\n      data.append('searchValue', filter.searchValue)\n      data.append('tags', String(filter.tags))\n\n      return axios.post(this.API_BASE_URL + 'api/tag/mobile', data)\n  }\n\n  saveProject(data) {\n      return axios.post(this.API_BASE_URL + 'api/project', data.formData)\n  }\n  \n}\n\nexport let node = new Node()"]}]