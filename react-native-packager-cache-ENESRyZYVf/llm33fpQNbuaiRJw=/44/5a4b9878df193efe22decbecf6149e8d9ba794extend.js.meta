["2991f39a1c036222f6b6ec72839771abbc43f8a6","b934bd3c60b63e9e23aa0b0581e62090586ea521",["./assert","./isFunction","./isArray","./mixin","./isStruct","./isInterface","./isObject","./refinement","./decompose"],[21,59,98,132,167,208,249,289,330],{"version":3,"sources":["/var/www/geruapp/node_modules/tcomb/lib/extend.js"],"names":["assert","require","isFunction","isArray","mixin","isStruct","isInterface","isObject","refinement","decompose","compose","predicates","unrefinedType","reduce","type","predicate","getProps","meta","props","getDefaultProps","defaultProps","pushAll","arr","elements","Array","prototype","push","apply","extend","combinator","mixins","options","process","env","NODE_ENV","forEach","x","i","decomposition","getOptions","result","module","exports"],"mappings":"AAAA,IAAIA,SAASC,QAAQ,UAAR,CAAb;AACA,IAAIC,aAAaD,QAAQ,cAAR,CAAjB;AACA,IAAIE,UAAUF,QAAQ,WAAR,CAAd;AACA,IAAIG,QAAQH,QAAQ,SAAR,CAAZ;AACA,IAAII,WAAWJ,QAAQ,YAAR,CAAf;AACA,IAAIK,cAAcL,QAAQ,eAAR,CAAlB;AACA,IAAIM,WAAWN,QAAQ,YAAR,CAAf;AACA,IAAIO,aAAaP,QAAQ,cAAR,CAAjB;AACA,IAAIQ,YAAYR,QAAQ,aAAR,CAAhB;;AAEA,SAASS,OAAT,CAAiBC,UAAjB,EAA6BC,aAA7B,EAA4C;AAC1C,SAAOD,WAAWE,MAAX,CAAkB,UAAUC,IAAV,EAAgBC,SAAhB,EAA2B;AAClD,WAAOP,WAAWM,IAAX,EAAiBC,SAAjB,CAAP;AACD,GAFM,EAEJH,aAFI,CAAP;AAGD;;AAED,SAASI,QAAT,CAAkBF,IAAlB,EAAwB;AACtB,SAAOP,SAASO,IAAT,IAAiBA,IAAjB,GAAwBA,KAAKG,IAAL,CAAUC,KAAzC;AACD;;AAED,SAASC,eAAT,CAAyBL,IAAzB,EAA+B;AAC7B,SAAOP,SAASO,IAAT,IAAiB,IAAjB,GAAwBA,KAAKG,IAAL,CAAUG,YAAzC;AACD;;AAED,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,QAAtB,EAAgC;AAC9BC,QAAMC,SAAN,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2BL,GAA3B,EAAgCC,QAAhC;AACD;;AAED,SAASK,MAAT,CAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,OAApC,EAA6C;AAC3C,MAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzClC,WAAOE,WAAW2B,UAAX,CAAP,EAA+B,YAAY;AAAE,aAAO,kGAAP;AAA4G,KAAzJ;AACA7B,WAAOG,QAAQ2B,MAAR,CAAP,EAAwB,YAAY;AAAE,aAAO,4FAAP;AAAsG,KAA5I;AACD;AACD,MAAIZ,QAAQ,EAAZ;AACA,MAAIO,YAAY,EAAhB;AACA,MAAId,aAAa,EAAjB;AACA,MAAIS,eAAe,EAAnB;AACAU,SAAOK,OAAP,CAAe,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC7B,QAAIC,gBAAgB7B,UAAU2B,CAAV,CAApB;AACA,QAAIxB,gBAAgB0B,cAAc1B,aAAlC;AACA,QAAIoB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzClC,aAAOO,SAASK,aAAT,KAA2BP,SAASO,aAAT,CAA3B,IAAsDN,YAAYM,aAAZ,CAA7D,EAAyF,YAAY;AAAE,eAAO,6BAA6ByB,CAA7B,GAAiC,mIAAxC;AAA8K,OAArR;AACD;AACDhB,YAAQV,UAAR,EAAoB2B,cAAc3B,UAAlC;AACAP,UAAMc,KAAN,EAAaF,SAASJ,aAAT,CAAb;AACAR,UAAMqB,SAAN,EAAiBb,cAAca,SAA/B;AACArB,UAAMgB,YAAN,EAAoBD,gBAAgBP,aAAhB,CAApB,EAAoD,IAApD;AACD,GAVD;AAWAmB,YAAUF,WAAWU,UAAX,CAAsBR,OAAtB,CAAV;AACAA,UAAQX,YAAR,GAAuBhB,MAAMgB,YAAN,EAAoBW,QAAQX,YAA5B,EAA0C,IAA1C,CAAvB;AACA,MAAIoB,SAAS9B,QAAQC,UAAR,EAAoBkB,WAAWX,KAAX,EAAkBa,OAAlB,CAApB,CAAb;AACA3B,QAAMoC,OAAOf,SAAb,EAAwBA,SAAxB;AACA,SAAOe,MAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBd,MAAjB","sourcesContent":["var assert = require('./assert');\nvar isFunction = require('./isFunction');\nvar isArray = require('./isArray');\nvar mixin = require('./mixin');\nvar isStruct = require('./isStruct');\nvar isInterface = require('./isInterface');\nvar isObject = require('./isObject');\nvar refinement = require('./refinement');\nvar decompose = require('./decompose');\n\nfunction compose(predicates, unrefinedType) {\n  return predicates.reduce(function (type, predicate) {\n    return refinement(type, predicate);\n  }, unrefinedType);\n}\n\nfunction getProps(type) {\n  return isObject(type) ? type : type.meta.props;\n}\n\nfunction getDefaultProps(type) {\n  return isObject(type) ? null : type.meta.defaultProps;\n}\n\nfunction pushAll(arr, elements) {\n  Array.prototype.push.apply(arr, elements);\n}\n\nfunction extend(combinator, mixins, options) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(isFunction(combinator), function () { return 'Invalid argument combinator supplied to extend(combinator, mixins, options), expected a function'; });\n    assert(isArray(mixins), function () { return 'Invalid argument mixins supplied to extend(combinator, mixins, options), expected an array'; });\n  }\n  var props = {};\n  var prototype = {};\n  var predicates = [];\n  var defaultProps = {};\n  mixins.forEach(function (x, i) {\n    var decomposition = decompose(x);\n    var unrefinedType = decomposition.unrefinedType;\n    if (process.env.NODE_ENV !== 'production') {\n      assert(isObject(unrefinedType) || isStruct(unrefinedType) || isInterface(unrefinedType), function () { return 'Invalid argument mixins[' + i + '] supplied to extend(combinator, mixins, options), expected an object, struct, interface or a refinement (of struct or interface)'; });\n    }\n    pushAll(predicates, decomposition.predicates);\n    mixin(props, getProps(unrefinedType));\n    mixin(prototype, unrefinedType.prototype);\n    mixin(defaultProps, getDefaultProps(unrefinedType), true);\n  });\n  options = combinator.getOptions(options);\n  options.defaultProps = mixin(defaultProps, options.defaultProps, true);\n  var result = compose(predicates, combinator(props, options));\n  mixin(result.prototype, prototype);\n  return result;\n}\n\nmodule.exports = extend;"]}]