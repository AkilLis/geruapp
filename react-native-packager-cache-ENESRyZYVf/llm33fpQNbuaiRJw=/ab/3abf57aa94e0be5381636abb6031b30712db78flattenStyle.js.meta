["40f80f32789efcc5bfdee60f49077a62a299ff9b","a074e141f9ca19d5f68723dbdda2124070f25030",["ReactNativePropRegistry","fbjs/lib/invariant"],[54,106],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/StyleSheet/flattenStyle.js"],"names":["ReactNativePropRegistry","require","invariant","getStyle","style","getByID","flattenStyle","undefined","Array","isArray","result","i","styleLength","length","computedStyle","key","module","exports"],"mappings":";AAWA;;AAEA,IAAIA,0BAA0BC,QAAQ,yBAAR,CAA9B;AACA,IAAIC,YAAYD,QAAQ,oBAAR,CAAhB;;AAIA,SAASE,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOJ,wBAAwBK,OAAxB,CAAgCD,KAAhC,CAAP;AACD;AACD,SAAOA,KAAP;AACD;;AAED,SAASE,YAAT,CAAsBF,KAAtB,EAAiD;AAC/C,MAAI,CAACA,KAAL,EAAY;AACV,WAAOG,SAAP;AACD;AACDL,YAAUE,UAAU,IAApB,EAA0B,iCAA1B;;AAEA,MAAI,CAACI,MAAMC,OAAN,CAAcL,KAAd,CAAL,EAA2B;AACzB,WAAOD,SAASC,KAAT,CAAP;AACD;;AAED,MAAIM,SAAS,EAAb;AACA,OAAK,IAAIC,IAAI,CAAR,EAAWC,cAAcR,MAAMS,MAApC,EAA4CF,IAAIC,WAAhD,EAA6D,EAAED,CAA/D,EAAkE;AAChE,QAAIG,gBAAgBR,aAAaF,MAAMO,CAAN,CAAb,CAApB;AACA,QAAIG,aAAJ,EAAmB;AACjB,WAAK,IAAIC,GAAT,IAAgBD,aAAhB,EAA+B;AAC7BJ,eAAOK,GAAP,IAAcD,cAAcC,GAAd,CAAd;AACD;AACF;AACF;AACD,SAAOL,MAAP;AACD;;AAEDM,OAAOC,OAAP,GAAiBX,YAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule flattenStyle\n * @flow\n */\n'use strict';\n\nvar ReactNativePropRegistry = require('ReactNativePropRegistry');\nvar invariant = require('fbjs/lib/invariant');\n\nimport type { StyleObj } from 'StyleSheetTypes';\n\nfunction getStyle(style) {\n  if (typeof style === 'number') {\n    return ReactNativePropRegistry.getByID(style);\n  }\n  return style;\n}\n\nfunction flattenStyle(style: ?StyleObj): ?Object {\n  if (!style) {\n    return undefined;\n  }\n  invariant(style !== true, 'style may be false but not true');\n\n  if (!Array.isArray(style)) {\n    return getStyle(style);\n  }\n\n  var result = {};\n  for (var i = 0, styleLength = style.length; i < styleLength; ++i) {\n    var computedStyle = flattenStyle(style[i]);\n    if (computedStyle) {\n      for (var key in computedStyle) {\n        result[key] = computedStyle[key];\n      }\n    }\n  }\n  return result;\n}\n\nmodule.exports = flattenStyle;\n"]}]