["6a8f3146d33e5202fe6650d6cb43a98cd6eff3df","0469dd55a90855ff0906f02f74cb03c798a63dd6",["react","react-redux","redux","react-native-router-flux","../ShowcaseActions","../components/ShowcaseListComponent"],[86,182,220,268,329,468],{"version":3,"sources":["/var/www/geruapp/src/showcase/containers/ShowcaseView.js"],"names":["showcaseActions","mapStateToProps","state","showcase","mapDispatchToProps","dispatch","actions","ShowcaseView","props","onSuggestedTagPressed","bind","getShowcaseSuggestedTags","tag","Promise","resolve","setTagAutocomplete","name","then","res","getPortfolios","get","pageIndex","ShowcaseSearch","portfolios","toggleSearchScene"],"mappings":";;;;AAAA;;;;AACA;;AACA;;AACA;;AAEA;;IAAYA,e;;AACZ;;;;AAGA,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAChC,QAAO;AACNC,YAAUD,MAAMC;AADV,EAAP;AAGA;;AAED,SAASC,kBAAT,CAA6BC,QAA7B,EAAuC;AACtC,QAAO;AACNC,WAAS,+BAAmBN,eAAnB,EAAoCK,QAApC;AADH,EAAP;AAGA;;IAEKE,Y;;;AACL,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACXA,KADW;;AAGjB,QAAKC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BC,IAA3B,OAA7B;AAHiB;AAIlB;;;;uCAEoB;AACjB,QAAKF,KAAL,CAAWF,OAAX,CAAmBK,wBAAnB,CAA4C,KAA5C;AACH;;;wCAEqBC,G,EAAK;AAAA;;AAG1BC,WAAQC,OAAR,CAAgB,KAAKN,KAAL,CAAWF,OAAX,CAAmBS,kBAAnB,CAAsCH,IAAII,IAA1C,CAAhB,EACYC,IADZ,CACiB,UAACC,GAAD,EAAS;AAAA,QAEff,QAFe,GAGrB,OAAKK,KAHgB,CAEfL,QAFe;;;AAKhB,WAAKK,KAAL,CAAWF,OAAX,CAAmBK,wBAAnB,CAA4CC,IAAII,IAAhD;AACA,WAAKR,KAAL,CAAWF,OAAX,CAAmBa,aAAnB,CAAiChB,SAASiB,GAAT,CAAa,MAAb,CAAjC,EAAuD,CAAvD;AACJ,IARN;AASA;;;gCAEaC,S,EAAW;AAAA,OAEvBlB,QAFuB,GAGpB,KAAKK,KAHe,CAEvBL,QAFuB;;;AAKxB,QAAKK,KAAL,CAAWF,OAAX,CAAmBa,aAAnB,CAAiChB,SAASiB,GAAT,CAAa,MAAb,CAAjC,EAAuDC,SAAvD;AACA;;;sCAEmB;AACnB,kCAAQC,cAAR;AACA;;;2BAEQ;AAAA,OAEPnB,QAFO,GAGJ,KAAKK,KAHD,CAEPL,QAFO;;;AAKR,UACC,iEAAuB,YAAY,KAAKK,KAAL,CAAWL,QAAX,CAAoBoB,UAAvD;AACQ,UAAMpB,SAASiB,GAAT,CAAa,MAAb,CADd;AAEQ,mBAAejB,SAASiB,GAAT,CAAa,eAAb,CAFvB;AAGQ,qBAAiB,KAAKD,aAAL,CAAmBT,IAAnB,CAAwB,IAAxB,CAHzB;AAIQ,yBAAqB,KAAKc,iBAAL,CAAuBd,IAAvB,CAA4B,IAA5B,CAJ7B;AAKQ,2BAAuB,KAAKD;AALpC,KADD;AASA;;;;;kBAIa,yBAAQR,eAAR,EAAyBG,kBAAzB,EAA6CG,YAA7C,C","sourcesContent":["import React, { PropTypes, Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Actions } from 'react-native-router-flux' \n\nimport * as showcaseActions from '../ShowcaseActions'\nimport ShowcaseListComponent from '../components/ShowcaseListComponent'\n\n\nfunction mapStateToProps (state) {\n\treturn {\n\t\tshowcase: state.showcase\n\t}\n}\n\nfunction mapDispatchToProps (dispatch) {\n\treturn {\n\t\tactions: bindActionCreators(showcaseActions, dispatch)\n\t}\n}\n\nclass ShowcaseView extends Component {\n\tconstructor(props) {\n\t  super(props);\n\t\n\t  this.onSuggestedTagPressed = this.onSuggestedTagPressed.bind(this)\n\t}\n\n\tcomponentWillMount() {\n\t    this.props.actions.getShowcaseSuggestedTags('hat')\n\t}\n\n\tonSuggestedTagPressed(tag) {\n\t\t\n\n\t\tPromise.resolve(this.props.actions.setTagAutocomplete(tag.name))\n             .then((res) => {\n            let {\n            \tshowcase\n\t\t\t} = this.props\n\t\t\t\n           \tthis.props.actions.getShowcaseSuggestedTags(tag.name)\n           \tthis.props.actions.getPortfolios(showcase.get('tags'), 1)\n      \t})\n\t}\n\n\tgetPortfolios(pageIndex) {\n\t\tlet {\n\t\t\tshowcase\n\t\t} = this.props\n\n\t\tthis.props.actions.getPortfolios(showcase.get('tags'), pageIndex)\n\t}\n\n\ttoggleSearchScene() {\n\t\tActions.ShowcaseSearch()\n\t}\n\n\trender() {\n\t\tlet {\n\t\t\tshowcase\n\t\t} = this.props\n\n\t\treturn (\n\t\t\t<ShowcaseListComponent portfolios={this.props.showcase.portfolios} \n\t\t\t\t\t\t\t\t   tags={showcase.get('tags')}\n\t\t\t\t\t\t\t\t   suggestedTags={showcase.get('suggestedTags')}\n\t\t\t\t\t\t\t\t   onGetPortfolios={this.getPortfolios.bind(this)}\n\t\t\t\t\t\t\t\t   onToggleSearchScene={this.toggleSearchScene.bind(this)}\n\t\t\t\t\t\t\t\t   onSuggestedTagPressed={this.onSuggestedTagPressed}\n\t\t\t/>\t\n\t\t)\n\t}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowcaseView)"]}]