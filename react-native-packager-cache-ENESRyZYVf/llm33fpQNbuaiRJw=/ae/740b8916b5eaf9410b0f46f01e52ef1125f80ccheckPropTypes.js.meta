["ca96ae78201469ec741b83b1cf9fd9e4a6a4aa0c","ddc2903eadc420fc64e3c3607687ff3bc1eb3d1f",["./reactProdInvariant","./ReactPropTypesSecret","fbjs/lib/invariant","fbjs/lib/warning"],[46,107,159,204],{"version":3,"sources":["/var/www/geruapp/node_modules/react/lib/checkPropTypes.js"],"names":["_prodInvariant","require","ReactPropTypesSecret","invariant","warning","loggedTypeFailures","checkPropTypes","typeSpecs","values","location","componentName","getStack","process","env","NODE_ENV","typeSpecName","hasOwnProperty","error","ex","Error","message","stack","module","exports"],"mappings":";;AAUA;;AAEA,IAAIA,iBAAiBC,QAAQ,sBAAR,CAArB;;AAEA,IAAIC,uBAAuBD,QAAQ,wBAAR,CAA3B;;AAEA,IAAIE,YAAYF,QAAQ,oBAAR,CAAhB;AACA,IAAIG,UAAUH,QAAQ,kBAAR,CAAd;;AAEA,IAAII,qBAAqB,EAAzB;;AAaA,SAASC,cAAT,CAAwBC,SAAxB,EAAmCC,MAAnC,EAA2CC,QAA3C,EAAqDC,aAArD,EAAoEC,QAApE,EAA8E;AAC5E,MAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,SAAK,IAAIC,YAAT,IAAyBR,SAAzB,EAAoC;AAClC,UAAIA,UAAUS,cAAV,CAAyBD,YAAzB,CAAJ,EAA4C;AAC1C,YAAIE,KAAJ;;AAIA,YAAI;AAGF,YAAE,OAAOV,UAAUQ,YAAV,CAAP,KAAmC,UAArC,IAAmDH,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCX,UAAU,KAAV,EAAiB,mFAAjB,EAAsGO,iBAAiB,aAAvH,EAAsID,QAAtI,EAAgJM,YAAhJ,CAAxC,GAAwMf,eAAe,IAAf,EAAqBU,iBAAiB,aAAtC,EAAqDD,QAArD,EAA+DM,YAA/D,CAA3P,GAA0U,KAAK,CAA/U;AACAE,kBAAQV,UAAUQ,YAAV,EAAwBP,MAAxB,EAAgCO,YAAhC,EAA8CL,aAA9C,EAA6DD,QAA7D,EAAuE,IAAvE,EAA6EP,oBAA7E,CAAR;AACD,SALD,CAKE,OAAOgB,EAAP,EAAW;AACXD,kBAAQC,EAAR;AACD;AACDN,gBAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCV,QAAQ,CAACa,KAAD,IAAUA,iBAAiBE,KAAnC,EAA0C,oEAAoE,+DAApE,GAAsI,iEAAtI,GAA0M,gEAA1M,GAA6Q,iCAAvT,EAA0VT,iBAAiB,aAA3W,EAA0XD,QAA1X,EAAoYM,YAApY,EAAkZ,OAAOE,KAAzZ,CAAxC,GAA0c,KAAK,CAA/c;AACA,YAAIA,iBAAiBE,KAAjB,IAA0B,EAAEF,MAAMG,OAAN,IAAiBf,kBAAnB,CAA9B,EAAsE;AAGpEA,6BAAmBY,MAAMG,OAAzB,IAAoC,IAApC;;AAEA,cAAIC,QAAQV,WAAWA,UAAX,GAAwB,EAApC;;AAEAC,kBAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCV,QAAQ,KAAR,EAAe,sBAAf,EAAuCK,QAAvC,EAAiDQ,MAAMG,OAAvD,EAAgEC,SAAS,IAAT,GAAgBA,KAAhB,GAAwB,EAAxF,CAAxC,GAAsI,KAAK,CAA3I;AACD;AACF;AACF;AACF;AACF;;AAEDC,OAAOC,OAAP,GAAiBjB,cAAjB","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar loggedTypeFailures = {};\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', location, typeSpecName) : _prodInvariant('84', componentName || 'React class', location, typeSpecName) : void 0;\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error) : void 0;\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '') : void 0;\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;"]}]