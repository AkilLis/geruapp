["6b4b65fc9edc55111e61c56a84b49a5fd10b1c82","45d7213b4f5c5a869a1f7a3bc4ebcf13284e94ee",["fbjs/lib/warning"],[39],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/fiber/ReactFiberStack.js"],"names":["warning","require","valueStack","__DEV__","fiberStack","index","exports","createCursor","defaultValue","current","isEmpty","pop","cursor","fiber","push","value","reset"],"mappings":";;AAYA;;AAQA,IAAMA,UAAUC,QAAQ,kBAAR,CAAhB;;AAEA,IAAMC,aAAyB,EAA/B;;AAEA,IAAIC,OAAJ,EAAa;AACX,MAAIC,aAAkC,EAAtC;AACD;;AAED,IAAIC,QAAQ,CAAC,CAAb;;AAEAC,QAAQC,YAAR,GAAuB,UAAYC,YAAZ,EAA6C;AAClE,SAAO;AACLC,aAASD;AADJ,GAAP;AAGD,CAJD;;AAMAF,QAAQI,OAAR,GAAkB,YAAoB;AACpC,SAAOL,UAAU,CAAC,CAAlB;AACD,CAFD;;AAIAC,QAAQK,GAAR,GAAc,UAAYC,MAAZ,EAAoCC,KAApC,EAAwD;AACpE,MAAIR,QAAQ,CAAZ,EAAe;AACb,QAAIF,OAAJ,EAAa;AACXH,cAAQ,KAAR,EAAe,iBAAf;AACD;AACD;AACD;;AAED,MAAIG,OAAJ,EAAa;AACX,QAAIU,UAAUT,WAAWC,KAAX,CAAd,EAAiC;AAC/BL,cAAQ,KAAR,EAAe,0BAAf;AACD;AACF;;AAEDY,SAAOH,OAAP,GAAiBP,WAAWG,KAAX,CAAjB;;AAEAH,aAAWG,KAAX,IAAoB,IAApB;;AAEA,MAAIF,OAAJ,EAAa;AACXC,eAAWC,KAAX,IAAoB,IAApB;AACD;;AAEDA;AACD,CAvBD;;AAyBAC,QAAQQ,IAAR,GAAe,UACbF,MADa,EAEbG,KAFa,EAGbF,KAHa,EAIP;AACNR;;AAEAH,aAAWG,KAAX,IAAoBO,OAAOH,OAA3B;;AAEA,MAAIN,OAAJ,EAAa;AACXC,eAAWC,KAAX,IAAoBQ,KAApB;AACD;;AAEDD,SAAOH,OAAP,GAAiBM,KAAjB;AACD,CAdD;;AAgBAT,QAAQU,KAAR,GAAgB,YAAiB;AAC/B,SAAOX,QAAQ,CAAC,CAAhB,EAAmB;AACjBH,eAAWG,KAAX,IAAoB,IAApB;;AAEA,QAAIF,OAAJ,EAAa;AACXC,iBAAWC,KAAX,IAAoB,IAApB;AACD;;AAEDA;AACD;AACF,CAVD","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactFiberStack\n * @flow\n */\n\n'use strict';\n\nimport type {Fiber} from 'ReactFiber';\n\nexport type StackCursor<T> = {\n  current: T,\n};\n\nconst warning = require('fbjs/lib/warning');\n\nconst valueStack: Array<any> = [];\n\nif (__DEV__) {\n  var fiberStack: Array<Fiber | null> = [];\n}\n\nlet index = -1;\n\nexports.createCursor = function<T>(defaultValue: T): StackCursor<T> {\n  return {\n    current: defaultValue,\n  };\n};\n\nexports.isEmpty = function(): boolean {\n  return index === -1;\n};\n\nexports.pop = function<T>(cursor: StackCursor<T>, fiber: Fiber): void {\n  if (index < 0) {\n    if (__DEV__) {\n      warning(false, 'Unexpected pop.');\n    }\n    return;\n  }\n\n  if (__DEV__) {\n    if (fiber !== fiberStack[index]) {\n      warning(false, 'Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n\n  valueStack[index] = null;\n\n  if (__DEV__) {\n    fiberStack[index] = null;\n  }\n\n  index--;\n};\n\nexports.push = function<T>(\n  cursor: StackCursor<T>,\n  value: T,\n  fiber: Fiber,\n): void {\n  index++;\n\n  valueStack[index] = cursor.current;\n\n  if (__DEV__) {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n};\n\nexports.reset = function(): void {\n  while (index > -1) {\n    valueStack[index] = null;\n\n    if (__DEV__) {\n      fiberStack[index] = null;\n    }\n\n    index--;\n  }\n};\n"]}]