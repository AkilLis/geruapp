["b2101ec69e1d1e4e3b5e2d956a4169a45e6d082c","eaaa297ab2a5b05ed0f89e68312db7fa4dc90827",["./assert","./isTypeName","./isFunction","./isMaybe","./isIdentity","./Any","./create","./Nil","./forbidNewOperator","./is","./getTypeName"],[21,59,101,140,179,214,245,276,318,359,394],{"version":3,"sources":["/var/www/geruapp/node_modules/tcomb/lib/maybe.js"],"names":["assert","require","isTypeName","isFunction","isMaybe","isIdentity","Any","create","Nil","forbidNewOperator","is","getTypeName","getDefaultName","type","maybe","name","process","env","NODE_ENV","stringify","displayName","identity","Maybe","value","path","meta","kind","x","module","exports"],"mappings":"AAAA,IAAIA,SAASC,QAAQ,UAAR,CAAb;AACA,IAAIC,aAAaD,QAAQ,cAAR,CAAjB;AACA,IAAIE,aAAaF,QAAQ,cAAR,CAAjB;AACA,IAAIG,UAAUH,QAAQ,WAAR,CAAd;AACA,IAAII,aAAaJ,QAAQ,cAAR,CAAjB;AACA,IAAIK,MAAML,QAAQ,OAAR,CAAV;AACA,IAAIM,SAASN,QAAQ,UAAR,CAAb;AACA,IAAIO,MAAMP,QAAQ,OAAR,CAAV;AACA,IAAIQ,oBAAoBR,QAAQ,qBAAR,CAAxB;AACA,IAAIS,KAAKT,QAAQ,MAAR,CAAT;AACA,IAAIU,cAAcV,QAAQ,eAAR,CAAlB;;AAEA,SAASW,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,SAAO,MAAMF,YAAYE,IAAZ,CAAb;AACD;;AAED,SAASC,KAAT,CAAeD,IAAf,EAAqBE,IAArB,EAA2B;;AAEzB,MAAIX,QAAQS,IAAR,KAAiBA,SAASP,GAA1B,IAAiCO,SAASL,GAA9C,EAAmD;AACjD,WAAOK,IAAP;AACD;;AAED,MAAIG,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzClB,WAAOG,WAAWU,IAAX,CAAP,EAAyB,YAAY;AAAE,aAAO,2BAA2Bb,OAAOmB,SAAP,CAAiBN,IAAjB,CAA3B,GAAoD,+DAA3D;AAA6H,KAApK;AACAb,WAAOE,WAAWa,IAAX,CAAP,EAAyB,YAAY;AAAE,aAAO,2BAA2Bf,OAAOmB,SAAP,CAAiBJ,IAAjB,CAA3B,GAAoD,iEAA3D;AAA+H,KAAtK;AACD;;AAED,MAAIK,cAAcL,QAAQH,eAAeC,IAAf,CAA1B;AACA,MAAIQ,WAAWhB,WAAWQ,IAAX,CAAf;;AAEA,WAASS,KAAT,CAAeC,KAAf,EAAsBC,IAAtB,EAA4B;AAC1B,QAAIR,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAIG,QAAJ,EAAc;AACZZ,0BAAkB,IAAlB,EAAwBa,KAAxB;AACD;AACF;AACD,WAAOd,IAAIE,EAAJ,CAAOa,KAAP,IAAgBA,KAAhB,GAAwBhB,OAAOM,IAAP,EAAaU,KAAb,EAAoBC,IAApB,CAA/B;AACD;;AAEDF,QAAMG,IAAN,GAAa;AACXC,UAAM,OADK;AAEXb,UAAMA,IAFK;AAGXE,UAAMA,IAHK;AAIXM,cAAUA;AAJC,GAAb;;AAOAC,QAAMF,WAAN,GAAoBA,WAApB;;AAEAE,QAAMZ,EAAN,GAAW,UAAUiB,CAAV,EAAa;AACtB,WAAOnB,IAAIE,EAAJ,CAAOiB,CAAP,KAAajB,GAAGiB,CAAH,EAAMd,IAAN,CAApB;AACD,GAFD;;AAIA,SAAOS,KAAP;AACD;;AAEDR,MAAMF,cAAN,GAAuBA,cAAvB;AACAgB,OAAOC,OAAP,GAAiBf,KAAjB","sourcesContent":["var assert = require('./assert');\nvar isTypeName = require('./isTypeName');\nvar isFunction = require('./isFunction');\nvar isMaybe = require('./isMaybe');\nvar isIdentity = require('./isIdentity');\nvar Any = require('./Any');\nvar create = require('./create');\nvar Nil = require('./Nil');\nvar forbidNewOperator = require('./forbidNewOperator');\nvar is = require('./is');\nvar getTypeName = require('./getTypeName');\n\nfunction getDefaultName(type) {\n  return '?' + getTypeName(type);\n}\n\nfunction maybe(type, name) {\n\n  if (isMaybe(type) || type === Any || type === Nil) { // makes the combinator idempotent and handle Any, Nil\n    return type;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(isFunction(type), function () { return 'Invalid argument type ' + assert.stringify(type) + ' supplied to maybe(type, [name]) combinator (expected a type)'; });\n    assert(isTypeName(name), function () { return 'Invalid argument name ' + assert.stringify(name) + ' supplied to maybe(type, [name]) combinator (expected a string)'; });\n  }\n\n  var displayName = name || getDefaultName(type);\n  var identity = isIdentity(type);\n\n  function Maybe(value, path) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (identity) {\n        forbidNewOperator(this, Maybe);\n      }\n    }\n    return Nil.is(value) ? value : create(type, value, path);\n  }\n\n  Maybe.meta = {\n    kind: 'maybe',\n    type: type,\n    name: name,\n    identity: identity\n  };\n\n  Maybe.displayName = displayName;\n\n  Maybe.is = function (x) {\n    return Nil.is(x) || is(x, type);\n  };\n\n  return Maybe;\n}\n\nmaybe.getDefaultName = getDefaultName;\nmodule.exports = maybe;\n"]}]