["624475489203587b4584ccc15a81f07be0485318","684ce63e72a9a1ea5014f59bb3a23965178b4dac",["react","./TabBar","./Actions"],[113,205,303],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-router-flux/src/Switch.js"],"names":["Switch","props","navState","navigationState","selector","statem","console","error","index","selectedKey","children","forEach","el","i","default","state","key","active","sceneKey","unmountScenes","setTimeout","onNavigate","propTypes","object","func","any","bool"],"mappings":";;;kBAIwBA,M;;AAJxB;;;;AACA;;;;AACA;;;;AAEe,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACpC,MAAMC,WAAWD,MAAME,eAAvB;;AAEA,MAAMC,WAAWH,MAAMG,QAAvB;AACA,MAAMC,SAASJ,MAAMI,MAArB;AACA,MAAI,CAACD,QAAD,IAAa,CAACC,MAAlB,EAA0BC,QAAQC,KAAR,CAAc,6BAAd;AAC1B,MAAIC,QAAQ,CAAC,CAAb;AACA,MAAIC,oBAAJ;AACA,MAAI,CAACL,QAAL,EAAe;AAEbF,aAASQ,QAAT,CAAkBC,OAAlB,CAA0B,UAACC,EAAD,EAAKC,CAAL,EAAW;AACnC,UAAI,EAAED,GAAGE,OAAH,IAAcF,GAAGG,KAAnB,CAAJ,EAA+B;AAC7BT,gBAAQC,KAAR,4DAAuEK,GAAGI,GAA1E;AACD;AACD,UAAIJ,GAAGE,OAAP,EAAgB;AACdN,gBAAQK,CAAR;AACD,OAFD,MAEO,IAAID,GAAGG,KAAH,CAASE,MAAb,EAAqB;AAC1BT,gBAAQK,CAAR;AACD;AACF,KATD;AAUD,GAZD,MAYO;AACLJ,kBAAcL,SAASH,KAAT,CAAd;AACA,QAAI,CAACQ,WAAL,EAAkBH,QAAQC,KAAR,CAAc,6BAAd;AAClBL,aAASQ,QAAT,CAAkBC,OAAlB,CAA0B,UAACC,EAAD,EAAKC,CAAL,EAAW;AACnC,UAAID,GAAGM,QAAH,KAAgBT,WAApB,EAAiC;AAC/BD,gBAAQK,CAAR;AACD;AACF,KAJD;AAKD;AACD,MAAIL,UAAU,CAAC,CAAf,EAAkBF,QAAQC,KAAR,4BAAkCE,WAAlC;AAClB,MAAIN,2CAAuBD,QAAvB,IAAiCM,YAAjC,GAAJ;;AAEA,MAAIA,UAAUN,SAASM,KAAvB,EAA8B;AAC5B,QAAIP,MAAMkB,aAAV,EAAyB;AACvBC,iBAAW,YAAM;AACf,0BAAQX,WAAR,EAAqB,EAAEU,eAAe,IAAjB,EAArB;AACD,OAFD,EAEG,CAFH;AAGAhB,iDAAuBD,QAAvB,IAAiCQ,UAAU,CAACR,SAASQ,QAAT,CAAkBR,SAASM,KAA3B,CAAD,CAA3C,EAAgFA,OAAO,CAAvF;AACD,KALD,MAKO;AACLY,iBAAW,YAAM;AACf,0BAAQX,WAAR;AACD,OAFD,EAEG,CAFH;AAGD;AACF;;AAED,SACE;AACE,gBAAYR,MAAMoB,UADpB;AAEE,qBAAiBlB;AAFnB,IADF;AAMD;;AAEDH,OAAOsB,SAAP,GAAmB;AACjBnB,mBAAiB,iBAAUoB,MADV;AAEjBF,cAAY,iBAAUG,IAFL;AAGjBpB,YAAU,iBAAUoB,IAHH;AAIjBnB,UAAQ,iBAAUoB,GAJD;AAKjBN,iBAAe,iBAAUO;AALR,CAAnB","sourcesContent":["import React, { PropTypes } from 'react';\nimport TabBar from './TabBar';\nimport Actions from './Actions';\n\nexport default function Switch(props) {\n  const navState = props.navigationState;\n\n  const selector = props.selector;\n  const statem = props.statem;\n  if (!selector && !statem) console.error('Selector should be defined.');\n  let index = -1;\n  let selectedKey;\n  if (!selector) {\n    // support Statem - Harel statecharts machine!\n    navState.children.forEach((el, i) => {\n      if (!(el.default || el.state)) {\n        console.error(`Either default or state should be defined for element=${el.key}`);\n      }\n      if (el.default) {\n        index = i;\n      } else if (el.state.active) {\n        index = i;\n      }\n    });\n  } else {\n    selectedKey = selector(props);\n    if (!selectedKey) console.error('Selector should return key.');\n    navState.children.forEach((el, i) => {\n      if (el.sceneKey === selectedKey) {\n        index = i;\n      }\n    });\n  }\n  if (index === -1) console.error(`A scene for key “${selectedKey}” does not exist.`);\n  let navigationState = { ...navState, index };\n\n  if (index !== navState.index) {\n    if (props.unmountScenes) {\n      setTimeout(() => {\n        Actions[selectedKey]({ unmountScenes: true });\n      }, 0);\n      navigationState = { ...navState, children: [navState.children[navState.index]], index: 0 };\n    } else {\n      setTimeout(() => {\n        Actions[selectedKey]();\n      }, 0);\n    }\n  }\n\n  return (\n    <TabBar\n      onNavigate={props.onNavigate}\n      navigationState={navigationState}\n    />\n  );\n}\n\nSwitch.propTypes = {\n  navigationState: PropTypes.object,\n  onNavigate: PropTypes.func,\n  selector: PropTypes.func,\n  statem: PropTypes.any,\n  unmountScenes: PropTypes.bool,\n};\n"]}]