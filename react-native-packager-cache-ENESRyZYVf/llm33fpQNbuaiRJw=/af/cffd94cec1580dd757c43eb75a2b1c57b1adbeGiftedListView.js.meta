["c311fde69d8a9340dc3f83c3eae5025a1a85ab52","e3e826e7537d42dbb498ad3a6dc3bf297cd27edb",["react","react-native","react-native-gifted-spinner"],[35,69,623],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-gifted-listview/GiftedListView.js"],"names":["React","require","ListView","Platform","TouchableHighlight","View","Text","RefreshControl","MergeRecursive","obj1","obj2","p","constructor","Object","e","GiftedSpinner","GiftedListView","createClass","getDefaultProps","customStyles","initialListSize","firstLoader","pagination","refreshable","refreshableColors","undefined","refreshableProgressBackgroundColor","refreshableSize","refreshableTitle","refreshableTintColor","renderRefreshControl","headerView","sectionHeaderView","scrollEnabled","withSections","onFetch","page","callback","options","paginationFetchingView","paginationAllLoadedView","paginationWaitingView","emptyView","renderSeparator","propTypes","PropTypes","object","number","bool","array","string","func","_setPage","_page","_getPage","_setRows","rows","_rows","_getRows","props","defaultStyles","paginationView","actionsLabel","paginateCallback","state","paginationStatus","refreshCallback","defaultView","defaultViewTitle","separator","getInitialState","ds","DataSource","rowHasChanged","row1","row2","sectionHeaderHasChanged","section1","section2","dataSource","cloneWithRowsAndSections","isRefreshing","cloneWithRows","componentDidMount","_postRefresh","firstLoad","setNativeProps","refs","listview","_refresh","_onRefresh","external","isMounted","setState","_updateRows","_onPaginate","_postPaginate","mergedRows","concat","allLoaded","_renderPaginationView","length","onRefresh","render","rowView","style","height","backgroundColor","fontSize","justifyContent","alignItems","padding","fontWeight","marginBottom","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;;eASIA,QAAQ,cAAR,C;IANFC,Q,YAAAA,Q;IACAC,Q,YAAAA,Q;IACAC,kB,YAAAA,kB;IACAC,I,YAAAA,I;IACAC,I,YAAAA,I;IACAC,c,YAAAA,c;;AAKF,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;AAClC,OAAK,IAAIC,CAAT,IAAcD,IAAd,EAAoB;AAClB,QAAI;AACF,UAAKA,KAAKC,CAAL,EAAQC,WAAR,IAAqBC,MAA1B,EAAmC;AACjCJ,aAAKE,CAAL,IAAUH,eAAeC,KAAKE,CAAL,CAAf,EAAwBD,KAAKC,CAAL,CAAxB,CAAV;AACD,OAFD,MAEO;AACLF,aAAKE,CAAL,IAAUD,KAAKC,CAAL,CAAV;AACD;AACF,KAND,CAME,OAAMG,CAAN,EAAS;AACTL,WAAKE,CAAL,IAAUD,KAAKC,CAAL,CAAV;AACD;AACF;AACD,SAAOF,IAAP;AACD;;AAED,IAAIM,gBAAgBd,QAAQ,6BAAR,CAApB;;AAEA,IAAIe,iBAAiBhB,MAAMiB,WAAN,CAAkB;AAAA;AAErCC,iBAFqC,6BAEnB;AAChB,WAAO;AACLC,oBAAc,EADT;AAELC,uBAAiB,EAFZ;AAGLC,mBAAa,IAHR;AAILC,kBAAY,IAJP;AAKLC,mBAAa,IALR;AAMLC,yBAAmBC,SANd;AAOLC,0CAAoCD,SAP/B;AAQLE,uBAAiBF,SARZ;AASLG,wBAAkBH,SATb;AAULI,4BAAsBJ,SAVjB;AAWLK,4BAAsB,IAXjB;AAYLC,kBAAY,IAZP;AAaLC,yBAAmB,IAbd;AAcLC,qBAAe,IAdV;AAeLC,oBAAc,KAfT;AAgBLC,aAhBK,mBAgBGC,IAhBH,EAgBSC,QAhBT,EAgBmBC,OAhBnB,EAgB4B;AAAED,iBAAS,EAAT;AAAe,OAhB7C;;;AAkBLE,8BAAwB,IAlBnB;AAmBLC,+BAAyB,IAnBpB;AAoBLC,6BAAuB,IApBlB;AAqBLC,iBAAW,IArBN;AAsBLC,uBAAiB;AAtBZ,KAAP;AAwBD,GA3BoC;;;AA6BrCC,aAAW;AACTzB,kBAAcnB,MAAM6C,SAAN,CAAgBC,MADrB;AAET1B,qBAAiBpB,MAAM6C,SAAN,CAAgBE,MAFxB;AAGT1B,iBAAarB,MAAM6C,SAAN,CAAgBG,IAHpB;AAIT1B,gBAAYtB,MAAM6C,SAAN,CAAgBG,IAJnB;AAKTzB,iBAAavB,MAAM6C,SAAN,CAAgBG,IALpB;AAMTxB,uBAAmBxB,MAAM6C,SAAN,CAAgBI,KAN1B;AAOTvB,wCAAoC1B,MAAM6C,SAAN,CAAgBK,MAP3C;AAQTvB,qBAAiB3B,MAAM6C,SAAN,CAAgBK,MARxB;AASTtB,sBAAkB5B,MAAM6C,SAAN,CAAgBK,MATzB;AAUTrB,0BAAsB7B,MAAM6C,SAAN,CAAgBK,MAV7B;AAWTpB,0BAAsB9B,MAAM6C,SAAN,CAAgBM,IAX7B;AAYTpB,gBAAY/B,MAAM6C,SAAN,CAAgBM,IAZnB;AAaTnB,uBAAmBhC,MAAM6C,SAAN,CAAgBM,IAb1B;AAcTlB,mBAAejC,MAAM6C,SAAN,CAAgBG,IAdtB;AAeTd,kBAAclC,MAAM6C,SAAN,CAAgBG,IAfrB;AAgBTb,aAASnC,MAAM6C,SAAN,CAAgBM,IAhBhB;;AAkBTZ,4BAAwBvC,MAAM6C,SAAN,CAAgBM,IAlB/B;AAmBTX,6BAAyBxC,MAAM6C,SAAN,CAAgBM,IAnBhC;AAoBTV,2BAAuBzC,MAAM6C,SAAN,CAAgBM,IApB9B;AAqBTT,eAAW1C,MAAM6C,SAAN,CAAgBM,IArBlB;AAsBTR,qBAAiB3C,MAAM6C,SAAN,CAAgBM;AAtBxB,GA7B0B;;AAsDrCC,UAtDqC,oBAsD5BhB,IAtD4B,EAsDtB;AAAE,SAAKiB,KAAL,GAAajB,IAAb;AAAoB,GAtDA;AAuDrCkB,UAvDqC,sBAuD1B;AAAE,WAAO,KAAKD,KAAZ;AAAoB,GAvDI;AAwDrCE,UAxDqC,oBAwD5BC,IAxD4B,EAwDtB;AAAE,SAAKC,KAAL,GAAaD,IAAb;AAAoB,GAxDA;AAyDrCE,UAzDqC,sBAyD1B;AAAE,WAAO,KAAKD,KAAZ;AAAoB,GAzDI;AA4DrClB,wBA5DqC,oCA4DZ;AACvB,QAAI,KAAKoB,KAAL,CAAWpB,sBAAf,EAAuC;AACrC,aAAO,KAAKoB,KAAL,CAAWpB,sBAAX,EAAP;AACD;;AAED,WACE;AAAC,UAAD;AAAA,QAAM,OAAO,CAAC,KAAKqB,aAAL,CAAmBC,cAApB,EAAoC,KAAKF,KAAL,CAAWxC,YAAX,CAAwB0C,cAA5D,CAAb;AACE,0BAAC,aAAD;AADF,KADF;AAKD,GAtEoC;AAuErCrB,yBAvEqC,qCAuEX;AACxB,QAAI,KAAKmB,KAAL,CAAWnB,uBAAf,EAAwC;AACtC,aAAO,KAAKmB,KAAL,CAAWnB,uBAAX,EAAP;AACD;;AAED,WACE;AAAC,UAAD;AAAA,QAAM,OAAO,CAAC,KAAKoB,aAAL,CAAmBC,cAApB,EAAoC,KAAKF,KAAL,CAAWxC,YAAX,CAAwB0C,cAA5D,CAAb;AACE;AAAC,YAAD;AAAA,UAAM,OAAO,CAAC,KAAKD,aAAL,CAAmBE,YAApB,EAAkC,KAAKH,KAAL,CAAWxC,YAAX,CAAwB2C,YAA1D,CAAb;AAAA;AAAA;AADF,KADF;AAOD,GAnFoC;AAoFrCrB,uBApFqC,iCAoFfsB,gBApFe,EAoFG;AACtC,QAAI,KAAKJ,KAAL,CAAWlB,qBAAf,EAAsC;AACpC,aAAO,KAAKkB,KAAL,CAAWlB,qBAAX,CAAiCsB,gBAAjC,CAAP;AACD;;AAED,WACE;AAAC,wBAAD;AAAA;AACE,uBAAc,SADhB;AAEE,iBAASA,gBAFX;AAGE,eAAO,CAAC,KAAKH,aAAL,CAAmBC,cAApB,EAAoC,KAAKF,KAAL,CAAWxC,YAAX,CAAwB0C,cAA5D;AAHT;AAKE;AAAC,YAAD;AAAA,UAAM,OAAO,CAAC,KAAKD,aAAL,CAAmBE,YAApB,EAAkC,KAAKH,KAAL,CAAWxC,YAAX,CAAwB2C,YAA1D,CAAb;AAAA;AAAA;AALF,KADF;AAWD,GApGoC;AAqGrC/B,YArGqC,wBAqGxB;AACX,QAAI,KAAKiC,KAAL,CAAWC,gBAAX,KAAgC,WAAhC,IAA+C,CAAC,KAAKN,KAAL,CAAW5B,UAA/D,EAA0E;AACxE,aAAO,IAAP;AACD;AACD,WAAO,KAAK4B,KAAL,CAAW5B,UAAX,EAAP;AACD,GA1GoC;AA2GrCW,WA3GqC,qBA2G3BwB,eA3G2B,EA2GV;AACzB,QAAI,KAAKP,KAAL,CAAWjB,SAAf,EAA0B;AACxB,aAAO,KAAKiB,KAAL,CAAWjB,SAAX,CAAqBwB,eAArB,CAAP;AACD;;AAED,WACE;AAAC,UAAD;AAAA,QAAM,OAAO,CAAC,KAAKN,aAAL,CAAmBO,WAApB,EAAiC,KAAKR,KAAL,CAAWxC,YAAX,CAAwBgD,WAAzD,CAAb;AACE;AAAC,YAAD;AAAA,UAAM,OAAO,CAAC,KAAKP,aAAL,CAAmBQ,gBAApB,EAAsC,KAAKT,KAAL,CAAWxC,YAAX,CAAwBiD,gBAA9D,CAAb;AAAA;AAAA,OADF;AAKE;AAAC,0BAAD;AAAA;AACE,yBAAc,SADhB;AAEE,mBAASF;AAFX;AAIE;AAAC,cAAD;AAAA;AAAA;AAAA;AAJF;AALF,KADF;AAgBD,GAhIoC;AAiIrCvB,iBAjIqC,6BAiInB;AAChB,QAAI,KAAKgB,KAAL,CAAWhB,eAAf,EAAgC;AAC9B,aAAO,KAAKgB,KAAL,CAAWhB,eAAX,EAAP;AACD;;AAED,WACE,oBAAC,IAAD,IAAM,OAAO,CAAC,KAAKiB,aAAL,CAAmBS,SAApB,EAA+B,KAAKV,KAAL,CAAWxC,YAAX,CAAwBkD,SAAvD,CAAb,GADF;AAGD,GAzIoC;AA2IrCC,iBA3IqC,6BA2InB;AAChB,SAAKlB,QAAL,CAAc,CAAd;AACA,SAAKG,QAAL,CAAc,EAAd;;AAEA,QAAIgB,KAAK,IAAT;AACA,QAAI,KAAKZ,KAAL,CAAWzB,YAAX,KAA4B,IAAhC,EAAsC;AACpCqC,WAAK,IAAIrE,SAASsE,UAAb,CAAwB;AAC3BC,uBAAe,uBAACC,IAAD,EAAOC,IAAP;AAAA,iBAAgBD,SAASC,IAAzB;AAAA,SADY;AAE3BC,iCAAyB,iCAACC,QAAD,EAAWC,QAAX;AAAA,iBAAwBD,aAAaC,QAArC;AAAA;AAFE,OAAxB,CAAL;AAIA,aAAO;AACLC,oBAAYR,GAAGS,wBAAH,CAA4B,KAAKtB,QAAL,EAA5B,CADP;AAELuB,sBAAc,KAFT;AAGLhB,0BAAkB;AAHb,OAAP;AAKD,KAVD,MAUO;AACLM,WAAK,IAAIrE,SAASsE,UAAb,CAAwB;AAC3BC,uBAAe,uBAACC,IAAD,EAAOC,IAAP;AAAA,iBAAgBD,SAASC,IAAzB;AAAA;AADY,OAAxB,CAAL;AAGA,aAAO;AACLI,oBAAYR,GAAGW,aAAH,CAAiB,KAAKxB,QAAL,EAAjB,CADP;AAELuB,sBAAc,KAFT;AAGLhB,0BAAkB;AAHb,OAAP;AAKD;AACF,GApKoC;AAsKrCkB,mBAtKqC,+BAsKjB;AAClB,SAAKxB,KAAL,CAAWxB,OAAX,CAAmB,KAAKmB,QAAL,EAAnB,EAAoC,KAAK8B,YAAzC,EAAuD,EAACC,WAAW,IAAZ,EAAvD;AACD,GAxKoC;AA0KrCC,gBA1KqC,0BA0KtB3B,KA1KsB,EA0Kf;AACpB,SAAK4B,IAAL,CAAUC,QAAV,CAAmBF,cAAnB,CAAkC3B,KAAlC;AACD,GA5KoC;AA8KrC8B,UA9KqC,sBA8K1B;AACT,SAAKC,UAAL,CAAgB,EAACC,UAAU,IAAX,EAAhB;AACD,GAhLoC;AAkLrCD,YAlLqC,wBAkLZ;AAAA,QAAdpD,OAAc,uEAAJ,EAAI;;AACvB,QAAI,KAAKsD,SAAL,EAAJ,EAAsB;AACpB,WAAKC,QAAL,CAAc;AACZZ,sBAAc;AADF,OAAd;AAGA,WAAK7B,QAAL,CAAc,CAAd;AACA,WAAKO,KAAL,CAAWxB,OAAX,CAAmB,KAAKmB,QAAL,EAAnB,EAAoC,KAAK8B,YAAzC,EAAuD9C,OAAvD;AACD;AACF,GA1LoC;AA4LrC8C,cA5LqC,0BA4LC;AAAA,QAAzB5B,IAAyB,uEAAlB,EAAkB;AAAA,QAAdlB,OAAc,uEAAJ,EAAI;;AACpC,QAAI,KAAKsD,SAAL,EAAJ,EAAsB;AACpB,WAAKE,WAAL,CAAiBtC,IAAjB,EAAuBlB,OAAvB;AACD;AACF,GAhMoC;AAkMrCyD,aAlMqC,yBAkMvB;AACZ,QAAG,KAAK/B,KAAL,CAAWC,gBAAX,KAA8B,WAAjC,EAA6C;AAC3C,aAAO,IAAP;AACD,KAFD,MAEM;AACJ,WAAK4B,QAAL,CAAc;AACZ5B,0BAAkB;AADN,OAAd;AAGA,WAAKN,KAAL,CAAWxB,OAAX,CAAmB,KAAKmB,QAAL,KAAkB,CAArC,EAAwC,KAAK0C,aAA7C,EAA4D,EAA5D;AACD;AACF,GA3MoC;AA6MrCA,eA7MqC,2BA6ME;AAAA,QAAzBxC,IAAyB,uEAAlB,EAAkB;AAAA,QAAdlB,OAAc,uEAAJ,EAAI;;AACrC,SAAKc,QAAL,CAAc,KAAKE,QAAL,KAAkB,CAAhC;AACA,QAAI2C,aAAa,IAAjB;AACA,QAAI,KAAKtC,KAAL,CAAWzB,YAAX,KAA4B,IAAhC,EAAsC;AACpC+D,mBAAazF,eAAe,KAAKkD,QAAL,EAAf,EAAgCF,IAAhC,CAAb;AACD,KAFD,MAEO;AACLyC,mBAAa,KAAKvC,QAAL,GAAgBwC,MAAhB,CAAuB1C,IAAvB,CAAb;AACD;AACD,SAAKsC,WAAL,CAAiBG,UAAjB,EAA6B3D,OAA7B;AACD,GAtNoC;AAwNrCwD,aAxNqC,yBAwNA;AAAA,QAAzBtC,IAAyB,uEAAlB,EAAkB;AAAA,QAAdlB,OAAc,uEAAJ,EAAI;;AACnC,QAAIkB,SAAS,IAAb,EAAmB;AACjB,WAAKD,QAAL,CAAcC,IAAd;AACA,UAAI,KAAKG,KAAL,CAAWzB,YAAX,KAA4B,IAAhC,EAAsC;AACpC,aAAK2D,QAAL,CAAc;AACZd,sBAAY,KAAKf,KAAL,CAAWe,UAAX,CAAsBC,wBAAtB,CAA+CxB,IAA/C,CADA;AAEZyB,wBAAc,KAFF;AAGZhB,4BAAmB3B,QAAQ6D,SAAR,KAAsB,IAAtB,GAA6B,WAA7B,GAA2C;AAHlD,SAAd;AAKD,OAND,MAMO;AACL,aAAKN,QAAL,CAAc;AACZd,sBAAY,KAAKf,KAAL,CAAWe,UAAX,CAAsBG,aAAtB,CAAoC1B,IAApC,CADA;AAEZyB,wBAAc,KAFF;AAGZhB,4BAAmB3B,QAAQ6D,SAAR,KAAsB,IAAtB,GAA6B,WAA7B,GAA2C;AAHlD,SAAd;AAKD;AACF,KAfD,MAeO;AACL,WAAKN,QAAL,CAAc;AACZZ,sBAAc,KADF;AAEZhB,0BAAmB3B,QAAQ6D,SAAR,KAAsB,IAAtB,GAA6B,WAA7B,GAA2C;AAFlD,OAAd;AAID;AACF,GA9OoC;AAgPrCC,uBAhPqC,mCAgPb;AACtB,QAAK,KAAKpC,KAAL,CAAWC,gBAAX,KAAgC,UAAhC,IAA8C,KAAKN,KAAL,CAAWrC,UAAX,KAA0B,IAAzE,IAAmF,KAAK0C,KAAL,CAAWC,gBAAX,KAAgC,WAAhC,IAA+C,KAAKN,KAAL,CAAWtC,WAAX,KAA2B,IAAjK,EAAwK;AACtK,aAAO,KAAKkB,sBAAL,EAAP;AACD,KAFD,MAEO,IAAI,KAAKyB,KAAL,CAAWC,gBAAX,KAAgC,SAAhC,IAA6C,KAAKN,KAAL,CAAWrC,UAAX,KAA0B,IAAvE,KAAgF,KAAKqC,KAAL,CAAWzB,YAAX,KAA4B,IAA5B,IAAoC,KAAKwB,QAAL,GAAgB2C,MAAhB,GAAyB,CAA7I,CAAJ,EAAqJ;AAC1J,aAAO,KAAK5D,qBAAL,CAA2B,KAAKsD,WAAhC,CAAP;AACD,KAFM,MAEA,IAAI,KAAK/B,KAAL,CAAWC,gBAAX,KAAgC,WAAhC,IAA+C,KAAKN,KAAL,CAAWrC,UAAX,KAA0B,IAA7E,EAAmF;AACxF,aAAO,KAAKkB,uBAAL,EAAP;AACD,KAFM,MAEA,IAAI,KAAKkB,QAAL,GAAgB2C,MAAhB,KAA2B,CAA/B,EAAkC;AACvC,aAAO,KAAK3D,SAAL,CAAe,KAAKgD,UAApB,CAAP;AACD,KAFM,MAEA;AACL,aAAO,IAAP;AACD;AACF,GA5PoC;AA8PrC5D,sBA9PqC,kCA8Pd;AACrB,QAAI,KAAK6B,KAAL,CAAW7B,oBAAf,EAAqC;AACnC,aAAO,KAAK6B,KAAL,CAAW7B,oBAAX,CAAgC,EAAEwE,WAAW,KAAKZ,UAAlB,EAAhC,CAAP;AACD;AACD,WACE,oBAAC,cAAD;AACE,iBAAW,KAAKA,UADlB;AAEE,kBAAY,KAAK1B,KAAL,CAAWiB,YAFzB;AAGE,cAAQ,KAAKtB,KAAL,CAAWnC,iBAHrB;AAIE,+BAAyB,KAAKmC,KAAL,CAAWjC,kCAJtC;AAKE,YAAM,KAAKiC,KAAL,CAAWhC,eALnB;AAME,iBAAW,KAAKgC,KAAL,CAAW9B,oBANxB;AAOE,aAAO,KAAK8B,KAAL,CAAW/B;AAPpB,MADF;AAWD,GA7QoC;AA+QrC2E,QA/QqC,oBA+Q5B;AACP,WACE,oBAAC,QAAD;AACE,WAAI,UADN;AAEE,kBAAY,KAAKvC,KAAL,CAAWe,UAFzB;AAGE,iBAAW,KAAKpB,KAAL,CAAW6C,OAHxB;AAIE,2BAAqB,KAAK7C,KAAL,CAAW3B,iBAJlC;AAKE,oBAAc,KAAKD,UALrB;AAME,oBAAc,KAAKqE,qBANrB;AAOE,uBAAiB,KAAKzD,eAPxB;;AASE,wCAAkC,KATpC;AAUE,qBAAe,KAAKgB,KAAL,CAAW1B,aAV5B;AAWE,+BAAyB,IAX3B;AAYE,sBAAgB,KAAK0B,KAAL,CAAWpC,WAAX,KAA2B,IAA3B,GAAkC,KAAKO,oBAAL,EAAlC,GAAgE;;AAZlF,OAcM,KAAK6B,KAdX;;AAgBE,aAAO,KAAKA,KAAL,CAAW8C;AAhBpB,OADF;AAoBD,GApSoC;;;AAsSrC7C,iBAAe;AACbS,eAAW;AACTqC,cAAQ,CADC;AAETC,uBAAiB;AAFR,KADE;AAKb7C,kBAAc;AACZ8C,gBAAU;AADE,KALD;AAQb/C,oBAAgB;AACd6C,cAAQ,EADM;AAEdG,sBAAgB,QAFF;AAGdC,kBAAY,QAHE;AAIdH,uBAAiB;AAJH,KARH;AAcbxC,iBAAa;AACX0C,sBAAgB,QADL;AAEXC,kBAAY,QAFD;AAGXC,eAAS;AAHE,KAdA;AAmBb3C,sBAAkB;AAChBwC,gBAAU,EADM;AAEhBI,kBAAY,MAFI;AAGhBC,oBAAc;AAHE;AAnBL;AAtSsB,CAAlB,CAArB;;AAkUAC,OAAOC,OAAP,GAAiBnG,cAAjB","sourcesContent":["'use strict'\n\nvar React = require('react');\n\nvar {\n  ListView,\n  Platform,\n  TouchableHighlight,\n  View,\n  Text,\n  RefreshControl,\n} = require('react-native');\n\n\n// small helper function which merged two objects into one\nfunction MergeRecursive(obj1, obj2) {\n  for (var p in obj2) {\n    try {\n      if ( obj2[p].constructor==Object ) {\n        obj1[p] = MergeRecursive(obj1[p], obj2[p]);\n      } else {\n        obj1[p] = obj2[p];\n      }\n    } catch(e) {\n      obj1[p] = obj2[p];\n    }\n  }\n  return obj1;\n}\n\nvar GiftedSpinner = require('react-native-gifted-spinner');\n\nvar GiftedListView = React.createClass({\n\n  getDefaultProps() {\n    return {\n      customStyles: {},\n      initialListSize: 10,\n      firstLoader: true,\n      pagination: true,\n      refreshable: true,\n      refreshableColors: undefined,\n      refreshableProgressBackgroundColor: undefined,\n      refreshableSize: undefined,\n      refreshableTitle: undefined,\n      refreshableTintColor: undefined,\n      renderRefreshControl: null,\n      headerView: null,\n      sectionHeaderView: null,\n      scrollEnabled: true,\n      withSections: false,\n      onFetch(page, callback, options) { callback([]); },\n\n      paginationFetchingView: null,\n      paginationAllLoadedView: null,\n      paginationWaitingView: null,\n      emptyView: null,\n      renderSeparator: null,\n    };\n  },\n\n  propTypes: {\n    customStyles: React.PropTypes.object,\n    initialListSize: React.PropTypes.number,\n    firstLoader: React.PropTypes.bool,\n    pagination: React.PropTypes.bool,\n    refreshable: React.PropTypes.bool,\n    refreshableColors: React.PropTypes.array,\n    refreshableProgressBackgroundColor: React.PropTypes.string,\n    refreshableSize: React.PropTypes.string,\n    refreshableTitle: React.PropTypes.string,\n    refreshableTintColor: React.PropTypes.string,\n    renderRefreshControl: React.PropTypes.func,\n    headerView: React.PropTypes.func,\n    sectionHeaderView: React.PropTypes.func,\n    scrollEnabled: React.PropTypes.bool,\n    withSections: React.PropTypes.bool,\n    onFetch: React.PropTypes.func,\n\n    paginationFetchingView: React.PropTypes.func,\n    paginationAllLoadedView: React.PropTypes.func,\n    paginationWaitingView: React.PropTypes.func,\n    emptyView: React.PropTypes.func,\n    renderSeparator: React.PropTypes.func,\n  },\n\n  _setPage(page) { this._page = page; },\n  _getPage() { return this._page; },\n  _setRows(rows) { this._rows = rows; },\n  _getRows() { return this._rows; },\n\n\n  paginationFetchingView() {\n    if (this.props.paginationFetchingView) {\n      return this.props.paginationFetchingView();\n    }\n\n    return (\n      <View style={[this.defaultStyles.paginationView, this.props.customStyles.paginationView]}>\n        <GiftedSpinner />\n      </View>\n    );\n  },\n  paginationAllLoadedView() {\n    if (this.props.paginationAllLoadedView) {\n      return this.props.paginationAllLoadedView();\n    }\n\n    return (\n      <View style={[this.defaultStyles.paginationView, this.props.customStyles.paginationView]}>\n        <Text style={[this.defaultStyles.actionsLabel, this.props.customStyles.actionsLabel]}>\n          ~\n        </Text>\n      </View>\n    );\n  },\n  paginationWaitingView(paginateCallback) {\n    if (this.props.paginationWaitingView) {\n      return this.props.paginationWaitingView(paginateCallback);\n    }\n\n    return (\n      <TouchableHighlight\n        underlayColor='#c8c7cc'\n        onPress={paginateCallback}\n        style={[this.defaultStyles.paginationView, this.props.customStyles.paginationView]}\n      >\n        <Text style={[this.defaultStyles.actionsLabel, this.props.customStyles.actionsLabel]}>\n          Load more\n        </Text>\n      </TouchableHighlight>\n    );\n  },\n  headerView() {\n    if (this.state.paginationStatus === 'firstLoad' || !this.props.headerView){\n      return null;\n    }\n    return this.props.headerView();\n  },\n  emptyView(refreshCallback) {\n    if (this.props.emptyView) {\n      return this.props.emptyView(refreshCallback);\n    }\n\n    return (\n      <View style={[this.defaultStyles.defaultView, this.props.customStyles.defaultView]}>\n        <Text style={[this.defaultStyles.defaultViewTitle, this.props.customStyles.defaultViewTitle]}>\n          Sorry, there is no content to display\n        </Text>\n\n        <TouchableHighlight\n          underlayColor='#c8c7cc'\n          onPress={refreshCallback}\n        >\n          <Text>\n            ↻\n          </Text>\n        </TouchableHighlight>\n      </View>\n    );\n  },\n  renderSeparator() {\n    if (this.props.renderSeparator) {\n      return this.props.renderSeparator();\n    }\n\n    return (\n      <View style={[this.defaultStyles.separator, this.props.customStyles.separator]} />\n    );\n  },\n\n  getInitialState() {\n    this._setPage(1);\n    this._setRows([]);\n\n    var ds = null;\n    if (this.props.withSections === true) {\n      ds = new ListView.DataSource({\n        rowHasChanged: (row1, row2) => row1 !== row2,\n        sectionHeaderHasChanged: (section1, section2) => section1 !== section2,\n      });\n      return {\n        dataSource: ds.cloneWithRowsAndSections(this._getRows()),\n        isRefreshing: false,\n        paginationStatus: 'firstLoad',\n      };\n    } else {\n      ds = new ListView.DataSource({\n        rowHasChanged: (row1, row2) => row1 !== row2,\n      });\n      return {\n        dataSource: ds.cloneWithRows(this._getRows()),\n        isRefreshing: false,\n        paginationStatus: 'firstLoad',\n      };\n    }\n  },\n\n  componentDidMount() {\n    this.props.onFetch(this._getPage(), this._postRefresh, {firstLoad: true});\n  },\n\n  setNativeProps(props) {\n    this.refs.listview.setNativeProps(props);\n  },\n\n  _refresh() {\n    this._onRefresh({external: true});\n  },\n\n  _onRefresh(options = {}) {\n    if (this.isMounted()) {\n      this.setState({\n        isRefreshing: true,\n      });\n      this._setPage(1);\n      this.props.onFetch(this._getPage(), this._postRefresh, options);\n    }\n  },\n\n  _postRefresh(rows = [], options = {}) {\n    if (this.isMounted()) {\n      this._updateRows(rows, options);\n    }\n  },\n\n  _onPaginate() {\n    if(this.state.paginationStatus==='allLoaded'){\n      return null\n    }else {\n      this.setState({\n        paginationStatus: 'fetching',\n      });\n      this.props.onFetch(this._getPage() + 1, this._postPaginate, {});\n    }\n  },\n\n  _postPaginate(rows = [], options = {}) {\n    this._setPage(this._getPage() + 1);\n    var mergedRows = null;\n    if (this.props.withSections === true) {\n      mergedRows = MergeRecursive(this._getRows(), rows);\n    } else {\n      mergedRows = this._getRows().concat(rows);\n    }\n    this._updateRows(mergedRows, options);\n  },\n\n  _updateRows(rows = [], options = {}) {\n    if (rows !== null) {\n      this._setRows(rows);\n      if (this.props.withSections === true) {\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRowsAndSections(rows),\n          isRefreshing: false,\n          paginationStatus: (options.allLoaded === true ? 'allLoaded' : 'waiting'),\n        });\n      } else {\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRows(rows),\n          isRefreshing: false,\n          paginationStatus: (options.allLoaded === true ? 'allLoaded' : 'waiting'),\n        });\n      }\n    } else {\n      this.setState({\n        isRefreshing: false,\n        paginationStatus: (options.allLoaded === true ? 'allLoaded' : 'waiting'),\n      });\n    }\n  },\n\n  _renderPaginationView() {\n    if ((this.state.paginationStatus === 'fetching' && this.props.pagination === true) || (this.state.paginationStatus === 'firstLoad' && this.props.firstLoader === true)) {\n      return this.paginationFetchingView();\n    } else if (this.state.paginationStatus === 'waiting' && this.props.pagination === true && (this.props.withSections === true || this._getRows().length > 0)) {\n      return this.paginationWaitingView(this._onPaginate);\n    } else if (this.state.paginationStatus === 'allLoaded' && this.props.pagination === true) {\n      return this.paginationAllLoadedView();\n    } else if (this._getRows().length === 0) {\n      return this.emptyView(this._onRefresh);\n    } else {\n      return null;\n    }\n  },\n\n  renderRefreshControl() {\n    if (this.props.renderRefreshControl) {\n      return this.props.renderRefreshControl({ onRefresh: this._onRefresh });\n    }\n    return (\n      <RefreshControl\n        onRefresh={this._onRefresh}\n        refreshing={this.state.isRefreshing}\n        colors={this.props.refreshableColors}\n        progressBackgroundColor={this.props.refreshableProgressBackgroundColor}\n        size={this.props.refreshableSize}\n        tintColor={this.props.refreshableTintColor}\n        title={this.props.refreshableTitle}\n      />\n    );\n  },\n\n  render() {\n    return (\n      <ListView\n        ref=\"listview\"\n        dataSource={this.state.dataSource}\n        renderRow={this.props.rowView}\n        renderSectionHeader={this.props.sectionHeaderView}\n        renderHeader={this.headerView}\n        renderFooter={this._renderPaginationView}\n        renderSeparator={this.renderSeparator}\n\n        automaticallyAdjustContentInsets={false}\n        scrollEnabled={this.props.scrollEnabled}\n        canCancelContentTouches={true}\n        refreshControl={this.props.refreshable === true ? this.renderRefreshControl() : null}\n\n        {...this.props}\n\n        style={this.props.style}\n      />\n    );\n  },\n\n  defaultStyles: {\n    separator: {\n      height: 1,\n      backgroundColor: '#CCC'\n    },\n    actionsLabel: {\n      fontSize: 20,\n    },\n    paginationView: {\n      height: 44,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#FFF',\n    },\n    defaultView: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 20,\n    },\n    defaultViewTitle: {\n      fontSize: 16,\n      fontWeight: 'bold',\n      marginBottom: 15,\n    },\n  },\n});\n\n\nmodule.exports = GiftedListView;\n"]}]