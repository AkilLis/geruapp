["307188aa13724562af69c7b0422309911815ba53","5ffde89b8276bdccf873b69ea2501d713c740eb7",["./assert","./isTypeName","./forbidNewOperator","./isString","./isObject"],[21,59,108,155,193],{"version":3,"sources":["/var/www/geruapp/node_modules/tcomb/lib/enums.js"],"names":["assert","require","isTypeName","forbidNewOperator","isString","isObject","getDefaultName","map","Object","keys","k","stringify","join","enums","name","process","env","NODE_ENV","displayName","Enums","value","path","is","meta","kind","identity","x","hasOwnProperty","of","split","forEach","module","exports"],"mappings":"AAAA,IAAIA,SAASC,QAAQ,UAAR,CAAb;AACA,IAAIC,aAAaD,QAAQ,cAAR,CAAjB;AACA,IAAIE,oBAAoBF,QAAQ,qBAAR,CAAxB;AACA,IAAIG,WAAWH,QAAQ,YAAR,CAAf;AACA,IAAII,WAAWJ,QAAQ,YAAR,CAAf;;AAEA,SAASK,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B,SAAOC,OAAOC,IAAP,CAAYF,GAAZ,EAAiBA,GAAjB,CAAqB,UAAUG,CAAV,EAAa;AAAE,WAAOV,OAAOW,SAAP,CAAiBD,CAAjB,CAAP;AAA6B,GAAjE,EAAmEE,IAAnE,CAAwE,KAAxE,CAAP;AACD;;AAED,SAASC,KAAT,CAAeN,GAAf,EAAoBO,IAApB,EAA0B;;AAExB,MAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCjB,WAAOK,SAASE,GAAT,CAAP,EAAsB,YAAY;AAAE,aAAO,0BAA0BP,OAAOW,SAAP,CAAiBJ,GAAjB,CAA1B,GAAkD,iGAAzD;AAA6J,KAAjM;AACAP,WAAOE,WAAWY,IAAX,CAAP,EAAyB,YAAY;AAAE,aAAO,2BAA2Bd,OAAOW,SAAP,CAAiBG,IAAjB,CAA3B,GAAoD,gEAA3D;AAA8H,KAArK;AACD;;AAED,MAAII,cAAcJ,QAAQR,eAAeC,GAAf,CAA1B;;AAEA,WAASY,KAAT,CAAeC,KAAf,EAAsBC,IAAtB,EAA4B;;AAE1B,QAAIN,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCd,wBAAkB,IAAlB,EAAwBgB,KAAxB;AACAE,aAAOA,QAAQ,CAACH,WAAD,CAAf;AACAlB,aAAOmB,MAAMG,EAAN,CAASF,KAAT,CAAP,EAAwB,YAAY;AAAE,eAAO,mBAAmBpB,OAAOW,SAAP,CAAiBS,KAAjB,CAAnB,GAA6C,eAA7C,GAA+DC,KAAKT,IAAL,CAAU,GAAV,CAA/D,GAAgF,oBAAhF,GAAuGZ,OAAOW,SAAP,CAAiBH,OAAOC,IAAP,CAAYF,GAAZ,CAAjB,CAAvG,GAA4I,GAAnJ;AAAyJ,OAA/L;AACD;;AAED,WAAOa,KAAP;AACD;;AAEDD,QAAMI,IAAN,GAAa;AACXC,UAAM,OADK;AAEXjB,SAAKA,GAFM;AAGXO,UAAMA,IAHK;AAIXW,cAAU;AAJC,GAAb;;AAOAN,QAAMD,WAAN,GAAoBA,WAApB;;AAEAC,QAAMG,EAAN,GAAW,UAAUI,CAAV,EAAa;AACtB,WAAOnB,IAAIoB,cAAJ,CAAmBD,CAAnB,CAAP;AACD,GAFD;;AAIA,SAAOP,KAAP;AACD;;AAEDN,MAAMe,EAAN,GAAW,UAAUnB,IAAV,EAAgBK,IAAhB,EAAsB;AAC/BL,SAAOL,SAASK,IAAT,IAAiBA,KAAKoB,KAAL,CAAW,GAAX,CAAjB,GAAmCpB,IAA1C;AACA,MAAIW,QAAQ,EAAZ;AACAX,OAAKqB,OAAL,CAAa,UAAUpB,CAAV,EAAa;AACxBU,UAAMV,CAAN,IAAWA,CAAX;AACD,GAFD;AAGA,SAAOG,MAAMO,KAAN,EAAaN,IAAb,CAAP;AACD,CAPD;;AASAD,MAAMP,cAAN,GAAuBA,cAAvB;AACAyB,OAAOC,OAAP,GAAiBnB,KAAjB","sourcesContent":["var assert = require('./assert');\nvar isTypeName = require('./isTypeName');\nvar forbidNewOperator = require('./forbidNewOperator');\nvar isString = require('./isString');\nvar isObject = require('./isObject');\n\nfunction getDefaultName(map) {\n  return Object.keys(map).map(function (k) { return assert.stringify(k); }).join(' | ');\n}\n\nfunction enums(map, name) {\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(isObject(map), function () { return 'Invalid argument map ' + assert.stringify(map) + ' supplied to enums(map, [name]) combinator (expected a dictionary of String -> String | Number)'; });\n    assert(isTypeName(name), function () { return 'Invalid argument name ' + assert.stringify(name) + ' supplied to enums(map, [name]) combinator (expected a string)'; });\n  }\n\n  var displayName = name || getDefaultName(map);\n\n  function Enums(value, path) {\n\n    if (process.env.NODE_ENV !== 'production') {\n      forbidNewOperator(this, Enums);\n      path = path || [displayName];\n      assert(Enums.is(value), function () { return 'Invalid value ' + assert.stringify(value) + ' supplied to ' + path.join('/') + ' (expected one of ' + assert.stringify(Object.keys(map)) + ')'; });\n    }\n\n    return value;\n  }\n\n  Enums.meta = {\n    kind: 'enums',\n    map: map,\n    name: name,\n    identity: true\n  };\n\n  Enums.displayName = displayName;\n\n  Enums.is = function (x) {\n    return map.hasOwnProperty(x);\n  };\n\n  return Enums;\n}\n\nenums.of = function (keys, name) {\n  keys = isString(keys) ? keys.split(' ') : keys;\n  var value = {};\n  keys.forEach(function (k) {\n    value[k] = k;\n  });\n  return enums(value, name);\n};\n\nenums.getDefaultName = getDefaultName;\nmodule.exports = enums;\n\n"]}]