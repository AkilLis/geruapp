["5311b3c7f8774aafae9d2c7f0c2d6c618a0d8318","90438176a53ab6f1d3a1a791417f602c0c47f3ba",[],[],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/local-cli/bundle/assetPathUtils.js"],"names":["getAndroidAssetSuffix","scale","getAndroidDrawableFolderName","asset","suffix","Error","JSON","stringify","androidFolder","getAndroidResourceIdentifier","folderPath","getBasePath","name","toLowerCase","replace","basePath","httpServerLocation","substr","module","exports"],"mappings":";AAQA;;AAEA,SAASA,qBAAT,CAA+BC,KAA/B,EAAsC;AACpC,UAAQA,KAAR;AACE,SAAK,IAAL;AAAW,aAAO,MAAP;AACX,SAAK,CAAL;AAAQ,aAAO,MAAP;AACR,SAAK,GAAL;AAAU,aAAO,MAAP;AACV,SAAK,CAAL;AAAQ,aAAO,OAAP;AACR,SAAK,CAAL;AAAQ,aAAO,QAAP;AACR,SAAK,CAAL;AAAQ,aAAO,SAAP;AANV;AAQD;;AAED,SAASC,4BAAT,CAAsCC,KAAtC,EAA6CF,KAA7C,EAAoD;AAClD,MAAIG,SAASJ,sBAAsBC,KAAtB,CAAb;AACA,MAAI,CAACG,MAAL,EAAa;AACX,UAAM,IAAIC,KAAJ,CACJ,iEACAC,KAAKC,SAAL,CAAeJ,KAAf,CAFI,CAAN;AAID;AACD,MAAMK,gBAAgB,cAAcJ,MAApC;AACA,SAAOI,aAAP;AACD;;AAED,SAASC,4BAAT,CAAsCN,KAAtC,EAA6C;AAC3C,MAAIO,aAAaC,YAAYR,KAAZ,CAAjB;AACA,SAAO,CAACO,aAAa,GAAb,GAAmBP,MAAMS,IAA1B,EACJC,WADI,GAEJC,OAFI,CAEI,KAFJ,EAEW,GAFX,EAGJA,OAHI,CAGI,eAHJ,EAGqB,EAHrB,EAIJA,OAJI,CAII,UAJJ,EAIgB,EAJhB,CAAP;AAKD;;AAED,SAASH,WAAT,CAAqBR,KAArB,EAA4B;AAC1B,MAAIY,WAAWZ,MAAMa,kBAArB;AACA,MAAID,SAAS,CAAT,MAAgB,GAApB,EAAyB;AACvBA,eAAWA,SAASE,MAAT,CAAgB,CAAhB,CAAX;AACD;AACD,SAAOF,QAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiB;AACfnB,yBAAuBA,qBADR;AAEfE,gCAA8BA,4BAFf;AAGfO,gCAA8BA,4BAHf;AAIfE,eAAaA;AAJE,CAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nfunction getAndroidAssetSuffix(scale) {\n  switch (scale) {\n    case 0.75: return 'ldpi';\n    case 1: return 'mdpi';\n    case 1.5: return 'hdpi';\n    case 2: return 'xhdpi';\n    case 3: return 'xxhdpi';\n    case 4: return 'xxxhdpi';\n  }\n}\n\nfunction getAndroidDrawableFolderName(asset, scale) {\n  var suffix = getAndroidAssetSuffix(scale);\n  if (!suffix) {\n    throw new Error(\n      'Don\\'t know which android drawable suffix to use for asset: ' +\n      JSON.stringify(asset)\n    );\n  }\n  const androidFolder = 'drawable-' + suffix;\n  return androidFolder;\n}\n\nfunction getAndroidResourceIdentifier(asset) {\n  var folderPath = getBasePath(asset);\n  return (folderPath + '/' + asset.name)\n    .toLowerCase()\n    .replace(/\\//g, '_')           // Encode folder structure in file name\n    .replace(/([^a-z0-9_])/g, '')  // Remove illegal chars\n    .replace(/^assets_/, '');      // Remove \"assets_\" prefix\n}\n\nfunction getBasePath(asset) {\n  var basePath = asset.httpServerLocation;\n  if (basePath[0] === '/') {\n    basePath = basePath.substr(1);\n  }\n  return basePath;\n}\n\nmodule.exports = {\n  getAndroidAssetSuffix: getAndroidAssetSuffix,\n  getAndroidDrawableFolderName: getAndroidDrawableFolderName,\n  getAndroidResourceIdentifier: getAndroidResourceIdentifier,\n  getBasePath: getBasePath\n};"]}]