["d132c1c308ddc6a78fb3aab7a55a74cfac88032c","6e5d55b9490c2be9fe44085eff52697d10e6a4df",["ReactFiber"],[40],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/fiber/ReactFiberRoot.js"],"names":["require","createHostRootFiber","exports","createFiberRoot","containerInfo","uninitializedFiber","root","current","isScheduled","nextScheduledRoot","context","pendingContext","stateNode"],"mappings":";;AAYA;;eAI8BA,QAAQ,YAAR,C;IAAvBC,mB,YAAAA,mB;;AAgBPC,QAAQC,eAAR,GAA0B,UAASC,aAAT,EAAwC;AAGhE,MAAMC,qBAAqBJ,qBAA3B;AACA,MAAMK,OAAO;AACXC,aAASF,kBADE;AAEXD,mBAAeA,aAFJ;AAGXI,iBAAa,KAHF;AAIXC,uBAAmB,IAJR;AAKXC,aAAS,IALE;AAMXC,oBAAgB;AANL,GAAb;AAQAN,qBAAmBO,SAAnB,GAA+BN,IAA/B;AACA,SAAOA,IAAP;AACD,CAdD","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactFiberRoot\n * @flow\n */\n\n'use strict';\n\nimport type {Fiber} from 'ReactFiber';\n\nconst {createHostRootFiber} = require('ReactFiber');\n\nexport type FiberRoot = {\n  // Any additional information from the host associated with this root.\n  containerInfo: any,\n  // The currently active root fiber. This is the mutable root of the tree.\n  current: Fiber,\n  // Determines if this root has already been added to the schedule for work.\n  isScheduled: boolean,\n  // The work schedule is a linked list.\n  nextScheduledRoot: FiberRoot | null,\n  // Top context object, used by renderSubtreeIntoContainer\n  context: Object | null,\n  pendingContext: Object | null,\n};\n\nexports.createFiberRoot = function(containerInfo: any): FiberRoot {\n  // Cyclic construction. This cheats the type system right now because\n  // stateNode is any.\n  const uninitializedFiber = createHostRootFiber();\n  const root = {\n    current: uninitializedFiber,\n    containerInfo: containerInfo,\n    isScheduled: false,\n    nextScheduledRoot: null,\n    context: null,\n    pendingContext: null,\n  };\n  uninitializedFiber.stateNode = root;\n  return root;\n};\n"]}]