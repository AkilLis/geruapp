["98d53bbbe29f4e2b8fefab95edac2c81d5c6debf","306afc29893b85eed82b87ce6327506889c12933",["react","react-native"],[20,54],{"version":3,"sources":["/var/www/geruapp/node_modules/tcomb-form-native/lib/templates/bootstrap/textbox.js"],"names":["React","require","View","Text","TextInput","textbox","locals","hidden","stylesheet","formGroupStyle","formGroup","normal","controlLabelStyle","controlLabel","textboxStyle","textboxViewStyle","textboxView","helpBlockStyle","helpBlock","errorBlockStyle","errorBlock","hasError","error","editable","notEditable","label","help","autoCapitalize","autoCorrect","autoFocus","blurOnSubmit","keyboardType","maxLength","multiline","onBlur","onEndEditing","onFocus","onLayout","onSelectionChange","onSubmitEditing","onContentSizeChange","placeholderTextColor","secureTextEntry","selectTextOnFocus","selectionColor","numberOfLines","underlineColorAndroid","clearButtonMode","clearTextOnFocus","enablesReturnKeyAutomatically","keyboardAppearance","onKeyPress","returnKeyType","selectionState","value","onChange","onChangeNative","placeholder","module","exports"],"mappings":"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","sourcesContent":["var React = require('react');\nvar { View, Text, TextInput } = require('react-native');\n\nfunction textbox(locals) {\n  if (locals.hidden) {\n    return null;\n  }\n\n  var stylesheet = locals.stylesheet;\n  var formGroupStyle = stylesheet.formGroup.normal;\n  var controlLabelStyle = stylesheet.controlLabel.normal;\n  var textboxStyle = stylesheet.textbox.normal;\n  var textboxViewStyle = stylesheet.textboxView.normal;\n  var helpBlockStyle = stylesheet.helpBlock.normal;\n  var errorBlockStyle = stylesheet.errorBlock;\n\n  if (locals.hasError) {\n    formGroupStyle = stylesheet.formGroup.error;\n    controlLabelStyle = stylesheet.controlLabel.error;\n    textboxStyle = stylesheet.textbox.error;\n    textboxViewStyle = stylesheet.textboxView.error;\n    helpBlockStyle = stylesheet.helpBlock.error;\n  }\n\n  if (locals.editable === false) {\n    textboxStyle = stylesheet.textbox.notEditable;\n    textboxViewStyle = stylesheet.textboxView.notEditable;\n  }\n\n  var label = locals.label ? <Text style={controlLabelStyle}>{locals.label}</Text> : null;\n  var help = locals.help ? <Text style={helpBlockStyle}>{locals.help}</Text> : null;\n  var error = locals.hasError && locals.error ? <Text accessibilityLiveRegion=\"polite\" style={errorBlockStyle}>{locals.error}</Text> : null;\n\n  return (\n    <View style={formGroupStyle}>\n      {label}\n      <View style={textboxViewStyle}>\n        <TextInput\n          accessibilityLabel={locals.label}\n          ref=\"input\"\n          autoCapitalize={locals.autoCapitalize}\n          autoCorrect={locals.autoCorrect}\n          autoFocus={locals.autoFocus}\n          blurOnSubmit={locals.blurOnSubmit}\n          editable={locals.editable}\n          keyboardType={locals.keyboardType}\n          maxLength={locals.maxLength}\n          multiline={locals.multiline}\n          onBlur={locals.onBlur}\n          onEndEditing={locals.onEndEditing}\n          onFocus={locals.onFocus}\n          onLayout={locals.onLayout}\n          onSelectionChange={locals.onSelectionChange}\n          onSubmitEditing={locals.onSubmitEditing}\n          onContentSizeChange={locals.onContentSizeChange}\n          placeholderTextColor={locals.placeholderTextColor}\n          secureTextEntry={locals.secureTextEntry}\n          selectTextOnFocus={locals.selectTextOnFocus}\n          selectionColor={locals.selectionColor}\n          numberOfLines={locals.numberOfLines}\n          underlineColorAndroid={locals.underlineColorAndroid}\n          clearButtonMode={locals.clearButtonMode}\n          clearTextOnFocus={locals.clearTextOnFocus}\n          enablesReturnKeyAutomatically={locals.enablesReturnKeyAutomatically}\n          keyboardAppearance={locals.keyboardAppearance}\n          onKeyPress={locals.onKeyPress}\n          returnKeyType={locals.returnKeyType}\n          selectionState={locals.selectionState}\n          onChangeText={(value) => locals.onChange(value)}\n          onChange={locals.onChangeNative}\n          placeholder={locals.placeholder}\n          style={textboxStyle}\n          value={locals.value}\n        />\n      </View>\n      {help}\n      {error}\n    </View>\n  );\n}\n\nmodule.exports = textbox;\n"]}]