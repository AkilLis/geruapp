["0a45c6ceacfd6e8191704803d63eaca006d3793e","aae2abb6ef614802f38f08070b55ee08b7c37783",["immutable"],[107],{"version":3,"sources":["/var/www/geruapp/src/global/globalInitialState.js"],"names":["InitialState","currentUser","showState","currentState","store"],"mappings":";AAUA;;;;;;AAIA;;AAcA,IAAIA,eAAe,uBAAO;AACxBC,eAAa,IADW;AAExBC,aAAW,KAFa;AAGxBC,gBAAc,IAHU;AAIxBC,SAAO;AAJiB,CAAP,CAAnB;kBAMeJ,Y","sourcesContent":["/**\n * # globalInitialState.js\n *\n * This class is a Immutable object\n * Working *successfully* with Redux, requires\n * state that is immutable.\n * In my opinion, that can not be by convention\n * By using Immutable, it's enforced.  Just saying....\n *\n */\n'use strict'\n/**\n * ## Import\n */\nimport {Record} from 'immutable'\n/**\n * ## InitialState\n *\n * * currentUser - object returned from server when validated\n * * showState - toggle for Header to display state\n * * currentState - object in Json format of the entire state\n * * store - the Redux store which is an object w/ 4 initial states\n *   * device\n *   * auth\n *   * global\n *   * profile\n *\n */\nvar InitialState = Record({\n  currentUser: null,\n  showState: false,\n  currentState: null,\n  store: null\n})\nexport default InitialState\n"]}]