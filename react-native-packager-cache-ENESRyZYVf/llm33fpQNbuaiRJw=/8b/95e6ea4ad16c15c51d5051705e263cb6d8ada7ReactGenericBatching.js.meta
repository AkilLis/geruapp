["07f59f825da56bd2e064ed11ffade814a1ddbedd","f7bb33f0243f056a5ad045b7287c24e1f34f1dfc",["ReactControlledComponent"],[56],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/shared/event/ReactGenericBatching.js"],"names":["ReactControlledComponent","require","stackBatchedUpdates","fn","a","b","c","d","e","fiberBatchedUpdates","bookkeeping","performFiberBatchedUpdates","batchedUpdates","isNestingBatched","batchedUpdatesWithControlledComponents","restoreStateIfNeeded","ReactGenericBatchingInjection","injectStackBatchedUpdates","_batchedUpdates","injectFiberBatchedUpdates","ReactGenericBatching","injection","module","exports"],"mappings":";;AAWA;;AAEA,IAAIA,2BAA2BC,QAAQ,0BAAR,CAA/B;;AASA,IAAIC,sBAAsB,6BAASC,EAAT,EAAaC,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyBC,CAAzB,EAA4B;AACpD,SAAOL,GAAGC,CAAH,EAAMC,CAAN,EAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,CAAP;AACD,CAFD;AAGA,IAAIC,sBAAsB,6BAASN,EAAT,EAAaO,WAAb,EAA0B;AAClD,SAAOP,GAAGO,WAAH,CAAP;AACD,CAFD;;AAIA,SAASC,0BAAT,CAAoCR,EAApC,EAAwCO,WAAxC,EAAqD;AAGnD,SAAOD,oBAAoBN,EAApB,EAAwBO,WAAxB,CAAP;AACD;AACD,SAASE,cAAT,CAAwBT,EAAxB,EAA4BO,WAA5B,EAAyC;AAGvC,SAAOR,oBAAoBS,0BAApB,EAAgDR,EAAhD,EAAoDO,WAApD,CAAP;AACD;;AAED,IAAIG,mBAAmB,KAAvB;AACA,SAASC,sCAAT,CAAgDX,EAAhD,EAAoDO,WAApD,EAAiE;AAC/D,MAAIG,gBAAJ,EAAsB;AAIpB,WAAOD,eAAeT,EAAf,EAAmBO,WAAnB,CAAP;AACD;AACDG,qBAAmB,IAAnB;AACA,MAAI;AACF,WAAOD,eAAeT,EAAf,EAAmBO,WAAnB,CAAP;AACD,GAFD,SAEU;AAKRG,uBAAmB,KAAnB;AACAb,6BAAyBe,oBAAzB;AACD;AACF;;AAED,IAAIC,gCAAgC;AAClCC,6BAA2B,mCAASC,eAAT,EAA0B;AACnDhB,0BAAsBgB,eAAtB;AACD,GAHiC;AAIlCC,6BAA2B,mCAASD,eAAT,EAA0B;AACnDT,0BAAsBS,eAAtB;AACD;AANiC,CAApC;;AASA,IAAIE,uBAAuB;AACzBR,kBAAgBE,sCADS;AAEzBO,aAAWL;AAFc,CAA3B;;AAKAM,OAAOC,OAAP,GAAiBH,oBAAjB","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactGenericBatching\n */\n\n'use strict';\n\nvar ReactControlledComponent = require('ReactControlledComponent');\n\n// Used as a way to call batchedUpdates when we don't know if we're in a Fiber\n// or Stack context. Such as when we're dispatching events or if third party\n// libraries need to call batchedUpdates. Eventually, this API will go away when\n// everything is batched by default. We'll then have a similar API to opt-out of\n// scheduled work and instead do synchronous work.\n\n// Defaults\nvar stackBatchedUpdates = function(fn, a, b, c, d, e) {\n  return fn(a, b, c, d, e);\n};\nvar fiberBatchedUpdates = function(fn, bookkeeping) {\n  return fn(bookkeeping);\n};\n\nfunction performFiberBatchedUpdates(fn, bookkeeping) {\n  // If we have Fiber loaded, we need to wrap this in a batching call so that\n  // Fiber can apply its default priority for this call.\n  return fiberBatchedUpdates(fn, bookkeeping);\n}\nfunction batchedUpdates(fn, bookkeeping) {\n  // We first perform work with the stack batching strategy, by passing our\n  // indirection to it.\n  return stackBatchedUpdates(performFiberBatchedUpdates, fn, bookkeeping);\n}\n\nvar isNestingBatched = false;\nfunction batchedUpdatesWithControlledComponents(fn, bookkeeping) {\n  if (isNestingBatched) {\n    // If we are currently inside another batch, we need to wait until it\n    // fully completes before restoring state. Therefore, we add the target to\n    // a queue of work.\n    return batchedUpdates(fn, bookkeeping);\n  }\n  isNestingBatched = true;\n  try {\n    return batchedUpdates(fn, bookkeeping);\n  } finally {\n    // Here we wait until all updates have propagated, which is important\n    // when using controlled components within layers:\n    // https://github.com/facebook/react/issues/1698\n    // Then we restore state of any controlled component.\n    isNestingBatched = false;\n    ReactControlledComponent.restoreStateIfNeeded();\n  }\n}\n\nvar ReactGenericBatchingInjection = {\n  injectStackBatchedUpdates: function(_batchedUpdates) {\n    stackBatchedUpdates = _batchedUpdates;\n  },\n  injectFiberBatchedUpdates: function(_batchedUpdates) {\n    fiberBatchedUpdates = _batchedUpdates;\n  },\n};\n\nvar ReactGenericBatching = {\n  batchedUpdates: batchedUpdatesWithControlledComponents,\n  injection: ReactGenericBatchingInjection,\n};\n\nmodule.exports = ReactGenericBatching;\n"]}]