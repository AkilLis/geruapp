["45b3cbf42dd918c9e40e644bc33757efe3635fa9","b7801c95bad2c6b0ac7ff5f163d4d6ce807b1c0c",["react","react-native","../../styles/variables"],[86,183,226],{"version":3,"sources":["/var/www/geruapp/src/showcase/components/SuggestedTags.js"],"names":["SuggestedTags","searchTag","tag","str","split","length","substring","props","tags","styles","tagContainer","map","i","paddingVertical","onTagPressed","tagText","matchedString","autoCompleteString","matchTag","create","flex","paddingHorizontal","fontSize","fontFamily","FONT_HEAVY","color","propTypes","string","array","fetching","bool","defaultProps"],"mappings":";;;;AAAA;;;;AACA;;AACA;;;;IAEqBA,a;;;;;;;;;;2BAEXC,S,EAAWC,G,EAAK;AACxB,OAAIC,MAAMF,UAAUG,KAAV,CAAgB,GAAhB,CAAV;;AAEA,OAAGD,IAAIE,MAAJ,GAAa,CAAhB,EAAmB;AAClB,WAAOH,IAAII,SAAJ,CAAcH,IAAIA,IAAIE,MAAJ,GAAa,CAAjB,EAAoBA,MAAlC,CAAP;AACA;;AAED,UAAO,MAAMH,IAAII,SAAJ,CAAcL,UAAUI,MAAxB,CAAb;AACA;;;2BAEQ;AAAA;;AAAA,gBACkB,KAAKE,KADvB;AAAA,OACFC,IADE,UACFA,IADE;AAAA,OACIP,SADJ,UACIA,SADJ;;AAER,UACC;AAAA;AAAA,MAAM,OAAOQ,OAAOC,YAApB;AAEEF,SAAKG,GAAL,CAAS,UAACT,GAAD,EAAMU,CAAN;AAAA,YACR;AAAA;AAAA,QAAkB,OAAO,EAAEC,iBAAiB,CAAnB,EAAzB,EAAkD,SAAS;AAAA,eAAM,OAAKN,KAAL,CAAWO,YAAX,CAAwBb,SAAxB,EAAmCC,GAAnC,CAAN;AAAA,QAA3D;AACC;AAAA;AAAA,SAAM,OAAO,CAACO,OAAOM,OAAR,EAAiBN,OAAOO,aAAxB,CAAb;AACEf,gBADF;AAEC;AAAA;AAAA,UAAM,OAAO,CAACQ,OAAOM,OAAR,EAAiBN,OAAOQ,kBAAxB,CAAb;AAA2D,eAAKC,QAAL,CAAcjB,SAAd,EAAyBC,GAAzB;AAA3D;AAFD;AADD,MADQ;AAAA,KAAT;AAFF,IADD;AAcA;;;;;kBA5BmBF,a;;;AA+BrB,IAAIS,SAAS,wBAAWU,MAAX,CAAkB;AAC9BT,eAAc;AACbU,QAAM,CADO;AAEbC,qBAAmB;AAFN,EADgB;;AAM9BN,UAAS;AACRO,YAAU,EADF;AAERC,cAAY,oBAAUC;AAFd,EANqB;;AAW9BR,gBAAe;AACdS,SAAO;AADO,EAXe;;AAe9BR,qBAAoB;AACnBQ,SAAO;AADY;;AAfU,CAAlB,CAAb;;AAqBAzB,cAAc0B,SAAd,GAA0B;AACzBzB,YAAW,iBAAU0B,MADI;AAEzBnB,OAAM,iBAAUoB,KAFS;AAGzBC,WAAU,iBAAUC;AAHK,CAA1B;;AAMA9B,cAAc+B,YAAd,GAA6B;AAC5B9B,YAAW;AADiB,CAA7B","sourcesContent":["import React, { PropTypes, Component } from 'react'\nimport { StyleSheet, View , Text, TouchableOpacity} from 'react-native'\nimport variables from '../../styles/variables'\n\nexport default class SuggestedTags extends Component {\n\n\tmatchTag(searchTag, tag) {\n\t\tlet str = searchTag.split(\" \")\n\n\t\tif(str.length > 0) {\n\t\t\treturn tag.substring(str[str.length - 1].length)\n\t\t}\n\n\t\treturn ' ' + tag.substring(searchTag.length)\n\t}\n\n\trender() {\n\t\tvar { tags, searchTag } = this.props\n\t\treturn (\n\t\t\t<View style={styles.tagContainer}>\n\t\t\t\t{\n\t\t\t\t\ttags.map((tag, i) => (\n\t\t\t\t\t\t<TouchableOpacity style={{ paddingVertical: 3, }} onPress={() => this.props.onTagPressed(searchTag, tag)}>\n\t\t\t\t\t\t\t<Text style={[styles.tagText, styles.matchedString]}>\n\t\t\t\t\t\t\t\t{searchTag}\n\t\t\t\t\t\t\t\t<Text style={[styles.tagText, styles.autoCompleteString]}>{this.matchTag(searchTag, tag)}</Text>\t\t\t\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</View>\n\t\t)\n\t}\n}\n\nvar styles = StyleSheet.create({\n\ttagContainer: {\n\t\tflex: 1,\n\t\tpaddingHorizontal: 10,\n\t},\n\t\n\ttagText: {\n\t\tfontSize: 21,\n\t\tfontFamily: variables.FONT_HEAVY,\n\t},\n\n\tmatchedString: {\n\t\tcolor: '#242424',\n\t},\n\t\n\tautoCompleteString: {\n\t\tcolor: '#b5b5b5',\n\t}\n\n})\n\nSuggestedTags.propTypes = {\n\tsearchTag: PropTypes.string,\n\ttags: PropTypes.array,\n\tfetching: PropTypes.bool,\n}\n\nSuggestedTags.defaultProps = {\n\tsearchTag: '',\n}"]}]