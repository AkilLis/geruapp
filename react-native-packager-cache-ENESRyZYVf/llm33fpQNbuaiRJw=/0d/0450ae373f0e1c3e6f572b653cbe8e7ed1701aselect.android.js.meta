["bbb8d65622eeb683b61da840e52722ce4568f6fb","2acda5d5ded7c52e7438f3965302dfc23126972c",["react","react-native"],[20,54],{"version":3,"sources":["/var/www/geruapp/node_modules/tcomb-form-native/lib/templates/bootstrap/select.android.js"],"names":["React","require","View","Text","Picker","select","locals","hidden","stylesheet","formGroupStyle","formGroup","normal","controlLabelStyle","controlLabel","selectStyle","pickerContainer","helpBlockStyle","helpBlock","errorBlockStyle","errorBlock","hasError","error","label","help","options","map","value","text","onChange","enabled","mode","prompt","itemStyle","module","exports"],"mappings":"AAAA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;;eAC6BA,QAAQ,cAAR,C;IAAvBC,I,YAAAA,I;IAAMC,I,YAAAA,I;IAAMC,M,YAAAA,M;;AAElB,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,MAAIA,OAAOC,MAAX,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,MAAIC,aAAaF,OAAOE,UAAxB;AACA,MAAIC,iBAAiBD,WAAWE,SAAX,CAAqBC,MAA1C;AACA,MAAIC,oBAAoBJ,WAAWK,YAAX,CAAwBF,MAAhD;AACA,MAAIG,cAAc,qBAAc,EAAd,EAAkBN,WAAWH,MAAX,CAAkBM,MAApC,EAA4CH,WAAWO,eAAX,CAA2BJ,MAAvE,CAAlB;AACA,MAAIK,iBAAiBR,WAAWS,SAAX,CAAqBN,MAA1C;AACA,MAAIO,kBAAkBV,WAAWW,UAAjC;;AAEA,MAAIb,OAAOc,QAAX,EAAqB;AACnBX,qBAAiBD,WAAWE,SAAX,CAAqBW,KAAtC;AACAT,wBAAoBJ,WAAWK,YAAX,CAAwBQ,KAA5C;AACAP,kBAAcN,WAAWH,MAAX,CAAkBgB,KAAhC;AACAL,qBAAiBR,WAAWS,SAAX,CAAqBI,KAAtC;AACD;;AAED,MAAIC,QAAQhB,OAAOgB,KAAP,GAAe;AAAC,QAAD;AAAA,MAAM,OAAOV,iBAAb;AAAiCN,WAAOgB;AAAxC,GAAf,GAAuE,IAAnF;AACA,MAAIC,OAAOjB,OAAOiB,IAAP,GAAc;AAAC,QAAD;AAAA,MAAM,OAAOP,cAAb;AAA8BV,WAAOiB;AAArC,GAAd,GAAkE,IAA7E;AACA,MAAIF,QAAQf,OAAOc,QAAP,IAAmBd,OAAOe,KAA1B,GAAkC;AAAC,QAAD;AAAA,MAAM,yBAAwB,QAA9B,EAAuC,OAAOH,eAA9C;AAAgEZ,WAAOe;AAAvE,GAAlC,GAAyH,IAArI;;AAEA,MAAIG,UAAUlB,OAAOkB,OAAP,CAAeC,GAAf,CAAmB;AAAA,QAAEC,KAAF,QAAEA,KAAF;AAAA,QAASC,IAAT,QAASA,IAAT;AAAA,WAAmB,oBAAC,MAAD,CAAQ,IAAR,IAAa,KAAKD,KAAlB,EAAyB,OAAOA,KAAhC,EAAuC,OAAOC,IAA9C,GAAnB;AAAA,GAAnB,CAAd;;AAEA,SACE;AAAC,QAAD;AAAA,MAAM,OAAOlB,cAAb;AACGa,SADH;AAEE;AAAC,YAAD;AAAA;AACE,4BAAoBhB,OAAOgB,KAD7B;AAEE,aAAI,OAFN;AAGE,eAAOR,WAHT;AAIE,uBAAeR,OAAOoB,KAJxB;AAKE,uBAAepB,OAAOsB,QALxB;AAME,cAAMtB,OAAOiB,IANf;AAOE,iBAASjB,OAAOuB,OAPlB;AAQE,cAAMvB,OAAOwB,IARf;AASE,gBAAQxB,OAAOyB,MATjB;AAUE,mBAAWzB,OAAO0B;AAVpB;AAYGR;AAZH,KAFF;AAgBGD,QAhBH;AAiBGF;AAjBH,GADF;AAqBD;;AAEDY,OAAOC,OAAP,GAAiB7B,MAAjB","sourcesContent":["var React = require('react');\nvar { View, Text, Picker } = require('react-native');\n\nfunction select(locals) {\n  if (locals.hidden) {\n    return null;\n  }\n\n  var stylesheet = locals.stylesheet;\n  var formGroupStyle = stylesheet.formGroup.normal;\n  var controlLabelStyle = stylesheet.controlLabel.normal;\n  var selectStyle = Object.assign({}, stylesheet.select.normal, stylesheet.pickerContainer.normal);\n  var helpBlockStyle = stylesheet.helpBlock.normal;\n  var errorBlockStyle = stylesheet.errorBlock;\n\n  if (locals.hasError) {\n    formGroupStyle = stylesheet.formGroup.error;\n    controlLabelStyle = stylesheet.controlLabel.error;\n    selectStyle = stylesheet.select.error;\n    helpBlockStyle = stylesheet.helpBlock.error;\n  }\n\n  var label = locals.label ? <Text style={controlLabelStyle}>{locals.label}</Text> : null;\n  var help = locals.help ? <Text style={helpBlockStyle}>{locals.help}</Text> : null;\n  var error = locals.hasError && locals.error ? <Text accessibilityLiveRegion=\"polite\" style={errorBlockStyle}>{locals.error}</Text> : null;\n\n  var options = locals.options.map(({value, text}) => <Picker.Item key={value} value={value} label={text} />);\n\n  return (\n    <View style={formGroupStyle}>\n      {label}\n      <Picker\n        accessibilityLabel={locals.label}\n        ref=\"input\"\n        style={selectStyle}\n        selectedValue={locals.value}\n        onValueChange={locals.onChange}\n        help={locals.help}\n        enabled={locals.enabled}\n        mode={locals.mode}\n        prompt={locals.prompt}\n        itemStyle={locals.itemStyle}\n      >\n        {options}\n      </Picker>\n      {help}\n      {error}\n    </View>\n  );\n}\n\nmodule.exports = select;\n"]}]