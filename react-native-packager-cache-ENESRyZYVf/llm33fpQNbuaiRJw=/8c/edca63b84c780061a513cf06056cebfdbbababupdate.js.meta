["fb2bcde55f0c7a5ceabce0a18b4c31426e8f9767","96013893fc33690fc8aed10a84a4e705a70b98d6",["./assert","./isObject","./isFunction","./isArray","./isNumber","./assign"],[21,57,97,136,173,209],{"version":3,"sources":["/var/www/geruapp/node_modules/tcomb/lib/update.js"],"names":["assert","require","isObject","isFunction","isArray","isNumber","assign","getShallowCopy","x","Date","RegExp","concat","isCommand","k","update","commands","hasOwnProperty","getCommand","instance","patch","process","env","NODE_ENV","stringify","value","isChanged","newValue","$apply","f","$push","elements","arr","length","$remove","keys","obj","i","len","$set","$splice","splices","every","reduce","acc","splice","apply","$swap","config","from","to","element","$unshift","$merge","whatToMerge","result","module","exports"],"mappings":"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","sourcesContent":["var assert = require('./assert');\nvar isObject = require('./isObject');\nvar isFunction = require('./isFunction');\nvar isArray = require('./isArray');\nvar isNumber = require('./isNumber');\nvar assign = require('./assign');\n\nfunction getShallowCopy(x) {\n  if (isObject(x)) {\n    if (x instanceof Date || x instanceof RegExp) {\n      return x;\n    }\n    return assign({}, x);\n  }\n  if (isArray(x)) {\n    return x.concat();\n  }\n  return x;\n}\n\nfunction isCommand(k) {\n  return update.commands.hasOwnProperty(k);\n}\n\nfunction getCommand(k) {\n  return update.commands[k];\n}\n\nfunction update(instance, patch) {\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(isObject(patch), function () { return 'Invalid argument patch ' + assert.stringify(patch) + ' supplied to function update(instance, patch): expected an object containing commands'; });\n  }\n\n  var value = instance;\n  var isChanged = false;\n  var newValue;\n  for (var k in patch) {\n    if (patch.hasOwnProperty(k)) {\n      if (isCommand(k)) {\n        newValue = getCommand(k)(patch[k], value);\n        if (newValue !== instance) {\n          isChanged = true;\n          value = newValue;\n        } else {\n          value = instance;\n        }\n      }\n      else {\n        if (value === instance) {\n          value = getShallowCopy(instance);\n        }\n        newValue = update(value[k], patch[k]);\n        isChanged = isChanged || ( newValue !== value[k] );\n        value[k] = newValue;\n      }\n    }\n  }\n  return isChanged ? value : instance;\n}\n\n// built-in commands\n\nfunction $apply(f, value) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(isFunction(f), 'Invalid argument f supplied to immutability helper { $apply: f } (expected a function)');\n  }\n  return f(value);\n}\n\nfunction $push(elements, arr) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(isArray(elements), 'Invalid argument elements supplied to immutability helper { $push: elements } (expected an array)');\n    assert(isArray(arr), 'Invalid value supplied to immutability helper $push (expected an array)');\n  }\n  if (elements.length > 0) {\n    return arr.concat(elements);\n  }\n  return arr;\n}\n\nfunction $remove(keys, obj) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(isArray(keys), 'Invalid argument keys supplied to immutability helper { $remove: keys } (expected an array)');\n    assert(isObject(obj), 'Invalid value supplied to immutability helper $remove (expected an object)');\n  }\n  if (keys.length > 0) {\n    obj = getShallowCopy(obj);\n    for (var i = 0, len = keys.length; i < len; i++ ) {\n      delete obj[keys[i]];\n    }\n  }\n  return obj;\n}\n\nfunction $set(value) {\n  return value;\n}\n\nfunction $splice(splices, arr) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(isArray(splices) && splices.every(isArray), 'Invalid argument splices supplied to immutability helper { $splice: splices } (expected an array of arrays)');\n    assert(isArray(arr), 'Invalid value supplied to immutability helper $splice (expected an array)');\n  }\n  if (splices.length > 0) {\n    arr = getShallowCopy(arr);\n    return splices.reduce(function (acc, splice) {\n      acc.splice.apply(acc, splice);\n      return acc;\n    }, arr);\n  }\n  return arr;\n}\n\nfunction $swap(config, arr) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(isObject(config), 'Invalid argument config supplied to immutability helper { $swap: config } (expected an object)');\n    assert(isNumber(config.from), 'Invalid argument config.from supplied to immutability helper { $swap: config } (expected a number)');\n    assert(isNumber(config.to), 'Invalid argument config.to supplied to immutability helper { $swap: config } (expected a number)');\n    assert(isArray(arr), 'Invalid value supplied to immutability helper $swap (expected an array)');\n  }\n  if (config.from !== config.to) {\n    arr = getShallowCopy(arr);\n    var element = arr[config.to];\n    arr[config.to] = arr[config.from];\n    arr[config.from] = element;\n  }\n  return arr;\n}\n\nfunction $unshift(elements, arr) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(isArray(elements), 'Invalid argument elements supplied to immutability helper {$unshift: elements} (expected an array)');\n    assert(isArray(arr), 'Invalid value supplied to immutability helper $unshift (expected an array)');\n  }\n  if (elements.length > 0) {\n    return elements.concat(arr);\n  }\n  return arr;\n}\n\nfunction $merge(whatToMerge, value) {\n  var isChanged = false;\n  var result = getShallowCopy(value);\n  for (var k in whatToMerge) {\n    if (whatToMerge.hasOwnProperty(k)) {\n      result[k] = whatToMerge[k];\n      isChanged = isChanged || ( result[k] !== value[k] );\n    }\n  }\n  return isChanged ? result : value;\n}\n\nupdate.commands = {\n  $apply: $apply,\n  $push: $push,\n  $remove: $remove,\n  $set: $set,\n  $splice: $splice,\n  $swap: $swap,\n  $unshift: $unshift,\n  $merge: $merge\n};\n\nmodule.exports = update;\n"]}]