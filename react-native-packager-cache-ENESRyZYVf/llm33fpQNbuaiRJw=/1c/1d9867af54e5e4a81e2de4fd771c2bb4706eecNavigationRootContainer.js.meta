["a75c7107f4688fe33997f64fca6c945597b9f503","106cc97d3f76e56d999b6d217efedd005da562c0",["react-native","./NavigationPropTypes","./NavigationStateUtils","react","prop-types"],[43,95,154,215,265,311,409],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-experimental-navigation/NavigationRootContainer.js"],"names":["AsyncStorage","require","Linking","NavigationPropTypes","NavigationStateUtils","Platform","React","getBackAction","type","PropTypes","NavigationRootContainer","props","navState","persistenceKey","getParent","reducer","initialAction","state","handleNavigation","bind","_handleOpenURLEvent","linkingActionMap","getInitialURL","then","_handleOpenURL","OS","addEventListener","getItem","err","storedString","setState","JSON","parse","removeEventListener","event","url","action","onNavigate","setItem","stringify","navigation","renderNavigation","Component","propTypes","isRequired","func","string","defaultProps","childContextTypes","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule NavigationRootContainer\n * @flow\n */\n'use strict';\n\nconst AsyncStorage = require('react-native').AsyncStorage;\nconst Linking = require('react-native').Linking;\nconst NavigationPropTypes = require('./NavigationPropTypes');\nconst NavigationStateUtils = require('./NavigationStateUtils');\nconst Platform = require('react-native').Platform;\nconst React = require('react');\n\nimport type {\n  NavigationAction,\n  NavigationParentState,\n  NavigationReducer,\n  NavigationRenderer,\n} from 'NavigationTypeDefinition';\n\nexport type BackAction = {\n  type: 'BackAction',\n};\n\ntype Props = {\n  /*\n   * The default action to be passed into the reducer when getting the first\n   * state. Defaults to {type: 'RootContainerInitialAction'}\n   */\n  initialAction: NavigationAction,\n\n  /*\n   * Provide linkingActionMap to instruct the container to subscribe to linking\n   * events, and use this mapper to convert URIs into actions that your app can\n   * handle\n   */\n  linkingActionMap: ?((uri: ?string) => NavigationAction),\n\n  /*\n   * Provide this key, and the container will store the navigation state in\n   * AsyncStorage through refreshes, with the provided key\n   */\n  persistenceKey: ?string,\n\n\n  /*\n   * A function that will output the latest navigation state as a function of\n   * the (optional) previous state, and an action\n   */\n  reducer: NavigationReducer,\n\n\n  /*\n   * Set up the rendering of the app for a given navigation state\n   */\n  renderNavigation: NavigationRenderer,\n};\n\ntype State = {\n  navState: ?NavigationParentState,\n};\n\nfunction getBackAction(): BackAction {\n  return { type: 'BackAction' };\n}\n\nconst PropTypes = require('prop-types');\n\nclass NavigationRootContainer extends React.Component<any, Props, State> {\n  _handleOpenURLEvent: Function;\n\n  props: Props;\n  state: State;\n\n  static propTypes = {\n    initialAction: NavigationPropTypes.action.isRequired,\n    linkingActionMap: PropTypes.func,\n    persistenceKey: PropTypes.string,\n    reducer: PropTypes.func.isRequired,\n    renderNavigation: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    initialAction: { type: 'RootContainerInitialAction' },\n  };\n\n  static childContextTypes = {\n    onNavigate: PropTypes.func,\n  };\n\n\n  static getBackAction = getBackAction;\n\n  constructor(props: Props) {\n    super(props);\n\n    let navState = null;\n    if (!this.props.persistenceKey) {\n      navState = NavigationStateUtils.getParent(\n        this.props.reducer(null, props.initialAction)\n      );\n    }\n    this.state = { navState };\n  }\n\n  componentWillMount(): void {\n    (this: any).handleNavigation = this.handleNavigation.bind(this);\n    (this: any)._handleOpenURLEvent = this._handleOpenURLEvent.bind(this);\n  }\n\n  componentDidMount(): void {\n    if (this.props.linkingActionMap) {\n      Linking.getInitialURL().then(this._handleOpenURL.bind(this));\n      Platform.OS === 'ios' && Linking.addEventListener('url', this._handleOpenURLEvent);\n    }\n    if (this.props.persistenceKey) {\n      AsyncStorage.getItem(this.props.persistenceKey, (err, storedString) => {\n        if (err || !storedString) {\n          this.setState({\n            // $FlowFixMe - navState is missing properties :(\n            navState: this.props.reducer(null, this.props.initialAction),\n          });\n          return;\n        }\n        this.setState({\n          navState: JSON.parse(storedString),\n        });\n      });\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (Platform.OS === 'ios') {\n      Linking.removeEventListener('url', this._handleOpenURLEvent);\n    }\n  }\n\n  _handleOpenURLEvent(event: {url: string}): void {\n    this._handleOpenURL(event.url);\n  }\n\n  _handleOpenURL(url: ?string): void {\n    if (!this.props.linkingActionMap) {\n      return;\n    }\n    const action = this.props.linkingActionMap(url);\n    if (action) {\n      this.handleNavigation(action);\n    }\n  }\n\n  getChildContext(): Object {\n    return {\n      onNavigate: this.handleNavigation,\n    };\n  }\n\n  handleNavigation(action: Object): boolean {\n    const navState = this.props.reducer(this.state.navState, action);\n    if (navState === this.state.navState) {\n      return false;\n    }\n    this.setState({\n      // $FlowFixMe - navState is missing properties :(\n      navState,\n    });\n\n    if (this.props.persistenceKey) {\n      AsyncStorage.setItem(this.props.persistenceKey, JSON.stringify(navState));\n    }\n\n    return true;\n  }\n\n  render(): ReactElement {\n    const navigation = this.props.renderNavigation(\n      this.state.navState,\n      this.handleNavigation\n    );\n    return navigation;\n  }\n}\n\nmodule.exports = NavigationRootContainer;\n"]}]