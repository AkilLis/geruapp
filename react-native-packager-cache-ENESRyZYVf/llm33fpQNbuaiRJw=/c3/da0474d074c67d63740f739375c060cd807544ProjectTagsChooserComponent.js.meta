["db3504978cd8b9b2a15c4121ee59823d2c42a7d6","3855df02cb26c1c0bb6347919ad87bc1b3cbb492",["react","../ProjectActions","react-redux","redux","react-native","react-native-navbar","../../components/react-native-taggable-search/lib/navbar/CustomIcon","../../showcase/components/TagsList","../../styles/variables","../../components/NavBarIconText"],[86,186,311,349,387,438,572,738,868,993],{"version":3,"sources":["/var/www/geruapp/src/project/components/ProjectTagsChooserComponent.js"],"names":["projectActions","mapDispatchToProps","dispatch","actions","ProjectTagsChooserComponent","tag","props","tagSelected","onTagToggled","type","tagRemove","tagDiselect","tags","styles","container","onBackAction","onNavigateNext","questionContainer","question","onTagSelected","bind","onTagDiselect","propTypes","object","create","flex","padding","fontSize","fontFamily","FONT_HEAVY","justifyContent","alignItems","paddingTop","paddingHorizontal"],"mappings":";;;;AAAA;;;;AACA;;IAAYA,c;;AACZ;;AACA;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,SAASC,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,QAAO;AACHC,WAAS,+BAAmBH,cAAnB,EAAmCE,QAAnC;AADN,EAAP;AAGD;;IAGKE,2B;;;;;;;;;;gCACSC,G,EAAK;AAClB,QAAKC,KAAL,CAAWH,OAAX,CAAmBI,WAAnB,CAA+BF,GAA/B;AACA,QAAKC,KAAL,CAAWE,YAAX;AACA;;;gCAEaH,G,EAAK;AAClB,OAAGA,IAAII,IAAJ,IAAY,GAAf,EAAoB;AACnB,SAAKH,KAAL,CAAWH,OAAX,CAAmBO,SAAnB;AACA,IAFD,MAEO;AACN,SAAKJ,KAAL,CAAWH,OAAX,CAAmBQ,WAAnB,CAA+BN,GAA/B;AACA;;AAED,QAAKC,KAAL,CAAWE,YAAX;AACA;;;2BAUQ;AAAA,OACFI,IADE,GACO,KAAKN,KADZ,CACFM,IADE;;AAER,UACC;AAAA;AAAA,MAAM,OAAOC,OAAOC,SAApB;AACC;AACU,iBACI,0DAAgB,MAAK,wBAArB;AACI,YAAM,EADV;AAEI,aAAM,SAFV;AAGI,YAAK,QAHT;AAII,gBAAS,MAJb;AAKI,eAAS,KAAKR,KAAL,CAAWS;AALxB,OAFd;AAUO,kBACO,0DAAgB,MAAK,2BAArB;AACI,YAAM,EADV;AAEI,aAAM,SAFV;AAGI,YAAK,MAHT;AAII,eAAS,KAAKT,KAAL,CAAWU;AAJxB;AAXd,MADD;AAqBO;AAAA;AAAA,OAAM,OAAOH,OAAOI,iBAApB;AACA;AAAA;AAAA,QAAM,OAAOJ,OAAOK,QAApB;AAAA;AAAA;AADA,KArBP;AAyBI,wDAAU,MAAMN,IAAhB;AACE,oBAAe,KAAKO,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CADjB;AAEE,oBAAe,KAAKC,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAFjB;AAzBJ,IADD;AAgCA;;;;;AAGFhB,4BAA4BkB,SAA5B,GAAwC;AACvCV,OAAM,iBAAUW;AADuB,CAAxC;;AAIA,IAAIV,SAAS,wBAAWW,MAAX,CAAkB;AAC9BV,YAAW;AACVW,QAAM,CADI;AAEVC,WAAS;AAFC,EADmB;;AAM9BR,WAAU;AACTS,YAAU,EADD;AAETC,cAAY,oBAAUC,UAFb;AAGTC,kBAAgB,QAHP;AAITC,cAAY;AAJH,EANoB;;AAa9Bd,oBAAmB;AAClBa,kBAAgB,QADE;AAElBC,cAAY,QAFM;AAGlBC,cAAY,EAHM;AAIlBC,qBAAmB;AAJD;AAbW,CAAlB,CAAb;;kBAqBe,yBAAQ,IAAR,EAAchC,kBAAd,EAAkCG,2BAAlC,C","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport * as projectActions from '../ProjectActions'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { StyleSheet, View, Text } from 'react-native'\nimport NavigationBar from 'react-native-navbar' \nimport CustomIcon from '../../components/react-native-taggable-search/lib/navbar/CustomIcon'\nimport TagsList from '../../showcase/components/TagsList'\nimport variables from '../../styles/variables'\nimport NavBarIconText from '../../components/NavBarIconText'\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n      actions: bindActionCreators(projectActions, dispatch)\n  }\n}\n\n\nclass ProjectTagsChooserComponent extends Component{\n\tonTagSelected(tag) {\n\t\tthis.props.actions.tagSelected(tag)\t\t\n\t\tthis.props.onTagToggled()\n\t}\n\n\tonTagDiselect(tag) {\n\t\tif(tag.type == 'N') {\n\t\t\tthis.props.actions.tagRemove()\n\t\t} else {\n\t\t\tthis.props.actions.tagDiselect(tag)\n\t\t}\n\n\t\tthis.props.onTagToggled()\n\t}\n\n\t/*shouldComponentUpdate(nextProps, nextState) {\n\t    if (nextProps.tags.get('fetching') === false) {\n\t      \treturn true\n\t    }\n\n\t    return false\n\t}*/\n\n\trender() {\n\t\tlet { tags } = this.props\n\t\treturn (\n\t\t\t<View style={styles.container}>\n\t\t\t\t<NavigationBar\n\t\t            leftButton={\n\t\t                <NavBarIconText icon=\"ios-arrow-back-outline\"\n\t\t                \t\t\t\tsize={30}\n\t\t                \t\t\t\tcolor=\"#b5b5b5\"\n\t\t                \t\t\t\ttext=\"cancel\"\n\t\t                \t\t\t\tposition=\"back\"\n\t\t                \t\t\t\tonPress={this.props.onBackAction}\n\t\t                \t\t\t\t/>\n\t\t        \t}\n\t\t        \trightButton={\n\t\t                <NavBarIconText icon=\"ios-arrow-forward-outline\"\n\t\t                \t\t\t\tsize={30}\n\t\t                \t\t\t\tcolor=\"#b5b5b5\"\n\t\t                \t\t\t\ttext=\"next\"\n\t\t                \t\t\t\tonPress={this.props.onNavigateNext}\n\t\t                \t\t\t\t/>\n\t\t        \t}\n\t\t        />\n\n\t\t        <View style={styles.questionContainer}>\n\t\t\t      \t<Text style={styles.question}>Would you like us to make something for you?</Text>\n\t\t\t    </View>\n\n\t\t    \t<TagsList tags={tags}\n\t\t\t \t\t\t  onTagSelected={this.onTagSelected.bind(this)}\n\t\t\t \t\t\t  onTagDiselect={this.onTagDiselect.bind(this)}/>\n\t\t\t\t\n\t\t\t</View>\n\t\t)\n\t}\n}\n\nProjectTagsChooserComponent.propTypes = {\n\ttags: PropTypes.object,\n}\n\nvar styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tpadding: 10,\n\t},\n\n\tquestion: {\n\t\tfontSize: 24,\n\t\tfontFamily: variables.FONT_HEAVY,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t},\n\n\tquestionContainer: {\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tpaddingTop: 25,\n\t\tpaddingHorizontal: 15,\n\t},\n})\n\nexport default connect(null, mapDispatchToProps)(ProjectTagsChooserComponent)"]}]