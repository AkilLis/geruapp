["11b748f7fd47e5a9961a18936cad69e53cbc5fdc","36090f9b593bb173d140c6d8a184bb551b8185fc",["EmitterSubscription","RCTDeviceEventEmitter","React","ReactNative","StyleSheet","View","Inspector","YellowBox"],[51,111,157,193,234,268,1443,2389],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/ReactNative/AppContainer.js"],"names":["EmitterSubscription","require","RCTDeviceEventEmitter","React","ReactNative","StyleSheet","View","AppContainer","state","inspector","mainKey","_subscription","rootTag","props","__DEV__","addListener","Inspector","findNodeHandle","_mainRef","updateInspectedViewTag","setState","s","remove","yellowBox","YellowBox","styles","appContainer","ref","children","Component","childContextTypes","PropTypes","number","create","flex","module","exports"],"mappings":";;AAYA;;AAEA,IAAMA,sBAAsBC,QAAQ,qBAAR,CAA5B;AACA,IAAMC,wBAAwBD,QAAQ,uBAAR,CAA9B;AACA,IAAME,QAAQF,QAAQ,OAAR,CAAd;AACA,IAAMG,cAAcH,QAAQ,aAAR,CAApB;AACA,IAAMI,aAAaJ,QAAQ,YAAR,CAAnB;AACA,IAAMK,OAAOL,QAAQ,MAAR,CAAb;;IAcMM,Y;;;;;;;;;;;;;;8MAEJC,K,GAAe;AACbC,iBAAW,IADE;AAEbC,eAAS;AAFI,K,QAKfC,a,GAAsC,I;;;;;sCAMX;AACzB,aAAO;AACLC,iBAAS,KAAKC,KAAL,CAAWD;AADf,OAAP;AAGD;;;wCAEyB;AAAA;;AACxB,UAAIE,OAAJ,EAAa;AACX,aAAKH,aAAL,GAAqBT,sBAAsBa,WAAtB,CACnB,wBADmB,EAEnB,YAAM;AACJ,cAAMC,YAAYf,QAAQ,WAAR,CAAlB;AACA,cAAMQ,YAAY,OAAKD,KAAL,CAAWC,SAAX,GACd,IADc,GAEd,oBAAC,SAAD;AACE,8BAAkBL,YAAYa,cAAZ,CAA2B,OAAKC,QAAhC,CADpB;AAEE,kCAAsB,8BAACC,sBAAD,EAA4B;AAChD,qBAAKC,QAAL,CACE,UAACC,CAAD;AAAA,uBAAQ,EAACX,SAASW,EAAEX,OAAF,GAAY,CAAtB,EAAR;AAAA,eADF,EAEE;AAAA,uBAAMS,uBACJf,YAAYa,cAAZ,CAA2B,OAAKC,QAAhC,CADI,CAAN;AAAA,eAFF;AAMD;AATH,YAFJ;AAaA,iBAAKE,QAAL,CAAc,EAACX,oBAAD,EAAd;AACD,SAlBkB,CAArB;AAoBD;AACF;;;2CAE4B;AAC3B,UAAI,KAAKE,aAAT,EAAwB;AACtB,aAAKA,aAAL,CAAmBW,MAAnB;AACD;AACF;;;6BAE0B;AAAA;;AACzB,UAAIC,YAAY,IAAhB;AACA,UAAIT,OAAJ,EAAa;AACX,YAAMU,YAAYvB,QAAQ,WAAR,CAAlB;AACAsB,oBAAY,oBAAC,SAAD,OAAZ;AACD;;AAED,aACE;AAAC,YAAD;AAAA,UAAM,OAAOE,OAAOC,YAApB,EAAkC,eAAc,UAAhD;AACE;AAAC,cAAD;AAAA;AACE,yBAAa,CAAC,KAAKlB,KAAL,CAAWC,SAD3B;AAEE,iBAAK,KAAKD,KAAL,CAAWE,OAFlB;AAGE,2BAAc,UAHhB;AAIE,mBAAOe,OAAOC,YAJhB,EAI8B,KAAK,aAACC,KAAD,EAAS;AAAC,qBAAKT,QAAL,GAAgBS,KAAhB;AAAqB,aAJlE;AAKG,eAAKd,KAAL,CAAWe;AALd,SADF;AAQGL,iBARH;AASG,aAAKf,KAAL,CAAWC;AATd,OADF;AAaD;;;EAtEwBN,MAAM0B,S;;AAA3BtB,Y,CASGuB,iB,GAAoB;AACzBlB,WAAST,MAAM4B,SAAN,CAAgBC;AADA,C;;;AAgE7B,IAAMP,SAASpB,WAAW4B,MAAX,CAAkB;AAC/BP,gBAAc;AACZQ,UAAM;AADM;AADiB,CAAlB,CAAf;;AAMAC,OAAOC,OAAP,GAAiB7B,YAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AppContainer\n * @flow\n */\n\n'use strict';\n\nconst EmitterSubscription = require('EmitterSubscription');\nconst RCTDeviceEventEmitter = require('RCTDeviceEventEmitter');\nconst React = require('React');\nconst ReactNative = require('ReactNative');\nconst StyleSheet = require('StyleSheet');\nconst View = require('View');\n\ntype Context = {\n  rootTag: number,\n};\ntype Props = {\n  children?: React.Children,\n  rootTag: number,\n};\ntype State = {\n  inspector: ?React.Element<*>,\n  mainKey: number,\n};\n\nclass AppContainer extends React.Component {\n  props: Props;\n  state: State = {\n    inspector: null,\n    mainKey: 1,\n  };\n  _mainRef: ?React.Element<*>;\n  _subscription: ?EmitterSubscription = null;\n\n  static childContextTypes = {\n    rootTag: React.PropTypes.number,\n  };\n\n  getChildContext(): Context {\n    return {\n      rootTag: this.props.rootTag,\n    };\n  }\n\n  componentDidMount(): void {\n    if (__DEV__) {\n      this._subscription = RCTDeviceEventEmitter.addListener(\n        'toggleElementInspector',\n        () => {\n          const Inspector = require('Inspector');\n          const inspector = this.state.inspector\n            ? null\n            : <Inspector\n                inspectedViewTag={ReactNative.findNodeHandle(this._mainRef)}\n                onRequestRerenderApp={(updateInspectedViewTag) => {\n                  this.setState(\n                    (s) => ({mainKey: s.mainKey + 1}),\n                    () => updateInspectedViewTag(\n                      ReactNative.findNodeHandle(this._mainRef)\n                    )\n                  );\n                }}\n              />;\n          this.setState({inspector});\n        },\n      );\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this._subscription) {\n      this._subscription.remove();\n    }\n  }\n\n  render(): React.Element<*> {\n    let yellowBox = null;\n    if (__DEV__) {\n      const YellowBox = require('YellowBox');\n      yellowBox = <YellowBox />;\n    }\n\n    return (\n      <View style={styles.appContainer} pointerEvents=\"box-none\">\n        <View\n          collapsable={!this.state.inspector}\n          key={this.state.mainKey}\n          pointerEvents=\"box-none\"\n          style={styles.appContainer} ref={(ref) => {this._mainRef = ref;}}>\n          {this.props.children}\n        </View>\n        {yellowBox}\n        {this.state.inspector}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  appContainer: {\n    flex: 1,\n  },\n});\n\nmodule.exports = AppContainer;\n"]}]