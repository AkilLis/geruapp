["05ed4c378b13a05d537973986dded7b5827f40a2","657ea60c920c8917c069a60c5ef8c16c7a5baf4e",["fbjs/lib/invariant"],[40],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-experimental-navigation/NavigationStateUtils.js"],"names":["invariant","require","getParent","state","Object","children","Array","undefined","index","get","key","parentState","childState","find","child","indexOf","map","push","newChildState","lastChildren","length","pop","slice","reset","nextChildren","nextIndex","set","jumpToIndex","jumpTo","replaceAt","newState","replaceAtIndex","NavigationStateUtils","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule NavigationStateUtils\n * @flow\n */\n'use strict';\n\nconst invariant = require('fbjs/lib/invariant');\n\nimport type {\n  NavigationState,\n  NavigationParentState,\n} from 'NavigationTypeDefinition';\n\nfunction getParent(state: NavigationState): ?NavigationParentState {\n  if (\n    (state instanceof Object) &&\n    (state.children instanceof Array) &&\n    (state.children[0] !== undefined) &&\n    (typeof state.index === 'number') &&\n    (state.children[state.index] !== undefined)\n  ) {\n    return state;\n  }\n  return null;\n}\n\nfunction get(state: NavigationState, key: string): ?NavigationState {\n  const parentState = getParent(state);\n  if (!parentState) {\n    return null;\n  }\n  const childState = parentState.children.find(child => child.key === key);\n  return childState || null;\n}\n\nfunction indexOf(state: NavigationState, key: string): ?number {\n  const parentState = getParent(state);\n  if (!parentState) {\n    return null;\n  }\n  const index = parentState.children.map(child => child.key).indexOf(key);\n  if (index === -1) {\n    return null;\n  }\n  return index;\n}\n\nfunction push(state: NavigationParentState, newChildState: NavigationState): NavigationParentState {\n  var lastChildren: Array<NavigationState> = state.children;\n  return {\n    ...state,\n    children: [\n      ...lastChildren,\n      newChildState,\n    ],\n    index: lastChildren.length,\n  };\n}\n\nfunction pop(state: NavigationParentState): NavigationParentState {\n  const lastChildren = state.children;\n  return {\n    ...state,\n    children: lastChildren.slice(0, lastChildren.length - 1),\n    index: lastChildren.length - 2,\n  };\n}\n\nfunction reset(state: NavigationState, nextChildren: ?Array<NavigationState>, nextIndex: ?number): NavigationState {\n  const parentState = getParent(state);\n  if (!parentState) {\n    return state;\n  }\n  const children = nextChildren || parentState.children;\n  const index = nextIndex == null ? parentState.index : nextIndex;\n  if (children === parentState.children && index === parentState.index) {\n    return state;\n  }\n  return {\n    ...parentState,\n    children,\n    index,\n  };\n}\n\nfunction set(state: ?NavigationState, key: string, nextChildren: Array<NavigationState>, nextIndex: number): NavigationState {\n  if (!state) {\n    return {\n      children: nextChildren,\n      index: nextIndex,\n      key,\n    };\n  }\n  const parentState = getParent(state);\n  if (!parentState) {\n    return {\n      children: nextChildren,\n      index: nextIndex,\n      key,\n    };\n  }\n  if (nextChildren === parentState.children && nextIndex === parentState.index && key === parentState.key) {\n    return parentState;\n  }\n  return {\n    ...parentState,\n    children: nextChildren,\n    index: nextIndex,\n    key,\n  };\n}\n\nfunction jumpToIndex(state: NavigationState, index: number): NavigationState {\n  const parentState = getParent(state);\n  if (parentState && parentState.index === index) {\n    return parentState;\n  }\n  return {\n    ...parentState,\n    index,\n  };\n}\n\nfunction jumpTo(state: NavigationState, key: string): NavigationState {\n  const parentState = getParent(state);\n  if (!parentState) {\n    return state;\n  }\n  const index = parentState.children.indexOf(parentState.children.find(child => child.key === key));\n  invariant(\n    index !== -1,\n    'Cannot find child with matching key in this NavigationState'\n  );\n  return {\n    ...parentState,\n    index,\n  };\n}\n\nfunction replaceAt(state: NavigationState, key: string, newState: NavigationState): NavigationState {\n  const parentState = getParent(state);\n  if (!parentState) {\n    return state;\n  }\n  const children = [...parentState.children];\n  const index = parentState.children.indexOf(parentState.children.find(child => child.key === key));\n  invariant(\n    index !== -1,\n    'Cannot find child with matching key in this NavigationState'\n  );\n  children[index] = newState;\n  return {\n    ...parentState,\n    children,\n  };\n}\n\nfunction replaceAtIndex(state: NavigationState, index: number, newState: NavigationState): NavigationState {\n  const parentState = getParent(state);\n  if (!parentState) {\n    return state;\n  }\n  const children = [...parentState.children];\n  children[index] = newState;\n  return {\n    ...parentState,\n    children,\n  };\n}\n\nconst NavigationStateUtils = {\n  getParent,\n  get: get,\n  indexOf,\n  push,\n  pop,\n  reset,\n  set: set,\n  jumpToIndex,\n  jumpTo,\n  replaceAt,\n  replaceAtIndex,\n};\n\nmodule.exports = NavigationStateUtils;\n"]}]