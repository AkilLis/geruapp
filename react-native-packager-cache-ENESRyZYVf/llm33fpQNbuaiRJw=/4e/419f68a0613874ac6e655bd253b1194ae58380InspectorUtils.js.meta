["d825fe4b0fd9a9be876bf3d3b8b0afbdf59dd271","e576ebdb9a52f848437c134d6d6dd41a17f75d06",["ReactNativeComponentTree"],[55],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Inspector/InspectorUtils.js"],"names":["ReactNativeComponentTree","require","traverseOwnerTreeUp","hierarchy","instance","unshift","_currentElement","_owner","findInstanceByNativeTag","nativeTag","getInstanceFromNode","tag","getOwnerHierarchy","lastNotNativeInstance","i","length","viewConfig","module","exports"],"mappings":";AAUA;;AAEA,IAAIA,2BAA2BC,QAAQ,0BAAR,CAA/B;;AAEA,SAASC,mBAAT,CAA6BC,SAA7B,EAAwCC,QAAxC,EAAkD;AAChD,MAAIA,QAAJ,EAAc;AACZD,cAAUE,OAAV,CAAkBD,QAAlB;AACAF,wBAAoBC,SAApB,EAA+BC,SAASE,eAAT,CAAyBC,MAAxD;AACD;AACF;;AAED,SAASC,uBAAT,CAAiCC,SAAjC,EAA4C;AAC1C,MAAIL,WAAWJ,yBAAyBU,mBAAzB,CAA6CD,SAA7C,CAAf;AACA,MAAI,CAACL,QAAD,IAAa,OAAOA,SAASO,GAAhB,KAAwB,QAAzC,EAAmD;AAEjD,WAAO,IAAP;AACD;AACD,SAAOP,QAAP;AACD;;AAED,SAASQ,iBAAT,CAA2BR,QAA3B,EAAqC;AACnC,MAAID,YAAY,EAAhB;AACAD,sBAAoBC,SAApB,EAA+BC,QAA/B;AACA,SAAOD,SAAP;AACD;;AAED,SAASU,qBAAT,CAA+BV,SAA/B,EAA0C;AACxC,OAAK,IAAIW,IAAIX,UAAUY,MAAV,GAAmB,CAAhC,EAAmCD,IAAI,CAAvC,EAA0CA,GAA1C,EAA+C;AAC7C,QAAMV,WAAWD,UAAUW,CAAV,CAAjB;AACA,QAAI,CAACV,SAASY,UAAd,EAA0B;AACxB,aAAOZ,QAAP;AACD;AACF;AACD,SAAOD,UAAU,CAAV,CAAP;AACD;;AAEDc,OAAOC,OAAP,GAAiB,EAACV,gDAAD,EAA0BI,oCAA1B,EAA6CC,4CAA7C,EAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule InspectorUtils\n */\n'use strict';\n\nvar ReactNativeComponentTree = require('ReactNativeComponentTree');\n\nfunction traverseOwnerTreeUp(hierarchy, instance) {\n  if (instance) {\n    hierarchy.unshift(instance);\n    traverseOwnerTreeUp(hierarchy, instance._currentElement._owner);\n  }\n}\n\nfunction findInstanceByNativeTag(nativeTag) {\n  var instance = ReactNativeComponentTree.getInstanceFromNode(nativeTag);\n  if (!instance || typeof instance.tag === 'number') {\n    // TODO(sema): We've disabled the inspector when using Fiber. Fix #15953531\n    return null;\n  }\n  return instance;\n}\n\nfunction getOwnerHierarchy(instance) {\n  var hierarchy = [];\n  traverseOwnerTreeUp(hierarchy, instance);\n  return hierarchy;\n}\n\nfunction lastNotNativeInstance(hierarchy) {\n  for (let i = hierarchy.length - 1; i > 1; i--) {\n    const instance = hierarchy[i];\n    if (!instance.viewConfig) {\n      return instance;\n    }\n  }\n  return hierarchy[0];\n}\n\nmodule.exports = {findInstanceByNativeTag, getOwnerHierarchy, lastNotNativeInstance};\n"]}]