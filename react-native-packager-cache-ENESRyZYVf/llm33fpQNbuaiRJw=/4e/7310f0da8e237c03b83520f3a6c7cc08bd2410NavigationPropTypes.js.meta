["8abd9c06441cbb80798191e1e31f0d5374a3da39","6df7e407ce632b80769fe6dafe2a1636cd03c5c1",["react-native","react","prop-types"],[39,85,120],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-experimental-navigation/NavigationPropTypes.js"],"names":["Animated","require","React","PropTypes","action","shape","type","string","isRequired","animatedValue","instanceOf","Value","navigationState","key","navigationParentState","index","number","children","arrayOf","layout","height","initHeight","initWidth","isMeasured","bool","width","scene","isStale","SceneRendererProps","onNavigate","func","position","scenes","SceneRenderer","panHandlers","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","onStartShouldSetResponderCapture","extractSceneRendererProps","props","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule NavigationPropTypes\n * @flow\n */\n'use strict';\n\nimport type  {\n  NavigationSceneRendererProps,\n} from 'NavigationTypeDefinition';\n\n/**\n * React component PropTypes Definitions. Consider using this as a supplementary\n * measure with `NavigationTypeDefinition`. This helps to capture the propType\n * error at run-time, where as `NavigationTypeDefinition` capture the flow\n * type check errors at build time.\n */\n\nconst Animated = require('react-native').Animated;\nconst React = require('react');\n\nconst PropTypes = require('prop-types');\n\n/* NavigationAction */\nconst action =  PropTypes.shape({\n  type: PropTypes.string.isRequired,\n});\n\n/* NavigationAnimatedValue  */\nconst animatedValue = PropTypes.instanceOf(Animated.Value);\n\n/* NavigationState  */\nconst navigationState = PropTypes.shape({\n  key: PropTypes.string.isRequired,\n});\n\n/* NavigationParentState  */\nconst navigationParentState = PropTypes.shape({\n  index: PropTypes.number.isRequired,\n  key: PropTypes.string.isRequired,\n  children: PropTypes.arrayOf(navigationState),\n});\n\n/* NavigationLayout */\nconst layout = PropTypes.shape({\n  height: animatedValue,\n  initHeight: PropTypes.number.isRequired,\n  initWidth: PropTypes.number.isRequired,\n  isMeasured: PropTypes.bool.isRequired,\n  width: animatedValue,\n});\n\n/* NavigationScene */\nconst scene = PropTypes.shape({\n  index: PropTypes.number.isRequired,\n  isStale: PropTypes.bool.isRequired,\n  key: PropTypes.string.isRequired,\n  navigationState,\n});\n\n/* NavigationSceneRendererProps */\nconst SceneRendererProps = {\n  layout: layout.isRequired,\n  navigationState: navigationParentState.isRequired,\n  onNavigate: PropTypes.func.isRequired,\n  position: animatedValue.isRequired,\n  scene: scene.isRequired,\n  scenes: PropTypes.arrayOf(scene).isRequired,\n};\n\nconst SceneRenderer = PropTypes.shape(SceneRendererProps);\n\n/* NavigationPanPanHandlers */\nconst panHandlers = PropTypes.shape({\n  onMoveShouldSetResponder: PropTypes.func.isRequired,\n  onMoveShouldSetResponderCapture: PropTypes.func.isRequired,\n  onResponderEnd: PropTypes.func.isRequired,\n  onResponderGrant: PropTypes.func.isRequired,\n  onResponderMove: PropTypes.func.isRequired,\n  onResponderReject: PropTypes.func.isRequired,\n  onResponderRelease: PropTypes.func.isRequired,\n  onResponderStart: PropTypes.func.isRequired,\n  onResponderTerminate: PropTypes.func.isRequired,\n  onResponderTerminationRequest: PropTypes.func.isRequired,\n  onStartShouldSetResponder: PropTypes.func.isRequired,\n  onStartShouldSetResponderCapture: PropTypes.func.isRequired,\n});\n\n/**\n * Helper function that extracts the props needed for scene renderer.\n */\nfunction extractSceneRendererProps(\n  props: NavigationSceneRendererProps,\n): NavigationSceneRendererProps {\n  return {\n    layout: props.layout,\n    navigationState: props.navigationState,\n    onNavigate: props.onNavigate,\n    position: props.position,\n    scene: props.scene,\n    scenes: props.scenes,\n  };\n}\n\nmodule.exports = {\n  // helpers\n  extractSceneRendererProps,\n\n  // Bundled propTypes.\n  SceneRendererProps,\n\n  // propTypes\n  action,\n  navigationParentState,\n  navigationState,\n  panHandlers,\n  SceneRenderer,\n};\n"]}]