["9f1ff9a80d22cfcb810b58a5fff6a179ab8a5b77","05fad53cdae13805b5ee3ca2cc3c813879ae1309",["react","react-native","react-redux","redux","react-native-router-flux","../ProfileActions","../../project/ProjectActions","../../components/react-native-sticky-view","../components/ProfileHeader","../components/MyProjectsComponent"],[87,184,228,266,314,374,503,574,741,884],{"version":3,"sources":["/var/www/geruapp/src/profile/containers/ProfileView.js"],"names":["profileActions","mapStateToProps","state","profile","mapDispatchToProps","dispatch","actions","newProject","ProfileView","props","onFetchMyProjectsHistory","bind","onFetchMyProjectsWorking","onFetchMyProjectsBidded","onStickyVisibility","onBookmarkDetailPressed","onStickyState","BookmarkedProjectsView","alert","MyPortfolioView","setState","page","callback","options","get","allLoaded","flex","backgroundColor","bidNavigation","gpNavigation","portfolioNavigation"],"mappings":"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","sourcesContent":["import React, {PropTypes,Component} from 'react'\nimport { \n  View,\n} from 'react-native'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Actions } from 'react-native-router-flux'\nimport * as profileActions from '../ProfileActions'\nimport { newProject } from '../../project/ProjectActions'\n\nimport StickyScrollView from '../../components/react-native-sticky-view'\nimport ProfileHeader from '../components/ProfileHeader'\nimport MyProjectsComponent from '../components/MyProjectsComponent'\n\nfunction mapStateToProps (state) {\n  return {\n      profile: state.profile\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n      actions: bindActionCreators(profileActions, dispatch),\n      newProject: bindActionCreators(newProject, dispatch)\n  }\n}\n\nclass ProfileView extends Component {\n\n  constructor(props) {\n    super(props)\n    this.onFetchMyProjectsHistory = this.onFetchMyProjectsHistory.bind(this)\n    this.onFetchMyProjectsWorking = this.onFetchMyProjectsWorking.bind(this)\n    this.onFetchMyProjectsBidded = this.onFetchMyProjectsBidded.bind(this)\n    this.onStickyVisibility = this.onStickyVisibility.bind(this)\n    this.onBookmarkDetailPressed = this.onBookmarkDetailPressed.bind(this)\n\n    this.state = {\n        onStickyState: false,\n    }\n  }\n\n  onBookmarkDetailPressed() {\n    Actions.BookmarkedProjectsView()\n  }\n\n  bidNavigation() {\n    alert('bid')\n  }\n\n  gpNavigation() {\n    alert('gp')\n  }\n\n  portfolioNavigation() {\n      Actions.MyPortfolioView()\n  }\n\n  onStickyVisibility(state) {\n      let {\n        onStickyState\n      } = this.state\n\n      if(onStickyState != state) {\n        this.setState({\n           onStickyState: state,\n        })  \n      }\n  }\n\n  onFetchMyProjectsWorking(page, callback, options) {\n      let {\n        profile\n      } = this.props\n\n      callback(profile.get('workingOnProjects'), {\n          allLoaded: true, // the end of the list is reached\n      })\n  }\n\n  onFetchMyProjectsHistory(page, callback, options) {\n      let {\n        profile\n      } = this.props\n\n      callback(profile.get('historyProjects'), {\n          allLoaded: true, // the end of the list is reached\n      })\n  }\n\n  onFetchMyProjectsBidded(page, callback, options) {\n      let {\n        profile\n      } = this.props\n\n      callback(profile.get('biddedProjects'), {\n          allLoaded: true, // the end of the list is reached\n      })\n  }\n\n  render() {\n    let {\n      profile\n    } = this.props\n\n    let {\n      onStickyState\n    } = this.state\n    \n    return (\n      <StickyScrollView style={{ flex: 1, backgroundColor: '#fff'}}//backgroundColor: '#F4F9FE'}}\n                        stickyHeight={250}\n                        onStickyVisibility={this.onStickyVisibility}\n                        showsVerticalScrollIndicator={false}\n      >\n\t      <ProfileHeader user={profile.get('user')}\n                       lastBookmarks={profile.get('lastBookmarks')}\n                       onBidNavigation={ () => this.bidNavigation()}\n                       onGPNavigation={ () => this.gpNavigation()}\n                       onPortfolioNavigation={ () => this.portfolioNavigation()}\n                       onBookmarkDetailPressed={this.onBookmarkDetailPressed}\n        />\n\t      <View style={{ flex: 1, }}>\n          \n        </View>\n      </StickyScrollView>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileView)"]}]