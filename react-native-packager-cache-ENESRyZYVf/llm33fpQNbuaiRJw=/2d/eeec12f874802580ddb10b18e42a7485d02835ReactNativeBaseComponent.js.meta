["cb7a6dfecdcf8de47ccd02a08ec0d64c270c21b4","1fb55f1b9d4666154b8dcf1171e42dcd76d51a33",["NativeMethodsMixin","ReactNativeAttributePayload","ReactNativeComponentTree","ReactNativeTagHandles","ReactMultiChild","UIManager","deepFreezeAndThrowOnMutationInDev"],[49,114,185,250,306,350,413],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/native/ReactNativeBaseComponent.js"],"names":["NativeMethodsMixin","require","ReactNativeAttributePayload","ReactNativeComponentTree","ReactNativeTagHandles","ReactMultiChild","UIManager","deepFreezeAndThrowOnMutationInDev","ReactNativeBaseComponent","viewConfig","Mixin","getPublicInstance","unmountComponent","safely","skipLifecycle","uncacheNode","unmountChildren","_rootNodeID","initializeChildren","children","containerTag","transaction","context","mountImages","mountChildren","length","createdTags","i","l","mountImage","childTag","setChildren","receiveComponent","nextElement","prevElement","_currentElement","__DEV__","key","validAttributes","props","hasOwnProperty","updatePayload","diff","updateView","uiViewClassName","updateChildren","getHostNode","mountComponent","hostParent","hostContainerInfo","tag","allocateTag","_hostParent","_hostContainerInfo","create","nativeTopRootTag","_tag","createView","precacheNode","prototype","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNativeBaseComponent\n * @flow\n */\n'use strict';\n\nvar NativeMethodsMixin = require('NativeMethodsMixin');\nvar ReactNativeAttributePayload = require('ReactNativeAttributePayload');\nvar ReactNativeComponentTree = require('ReactNativeComponentTree');\nvar ReactNativeTagHandles = require('ReactNativeTagHandles');\nvar ReactMultiChild = require('ReactMultiChild');\nvar UIManager = require('UIManager');\n\nvar deepFreezeAndThrowOnMutationInDev = require('deepFreezeAndThrowOnMutationInDev');\n\ntype ReactNativeBaseComponentViewConfig = {\n  validAttributes: Object,\n  uiViewClassName: string,\n};\n\n// require('UIManagerStatTracker').install(); // uncomment to enable\n\n/**\n * @constructor ReactNativeBaseComponent\n * @extends ReactComponent\n * @extends ReactMultiChild\n * @param {!object} UIKit View Configuration.\n */\nvar ReactNativeBaseComponent = function(\n  viewConfig: ReactNativeBaseComponentViewConfig,\n) {\n  this.viewConfig = viewConfig;\n};\n\n/**\n * Mixin for containers that contain UIViews. NOTE: markup is rendered markup\n * which is a `viewID` ... see the return value for `mountComponent` !\n */\nReactNativeBaseComponent.Mixin = {\n  getPublicInstance: function() {\n    // TODO: This should probably use a composite wrapper\n    return this;\n  },\n\n  unmountComponent: function(safely, skipLifecycle) {\n    ReactNativeComponentTree.uncacheNode(this);\n    this.unmountChildren(safely, skipLifecycle);\n    this._rootNodeID = 0;\n  },\n\n  /**\n   * Every native component is responsible for allocating its own `tag`, and\n   * issuing the native `createView` command. But it is not responsible for\n   * recording the fact that its own `rootNodeID` is associated with a\n   * `nodeHandle`. Only the code that actually adds its `nodeHandle` (`tag`) as\n   * a child of a container can confidently record that in\n   * `ReactNativeTagHandles`.\n   */\n  initializeChildren: function(children, containerTag, transaction, context) {\n    var mountImages = this.mountChildren(children, transaction, context);\n    // In a well balanced tree, half of the nodes are in the bottom row and have\n    // no children - let's avoid calling out to the native bridge for a large\n    // portion of the children.\n    if (mountImages.length) {\n      // TODO: Pool these per platform view class. Reusing the `mountImages`\n      // array would likely be a jit deopt.\n      var createdTags = [];\n      for (var i = 0, l = mountImages.length; i < l; i++) {\n        var mountImage = mountImages[i];\n        var childTag = mountImage;\n        createdTags[i] = childTag;\n      }\n      UIManager.setChildren(containerTag, createdTags);\n    }\n  },\n\n  /**\n   * Updates the component's currently mounted representation.\n   *\n   * @param {object} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function(nextElement, transaction, context) {\n    var prevElement = this._currentElement;\n    this._currentElement = nextElement;\n\n    if (__DEV__) {\n      for (var key in this.viewConfig.validAttributes) {\n        if (nextElement.props.hasOwnProperty(key)) {\n          deepFreezeAndThrowOnMutationInDev(nextElement.props[key]);\n        }\n      }\n    }\n\n    var updatePayload = ReactNativeAttributePayload.diff(\n      prevElement.props,\n      nextElement.props,\n      this.viewConfig.validAttributes,\n    );\n\n    if (updatePayload) {\n      UIManager.updateView(\n        this._rootNodeID,\n        this.viewConfig.uiViewClassName,\n        updatePayload,\n      );\n    }\n\n    this.updateChildren(nextElement.props.children, transaction, context);\n  },\n\n  /**\n   * Currently this still uses IDs for reconciliation so this can return null.\n   *\n   * @return {null} Null.\n   */\n  getHostNode: function() {\n    return this._rootNodeID;\n  },\n\n  /**\n   * @param {ReactNativeReconcileTransaction} transaction\n   * @param {?ReactNativeBaseComponent} the parent component instance\n   * @param {?object} info about the host container\n   * @param {object} context\n   * @return {string} Unique iOS view tag.\n   */\n  mountComponent: function(\n    transaction,\n    hostParent,\n    hostContainerInfo,\n    context,\n  ) {\n    var tag = ReactNativeTagHandles.allocateTag();\n\n    this._rootNodeID = tag;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    if (__DEV__) {\n      for (var key in this.viewConfig.validAttributes) {\n        if (this._currentElement.props.hasOwnProperty(key)) {\n          deepFreezeAndThrowOnMutationInDev(this._currentElement.props[key]);\n        }\n      }\n    }\n\n    var updatePayload = ReactNativeAttributePayload.create(\n      this._currentElement.props,\n      this.viewConfig.validAttributes,\n    );\n\n    var nativeTopRootTag = hostContainerInfo._tag;\n    UIManager.createView(\n      tag,\n      this.viewConfig.uiViewClassName,\n      nativeTopRootTag,\n      updatePayload,\n    );\n\n    ReactNativeComponentTree.precacheNode(this, tag);\n\n    this.initializeChildren(\n      this._currentElement.props.children,\n      tag,\n      transaction,\n      context,\n    );\n    return tag;\n  },\n};\n\n/**\n * Order of mixins is important. ReactNativeBaseComponent overrides methods in\n * ReactMultiChild.\n */\nObject.assign(\n  ReactNativeBaseComponent.prototype,\n  ReactMultiChild,\n  ReactNativeBaseComponent.Mixin,\n  NativeMethodsMixin,\n);\n\nmodule.exports = ReactNativeBaseComponent;\n"]}]