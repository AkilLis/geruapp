["15eb7c98f027c9d43a438f8b47fa84747d43df9d","36038f9bcb5f53d608de7c2492af7ffea38e590b",["react","react-native","../styles/variables"],[87,184,227],{"version":3,"sources":["/var/www/geruapp/src/components/ProjectTabBar.js"],"names":["ProjectTabBar","createClass","tabIcons","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","componentDidMount","_listener","props","scrollValue","addListener","setAnimationValue","value","forEach","icon","i","progress","Math","min","abs","setNativeProps","style","color","iconColor","red","green","blue","render","containerWidth","numberOfTabs","length","tabUnderlineStyle","position","width","height","bottom","marginLeft","marginRight","paddingHorizontal","zIndex","justifyContent","alignItems","left","transform","translateX","interpolate","inputRange","outputRange","fixed","styles","fixedTabs","map","tab","tabContainer","tabText","text","underlineStyle","borderRadius","backgroundColor","create","padding","fontFamily","FONT_REGULAR","FONT_BOLD","flex","flexDirection","top","right"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated\n} from 'react-native'\nimport variables from '../styles/variables'\n\nconst ProjectTabBar = React.createClass({\n  tabIcons: [],\n\n  propTypes: {\n    goToPage: React.PropTypes.func,\n    activeTab: React.PropTypes.number,\n    tabs: React.PropTypes.array,\n  },\n\n  componentDidMount() {\n    this._listener = this.props.scrollValue.addListener(this.setAnimationValue)\n  },\n\n  setAnimationValue({ value, }) {\n    this.tabIcons.forEach((icon, i) => {\n      const progress = Math.min(1, Math.abs(value - i))\n      \n      icon.setNativeProps({\n        style: {\n          color: this.iconColor(progress),\n        },\n      })\n    })\n  },\n\n  //color between rgb(59,89,152) and rgb(204,204,204)\n  iconColor(progress) {\n    const red = 59 + (204 - 59) * progress;\n    const green = 89 + (204 - 89) * progress;\n    const blue = 152 + (204 - 152) * progress;\n    return 'rgb(${red}, ${green}, ${blue})'\n  },\n\n  render() {\n    const containerWidth = this.props.containerWidth\n    const numberOfTabs = this.props.tabs.length\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      width: (containerWidth / numberOfTabs) - 2,\n      //backgroundColor: '#FE5F55',\n      height: 2,\n      bottom: 5,\n      marginLeft: 2,\n      marginRight: 2,\n      paddingHorizontal: 20,\n      zIndex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n\n    const left = {\n      transform: [\n        {\n          translateX: this.props.scrollValue.interpolate({\n            inputRange: [0, 1,], \n            outputRange: [0, containerWidth / numberOfTabs,],\n          })\n        }\n      ]\n    }\n\n    let {\n      fixed\n    } = this.props\n\n    return <View style={[styles.tabs, false ? styles.fixedTabs: '', this.props.style]}>\n      {\n        this.props.tabs.map((tab, i) => {\n          return (\n            <TouchableOpacity key={tab} onPress={() => this.props.goToPage(i)} style={styles.tab}>\n              <View style={styles.tabContainer}>\n                <Text style={[styles.tabText, this.props.activeTab === i ? styles.activeTab : '']}\n                      ref={(text) => { this.tabIcons[i] = text }}>{tab}</Text>\n              </View>\n            </TouchableOpacity>\n          )\n        })\n      }\n      <Animated.View style={[tabUnderlineStyle, left, this.props.underlineStyle, ]}>\n          <View style={{ height: 2, width: 50, borderRadius: 10, backgroundColor: '#FE5F55',}}/>\n      </Animated.View>\n    </View>\n  },\n});\n\nconst styles = StyleSheet.create({\n  tabContainer: {\n    padding: 3,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  tabText: {\n    color: '#b5b5b5',\n    fontFamily: variables.FONT_REGULAR,\n  },\n\n  activeTab: {\n    color: '#555555',\n    fontFamily: variables.FONT_BOLD,\n  },\n\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2,\n  },\n\n  tabs: {\n    height: 40,\n    flexDirection: 'row',\n    //backgroundColor: '#fff',\n    //backgroundColor: 'transparent',\n    justifyContent: 'space-around',\n    borderRadius: 5,\n  },\n\n  fixedTabs: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    height: 40,\n    zIndex: 2,\n  }\n});\n\nexport default ProjectTabBar;"]}]