["d5bdea11b9f779493ec1b6fe1a9cb02fb6522a7d","70d998b34d417e0bb86e0152af84935b4f9ef6e0",["react","react-native"],[20,54],{"version":3,"sources":["/var/www/geruapp/node_modules/tcomb-form-native/lib/templates/bootstrap/checkbox.js"],"names":["React","require","View","Text","Switch","checkbox","locals","hidden","stylesheet","formGroupStyle","formGroup","normal","controlLabelStyle","controlLabel","checkboxStyle","helpBlockStyle","helpBlock","errorBlockStyle","errorBlock","hasError","error","label","help","disabled","onTintColor","thumbTintColor","tintColor","value","onChange","module","exports"],"mappings":"AAAA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;;eAC6BA,QAAQ,cAAR,C;IAAvBC,I,YAAAA,I;IAAMC,I,YAAAA,I;IAAMC,M,YAAAA,M;;AAElB,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,MAAIA,OAAOC,MAAX,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,MAAIC,aAAaF,OAAOE,UAAxB;AACA,MAAIC,iBAAiBD,WAAWE,SAAX,CAAqBC,MAA1C;AACA,MAAIC,oBAAoBJ,WAAWK,YAAX,CAAwBF,MAAhD;AACA,MAAIG,gBAAgBN,WAAWH,QAAX,CAAoBM,MAAxC;AACA,MAAII,iBAAiBP,WAAWQ,SAAX,CAAqBL,MAA1C;AACA,MAAIM,kBAAkBT,WAAWU,UAAjC;;AAEA,MAAIZ,OAAOa,QAAX,EAAqB;AACnBV,qBAAiBD,WAAWE,SAAX,CAAqBU,KAAtC;AACAR,wBAAoBJ,WAAWK,YAAX,CAAwBO,KAA5C;AACAN,oBAAgBN,WAAWH,QAAX,CAAoBe,KAApC;AACAL,qBAAiBP,WAAWQ,SAAX,CAAqBI,KAAtC;AACD;;AAED,MAAIC,QAAQf,OAAOe,KAAP,GAAe;AAAC,QAAD;AAAA,MAAM,OAAOT,iBAAb;AAAiCN,WAAOe;AAAxC,GAAf,GAAuE,IAAnF;AACA,MAAIC,OAAOhB,OAAOgB,IAAP,GAAc;AAAC,QAAD;AAAA,MAAM,OAAOP,cAAb;AAA8BT,WAAOgB;AAArC,GAAd,GAAkE,IAA7E;AACA,MAAIF,QAAQd,OAAOa,QAAP,IAAmBb,OAAOc,KAA1B,GAAkC;AAAC,QAAD;AAAA,MAAM,yBAAwB,QAA9B,EAAuC,OAAOH,eAA9C;AAAgEX,WAAOc;AAAvE,GAAlC,GAAyH,IAArI;;AAEA,SACE;AAAC,QAAD;AAAA,MAAM,OAAOX,cAAb;AACGY,SADH;AAEE,wBAAC,MAAD;AACE,0BAAoBf,OAAOe,KAD7B;AAEE,WAAI,OAFN;AAGE,gBAAUf,OAAOiB,QAHnB;AAIE,mBAAajB,OAAOkB,WAJtB;AAKE,sBAAgBlB,OAAOmB,cALzB;AAME,iBAAWnB,OAAOoB,SANpB;AAOE,aAAOZ,aAPT;AAQE,qBAAe,uBAACa,KAAD;AAAA,eAAWrB,OAAOsB,QAAP,CAAgBD,KAAhB,CAAX;AAAA,OARjB;AASE,aAAOrB,OAAOqB;AAThB,MAFF;AAaGL,QAbH;AAcGF;AAdH,GADF;AAkBD;;AAEDS,OAAOC,OAAP,GAAiBzB,QAAjB","sourcesContent":["var React = require('react');\nvar { View, Text, Switch } = require('react-native');\n\nfunction checkbox(locals) {\n  if (locals.hidden) {\n    return null;\n  }\n\n  var stylesheet = locals.stylesheet;\n  var formGroupStyle = stylesheet.formGroup.normal;\n  var controlLabelStyle = stylesheet.controlLabel.normal;\n  var checkboxStyle = stylesheet.checkbox.normal;\n  var helpBlockStyle = stylesheet.helpBlock.normal;\n  var errorBlockStyle = stylesheet.errorBlock;\n\n  if (locals.hasError) {\n    formGroupStyle = stylesheet.formGroup.error;\n    controlLabelStyle = stylesheet.controlLabel.error;\n    checkboxStyle = stylesheet.checkbox.error;\n    helpBlockStyle = stylesheet.helpBlock.error;\n  }\n\n  var label = locals.label ? <Text style={controlLabelStyle}>{locals.label}</Text> : null;\n  var help = locals.help ? <Text style={helpBlockStyle}>{locals.help}</Text> : null;\n  var error = locals.hasError && locals.error ? <Text accessibilityLiveRegion=\"polite\" style={errorBlockStyle}>{locals.error}</Text> : null;\n\n  return (\n    <View style={formGroupStyle}>\n      {label}\n      <Switch\n        accessibilityLabel={locals.label}\n        ref=\"input\"\n        disabled={locals.disabled}\n        onTintColor={locals.onTintColor}\n        thumbTintColor={locals.thumbTintColor}\n        tintColor={locals.tintColor}\n        style={checkboxStyle}\n        onValueChange={(value) => locals.onChange(value)}\n        value={locals.value}\n      />\n      {help}\n      {error}\n    </View>\n  );\n}\n\nmodule.exports = checkbox;\n"]}]