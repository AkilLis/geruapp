["d331f60ffe5b59f61b1a69af407d8eae1cea1965","b258222cb11d9c09d13f2345d82d9a9943f16e91",["./Util","./ActionConst"],[368,407],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-router-flux/src/State.js"],"names":["getInitialState","scenes","rootRoute","Object","keys","find","hasOwnProperty","call","route","parent","ActionConst","getStateFromScenes","props","getters","result","scene","push","rootProps","reverse","forEach","fn","getSceneKey","key","position","sceneKey","filter","v","join","style","type","parentProps","children","res","index","r","i","initial","tabs","map","parentIndex","JUMP","child"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Pavel Aksonov\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { assert } from './Util';\nimport * as ActionConst from './ActionConst';\n\nfunction getStateFromScenes(route, scenes, props) {\n  const getters = [];\n  let result = {};\n  let scene = route;\n  while (scene) {\n    if (scene.getInitialState) {\n      getters.push(scene.getInitialState);\n    }\n    scene = scenes[scene.parent];\n  }\n\n  if (scenes.rootProps && scenes.rootProps.getInitialState) {\n    getters.push(scenes.rootProps.getInitialState);\n  }\n\n  getters.reverse().forEach((fn) => {\n    result = { ...result, ...fn(props) };\n  });\n\n  return result;\n}\n\nfunction getSceneKey(parent, key, position, sceneKey) {\n  return [parent, key, position, sceneKey]\n    .filter(v => typeof (v) !== 'undefined' && v !== null)\n    .join('_');\n}\n\nexport function getInitialState(\n  route: {string: any},\n  scenes: {string: any},\n  position = 0,\n  props = {},\n) {\n  // eslint-disable-next-line no-unused-vars\n  const { parent, key, style, type, ...parentProps } = props;\n  if (!route.children) {\n    return {\n      ...scenes.rootProps,\n      ...route,\n      key: getSceneKey(parent, key, position, route.sceneKey),\n      ...parentProps,\n      ...getStateFromScenes(route, scenes, props),\n    };\n  }\n  const res = { ...route, ...scenes.rootProps, ...parentProps };\n  let index = 0;\n  route.children.forEach((r, i) => {\n    assert(scenes[r], `Empty scene for key=${route.key}`);\n    if (scenes[r].initial) {\n      index = i;\n    }\n  });\n\n  if (route.tabs) {\n    res.children = route.children.map(\n      (r, i) => getInitialState(scenes[r], scenes, i, { ...props, parentIndex: position }));\n    res.index = index;\n  } else {\n    res.children = [getInitialState(scenes[route.children[index]], scenes, 0, props)];\n    res.index = 0;\n  }\n\n  // Copy props to the children of tab routes\n  if (route.type === ActionConst.JUMP) {\n    res.children = res.children.map(child => ({ ...props, ...child }));\n  }\n\n  res.key = `${position}_${res.key}`;\n  return res;\n}\n\nexport default function (scenes:{string: any}) {\n  // find \"root\" component and get state from it\n  const rootRoute = Object.keys(scenes).find(route =>\n    ({}).hasOwnProperty.call(scenes, route) && !scenes[route].parent);\n\n  return getInitialState(scenes[rootRoute], scenes);\n}\n"]}]