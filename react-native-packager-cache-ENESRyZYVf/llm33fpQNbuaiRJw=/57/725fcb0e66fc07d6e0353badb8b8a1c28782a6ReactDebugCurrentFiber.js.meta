["a879ca5e57e317f75951658519219a6dd4f7426b","6b7101a7b1e67be276fb472b5b843641e383b8fc",["getComponentName","ReactFiberComponentTreeHook"],[65,112],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/fiber/ReactDebugCurrentFiber.js"],"names":["__DEV__","getComponentName","require","getStackAddendumByWorkInProgressFiber","getCurrentFiberOwnerName","fiber","ReactDebugCurrentFiber","current","_debugOwner","getCurrentFiberStackAddendum","phase","module","exports"],"mappings":";;AAYA;;AAMA,IAAIA,OAAJ,EAAa;AACX,MAAIC,mBAAmBC,QAAQ,kBAAR,CAAvB;;AADW,iBAIPA,QAAQ,6BAAR,CAJO;AAAA,MAGTC,qCAHS,YAGTA,qCAHS;AAKZ;;AAED,SAASC,wBAAT,GAAmD;AACjD,MAAIJ,OAAJ,EAAa;AACX,QAAMK,QAAQC,uBAAuBC,OAArC;AACA,QAAIF,UAAU,IAAd,EAAoB;AAClB,aAAO,IAAP;AACD;AACD,QAAIA,MAAMG,WAAN,IAAqB,IAAzB,EAA+B;AAC7B,aAAOP,iBAAiBI,MAAMG,WAAvB,CAAP;AACD;AACF;AACD,SAAO,IAAP;AACD;;AAED,SAASC,4BAAT,GAAuD;AACrD,MAAIT,OAAJ,EAAa;AACX,QAAMK,QAAQC,uBAAuBC,OAArC;AACA,QAAIF,UAAU,IAAd,EAAoB;AAClB,aAAO,IAAP;AACD;;AAGD,WAAOF,sCAAsCE,KAAtC,CAAP;AACD;AACD,SAAO,IAAP;AACD;;AAED,IAAIC,yBAAyB;AAC3BC,WAAU,IADiB;AAE3BG,SAAQ,IAFmB;;AAI3BN,oDAJ2B;AAK3BK;AAL2B,CAA7B;;AAQAE,OAAOC,OAAP,GAAiBN,sBAAjB","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDebugCurrentFiber\n * @flow\n */\n\n'use strict';\n\nimport type {Fiber} from 'ReactFiber';\n\ntype LifeCyclePhase = 'render' | 'getChildContext';\n\nif (__DEV__) {\n  var getComponentName = require('getComponentName');\n  var {\n    getStackAddendumByWorkInProgressFiber,\n  } = require('ReactFiberComponentTreeHook');\n}\n\nfunction getCurrentFiberOwnerName(): string | null {\n  if (__DEV__) {\n    const fiber = ReactDebugCurrentFiber.current;\n    if (fiber === null) {\n      return null;\n    }\n    if (fiber._debugOwner != null) {\n      return getComponentName(fiber._debugOwner);\n    }\n  }\n  return null;\n}\n\nfunction getCurrentFiberStackAddendum(): string | null {\n  if (__DEV__) {\n    const fiber = ReactDebugCurrentFiber.current;\n    if (fiber === null) {\n      return null;\n    }\n    // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n    return getStackAddendumByWorkInProgressFiber(fiber);\n  }\n  return null;\n}\n\nvar ReactDebugCurrentFiber = {\n  current: (null: Fiber | null),\n  phase: (null: LifeCyclePhase | null),\n\n  getCurrentFiberOwnerName,\n  getCurrentFiberStackAddendum,\n};\n\nmodule.exports = ReactDebugCurrentFiber;\n"]}]