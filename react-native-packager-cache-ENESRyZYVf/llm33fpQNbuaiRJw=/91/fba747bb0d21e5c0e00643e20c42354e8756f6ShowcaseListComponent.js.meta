["fc8f6bf3df8b37be73a6e8c983ebeca3b344a4a9","89a838348bbfe6db57164351ea83da871b404d38",["react","react-native","../../styles/variables","../../components/TaggableSearch","react-native-navbar","../../components/NavBarIcon","../../components/NavBarSearch","./RelatedTags","../../components/Masonry","react-native-vector-icons/Ionicons"],[86,183,226,351,498,632,762,897,1010,1127],{"version":3,"sources":["/var/www/geruapp/src/showcase/components/ShowcaseListComponent.js"],"names":["ShowcaseListComponent","props","state","delta","lastScrollTop","navbarHeight","hideNavbar","nextProps","refs","masonry","forceUpdate","pageIndex","onGetPortfolios","item","itemWidth","offset","styles","portfolioContainer","height","cover","ratio","uri","url","porfilioItem","padding","fontFamily","bold","fontSize","color","BRAND_BLACK","title","paddingBottom","paddingHorizontal","caption","textAlign","BRAND_GRAY","row","centerCenter","width","flex","borderRadius","user","avatar_url","paddingLeft","h2","regular","first_name","last_name","alert","event","contentOffset","nativeEvent","scrollOffset","y","Math","abs","setState","suggestedTags","tags","container","onToggleSearchScene","onSuggestedTagPressed","portfolios","fetching","get","_loadMore","bind","_onRowRender","showcaseNavigation","masonryScrolled","create","h4","h5","flexDirection","marginBottom","cardHeader","cardInfo","justifyContent","marginTop","FONT_REGULAR","price","FONT_BOLD","BRAND_SUBCOLOR1","resizeMode","actionButtonIcon","propTypes","object","func"],"mappings":"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","sourcesContent":["import React, { PropTypes, Component } from 'react'\nimport { StyleSheet, View, Text, Image, TouchableOpacity } from 'react-native'\nimport variables, { layout, font } from '../../styles/variables'\n\n//import { SearchBar } from '../../components/react-native-taggable-search'\nimport TaggableSearch from '../../components/TaggableSearch'\nimport NavigationBar from 'react-native-navbar'\nimport NavBarIcon from '../../components/NavBarIcon'\nimport NavBarSearch from '../../components/NavBarSearch'\nimport RelatedTags from './RelatedTags'\n\nimport Masonry from '../../components/Masonry'\nimport Icon from 'react-native-vector-icons/Ionicons'\n\nexport default class ShowcaseListComponent extends Component {\n\n\tconstructor(props) {\n\t  super(props)\n\t\n\t  this.state = {\n\t  \tdelta: 1,\n\t  \tlastScrollTop: 0,\n\t  \tnavbarHeight: 70,\n\t  \thideNavbar: false,\n\t  }\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t  \tthis.refs.masonry.forceUpdate()\n\t}\n\n\t_loadMore(pageIndex = 1) {\n\t\tthis.props.onGetPortfolios(pageIndex)\n\t}\n\n\t_onRowRender(item, itemWidth, offset) {\n\t\treturn (\n\t\t\t<View style={styles.portfolioContainer}>\n\t\t\t\t<View style={{ height: item.cover.ratio * itemWidth + offset }}>\n\t\t\t\t\t<Image source={{ uri: item.cover.url }}\n\t\t\t\t\t       style={styles.porfilioItem} />\t\n\t\t\t\t</View>\n\t\t\t\t<View style={{ padding: 3 }}>\n\t\t\t\t\t<Text style={{ fontFamily: font.bold, fontSize: 15, color: variables.BRAND_BLACK }}>{item.title}</Text>\n\t\t\t\t</View>\n\t\t\t\t<View style={{ paddingBottom: 5, paddingHorizontal: 3, }}>\n\t\t\t\t\t<Text style={[styles.caption, { textAlign: 'justify', color: variables.BRAND_GRAY, }]}>{item.caption}</Text>\n\t\t\t\t</View>\n\t\t\t\t<View style={[layout.row, layout.centerCenter, { height: 30, }]}>\n\t\t\t\t\t<View style={[{ width: 30, }]}>\n\t\t\t\t\t\t<Image style={{ width: null, height: null, flex: 1, borderRadius: 30, }}\n\t\t\t\t\t\t\t   source={{ uri: item.user.avatar_url }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\t\n\t\t\t\t\t<View style={[{ flex: 1, paddingLeft: 10, }]}>\n\t\t\t\t\t\t<Text style={[layout.h2, { fontFamily: font.regular, fontSize: 13, }]}>{item.user.first_name} {item.user.last_name}</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t)\n\t}\n\n\tshowcaseNavigation(item) {\n\t\talert(item)\n\t}\n\n\tmasonryScrolled(event) {\n\t\tlet { delta, lastScrollTop, navbarHeight, hideNavbar } = this.state\n\t\tlet { contentOffset } = event.nativeEvent\n\t    let scrollOffset = contentOffset.y\n\n\t    if (Math.abs(lastScrollTop - scrollOffset) <= delta)\n  \t\treturn\n\n  \t\tif (scrollOffset > lastScrollTop && scrollOffset > navbarHeight){\n        \t// Scroll Down\n\t        hideNavbar = true\n\t    } else {\n\t        // Scroll Up\n\t        hideNavbar = false\n\t    }\n\t    \n\t    lastScrollTop = scrollOffset\n\n\t    this.setState({\n\t    \tlastScrollTop,\n\t    \thideNavbar\n\t    })\n\n\t}\n\n\trender() {\n\t\tlet {\n\t\t\tsuggestedTags,\n\t\t\ttags\n\t\t} = this.props\n\t\t\n\t\tlet { hideNavbar } = this.state\n\n\t\treturn (\n\t\t\t<View style={styles.container}>\n\t\t\t\t<View style={{ padding: 10, }}>\n\t\t\t\t\t<TaggableSearch tags={tags}\n\t\t\t\t\t\t\t\t\tonSearchFired={this.props.onToggleSearchScene}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\n\t\t\t\t<RelatedTags display={hideNavbar}\n\t\t\t\t\t\t     suggestedTags={suggestedTags}\n\t\t\t\t\t\t     onSuggestedTagPressed={this.props.onSuggestedTagPressed}\n\t\t\t\t/>\n\n\t\t        <Masonry columnCount={2}\n\t\t        \t\t offset={100}\n\t\t        \t\t ref={\"masonry\"}\n\t\t        \t\t topOffset={100}\n\t\t        \t\t loading={this.props.portfolios.fetching}\n\t\t        \t\t items={this.props.portfolios.get('data')}\n\t\t        \t\t onLoadMore={this._loadMore.bind(this)}\n\t\t        \t\t rowRender={this._onRowRender.bind(this)}\n\t\t        \t\t onClick={this.showcaseNavigation.bind(this)}\n\t\t        \t\t onScroll={this.masonryScrolled.bind(this)}/>\n\t\t\t</View>\n\t\t)\n\t}\n}\n\nvar styles = StyleSheet.create({\n\th4: {\n\t\tfontSize: 18,\n\t\tfontFamily: 'Lato-Bold',\n\t},\n\n\th5: {\n\t\tfontSize: 15,\n\t\tcolor: '#b5b5b5'\n\t},\n\n\tcontainer: {\n\t\tflex: 1,\n\t},\n   \t\n\tportfolioContainer: {\n\t\tflex: 1,\n\t\tpadding: 5,\n\t\tflexDirection: 'column',\n\t\tmarginBottom: 25,\n\t},\n\n\tcardHeader: {\n\t\tflex: 1,\n\t},\n\n\tcardInfo: {\n\t\t//height: 50,\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'space-between',\n\t\tmarginTop: 3,\n\t\tpadding: 3,\n\t},\n\n\tcaption: {\n\t\tflex: 2,\n\t\tfontFamily: variables.FONT_REGULAR,\n\t\tfontSize: 13,\n\t\tcolor: variables.BRAND_BLACK\n\t},\n\n\tprice: {\n\t\tfontFamily: variables.FONT_BOLD,\n\t\tfontSize: 14,\n\t\tcolor: variables.BRAND_SUBCOLOR1,\n\t},\n\n\tporfilioItem: {\n\t\tflex: 1, \n\t\tresizeMode: 'cover',\n\t\tborderRadius: 5,\n\t},\n\n\tactionButtonIcon: {\n\t\tfontSize: 20,\n\t    height: 22,\n\t    color: 'white',\n\t}\n})\n\nShowcaseListComponent.propTypes = {\n\tportfolios: PropTypes.object,\n\tonToggleSearchScene: PropTypes.func,\n\tonGetPortfolios: PropTypes.func,\n}"]}]