["0bd0e10e60c3627b9f0c25ef922ecba14cf1ec5a","603ce82d8962b79b713a2b341ae9874cbb4c30de",["SyntheticEvent"],[46],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/shared/event/eventPlugins/ResponderSyntheticEvent.js"],"names":["SyntheticEvent","require","ResponderEventInterface","touchHistory","nativeEvent","ResponderSyntheticEvent","dispatchConfig","dispatchMarker","nativeEventTarget","call","augmentClass","module","exports"],"mappings":";;AAWA;;AAEA,IAAIA,iBAAiBC,QAAQ,gBAAR,CAArB;;AAOA,IAAIC,0BAA0B;AAC5BC,gBAAc,sBAASC,WAAT,EAAsB;AAClC,WAAO,IAAP;AACD;AAH2B,CAA9B;;AAYA,SAASC,uBAAT,CACEC,cADF,EAEEC,cAFF,EAGEH,WAHF,EAIEI,iBAJF,EAKE;AACA,SAAOR,eAAeS,IAAf,CACL,IADK,EAELH,cAFK,EAGLC,cAHK,EAILH,WAJK,EAKLI,iBALK,CAAP;AAOD;;AAEDR,eAAeU,YAAf,CAA4BL,uBAA5B,EAAqDH,uBAArD;;AAEAS,OAAOC,OAAP,GAAiBP,uBAAjB","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ResponderSyntheticEvent\n */\n\n'use strict';\n\nvar SyntheticEvent = require('SyntheticEvent');\n\n/**\n * `touchHistory` isn't actually on the native event, but putting it in the\n * interface will ensure that it is cleaned up when pooled/destroyed. The\n * `ResponderEventPlugin` will populate it appropriately.\n */\nvar ResponderEventInterface = {\n  touchHistory: function(nativeEvent) {\n    return null; // Actually doesn't even look at the native event.\n  },\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native event.\n * @extends {SyntheticEvent}\n */\nfunction ResponderSyntheticEvent(\n  dispatchConfig,\n  dispatchMarker,\n  nativeEvent,\n  nativeEventTarget,\n) {\n  return SyntheticEvent.call(\n    this,\n    dispatchConfig,\n    dispatchMarker,\n    nativeEvent,\n    nativeEventTarget,\n  );\n}\n\nSyntheticEvent.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);\n\nmodule.exports = ResponderSyntheticEvent;\n"]}]