["0586c2fcdf602b40fd716394de03b171f87f4e9a","59bd1b18111ecda4f06030126bf60d199010912b",["react","react-redux","redux","react-native-router-flux","../ProjectActions","../components/ProjectTagsChooserComponent"],[89,185,223,271,331,473],{"version":3,"sources":["/var/www/geruapp/src/project/containers/ProjectTagsChooser.js"],"names":["projectActions","mapStateToProps","state","project","newProjectState","mapDispatchToProps","dispatch","actions","ProjectTagsChooser","NewProject","pop","arrayList","props","getIn","length","map","item","String","getTags","onNavigateNext","bind","get","onBackAction"],"mappings":";;;;AAAA;;;;AAEA;;AACA;;AACA;;AACA;;IAAYA,c;;AAEZ;;;;AAEA,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,WAAO;AACHC,iBAASD,MAAME;AADZ,KAAP;AAGD;;AAED,SAASC,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,WAAO;AACHC,iBAAS,+BAAmBP,cAAnB,EAAmCM,QAAnC;AADN,KAAP;AAGD;;IAEKE,kB;;;;;;;;;;yCACa;AACb,2CAAQC,UAAR;AACH;;;uCAEc;AACX,2CAAQC,GAAR;AACH;;;kCAES;AACN,gBAAIC,YAAY,EAAhB;AACA,gBAAG,KAAKC,KAAL,CAAWT,OAAX,CAAmBU,KAAnB,CAAyB,CAAC,MAAD,EAAS,UAAT,CAAzB,EAA+CC,MAA/C,GAAwD,CAA3D,EAA8D;AAC5DH,4BAAY,KAAKC,KAAL,CAAWT,OAAX,CAAmBU,KAAnB,CAAyB,CAAC,MAAD,EAAS,UAAT,CAAzB,EAA+CE,GAA/C,CAAmD,UAACC,IAAD,EAAU;AACvE,2BAAOC,OAAOD,KAAK,IAAL,CAAP,CAAP;AACD,iBAFW,CAAZ;AAGD;;AAED,iBAAKJ,KAAL,CAAWL,OAAX,CAAmBW,OAAnB,CAA2B,EAA3B,EAA+BP,SAA/B;AACH;;;6CAEoB;AACjB,iBAAKO,OAAL;AACH;;;iCAEO;AACR,mBACC,uEAA6B,gBAAgB,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAA7C;AACgC,sBAAM,KAAKR,KAAL,CAAWT,OAAX,CAAmBkB,GAAnB,CAAuB,MAAvB,CADtC;AAEgC,8BAAc,KAAKC,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAF9C;AAGgC,8BAAc,KAAKF,OAAL,CAAaE,IAAb,CAAkB,IAAlB,CAH9C,GADD;AAMA;;;;;kBAGa,yBAAQnB,eAAR,EAAyBI,kBAAzB,EAA6CG,kBAA7C,C","sourcesContent":["import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Actions } from 'react-native-router-flux' \nimport * as projectActions from '../ProjectActions'\n\nimport ProjectTagsChooserComponent from '../components/ProjectTagsChooserComponent'\n\nfunction mapStateToProps (state) {\n  return {\n      project: state.newProjectState\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n      actions: bindActionCreators(projectActions, dispatch)\n  }\n}\n\nclass ProjectTagsChooser extends Component {\n  onNavigateNext() {\n      Actions.NewProject()\n  }\n\n  onBackAction() {\n      Actions.pop()\n  }\n\n  getTags() {\n      let arrayList = ''\n      if(this.props.project.getIn(['tags', 'selected']).length > 0) {\n        arrayList = this.props.project.getIn(['tags', 'selected']).map((item) => {\n          return String(item['id'])\n        })\n      } \n      \n      this.props.actions.getTags('', arrayList) \n  }\n\n  componentWillMount() {\n      this.getTags()\n  } \n\n\trender() {\n\t\treturn (\n\t\t\t<ProjectTagsChooserComponent onNavigateNext={this.onNavigateNext.bind(this)} \n                                   tags={this.props.project.get('tags')}\n                                   onBackAction={this.onBackAction.bind(this)}\n                                   onTagToggled={this.getTags.bind(this)}/>\t\n\t\t)\n\t}\n}\t\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectTagsChooser)"]}]