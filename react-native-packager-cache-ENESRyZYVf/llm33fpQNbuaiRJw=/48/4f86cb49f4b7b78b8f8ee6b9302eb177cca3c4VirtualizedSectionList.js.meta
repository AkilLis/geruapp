["a191d4f26161ecc54994c9e0ad75e92e4882f506","963baa751573ecfc4326946f335e564b36026531",["React","View","VirtualizedList","fbjs/lib/invariant","fbjs/lib/warning"],[36,65,104,149,194],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Lists/VirtualizedSectionList.js"],"names":["React","require","View","VirtualizedList","invariant","warning","VirtualizedSectionList","index","itemIndex","defaultKeyExtractor","props","keyExtractor","ii","sections","length","section","key","data","info","_subExtractor","ItemSeparatorComponent","SectionSeparatorComponent","isLastItemInList","state","childProps","getItemCount","isLastItemInSection","offset","ListHeaderComponent","stickyHeaderIndices","itemCount","reduce","v","push","renderItem","_renderItem","undefined","getItem","_keyExtractor","onViewableItemsChanged","_onViewableItemsChanged","stickySectionHeadersEnabled","context","item","String","_convertViewable","viewable","viewableItems","changed","map","filter","Boolean","renderSectionHeader","SeparatorComponent","_getSeparatorComponent","_computeState","nextProps","setState","PureComponent","defaultProps","itemIdx","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule VirtualizedSectionList\n * @flow\n */\n'use strict';\n\nconst React = require('React');\nconst View = require('View');\nconst VirtualizedList = require('VirtualizedList');\n\nconst invariant = require('fbjs/lib/invariant');\nconst warning = require('fbjs/lib/warning');\n\nimport type {ViewToken} from 'ViewabilityHelper';\nimport type {Props as VirtualizedListProps} from 'VirtualizedList';\n\ntype Item = any;\ntype SectionItem = any;\n\ntype SectionBase = {\n  // Must be provided directly on each section.\n  data: Array<SectionItem>,\n  key: string,\n\n  // Optional props will override list-wide props just for this section.\n  renderItem?: ?({item: SectionItem, index: number}) => ?React.Element<*>,\n  ItemSeparatorComponent?: ?ReactClass<*>,\n  keyExtractor?: (item: SectionItem) => string,\n\n  // TODO: support more optional/override props\n  // FooterComponent?: ?ReactClass<*>,\n  // HeaderComponent?: ?ReactClass<*>,\n  // onViewableItemsChanged?: ({viewableItems: Array<ViewToken>, changed: Array<ViewToken>}) => void,\n};\n\ntype RequiredProps<SectionT: SectionBase> = {\n  sections: Array<SectionT>,\n};\n\ntype OptionalProps<SectionT: SectionBase> = {\n  /**\n   * Rendered after the last item in the last section.\n   */\n  ListFooterComponent?: ?ReactClass<*>,\n  /**\n   * Rendered at the very beginning of the list.\n   */\n  ListHeaderComponent?: ?ReactClass<*>,\n  /**\n   * Default renderer for every item in every section.\n   */\n  renderItem: ({item: Item, index: number}) => ?React.Element<*>,\n  /**\n   * Rendered at the top of each section.\n   */\n  renderSectionHeader?: ?({section: SectionT}) => ?React.Element<*>,\n  /**\n   * Rendered at the bottom of every Section, except the very last one, in place of the normal\n   * ItemSeparatorComponent.\n   */\n  SectionSeparatorComponent?: ?ReactClass<*>,\n  /**\n   * Rendered at the bottom of every Item except the very last one in the last section.\n   */\n  ItemSeparatorComponent?: ?ReactClass<*>,\n  /**\n   * Warning: Virtualization can drastically improve memory consumption for long lists, but trashes\n   * the state of items when they scroll out of the render window, so make sure all relavent data is\n   * stored outside of the recursive `renderItem` instance tree.\n   */\n  enableVirtualization?: ?boolean,\n  keyExtractor: (item: Item, index: number) => string,\n  onEndReached?: ?({distanceFromEnd: number}) => void,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?Function,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?({viewableItems: Array<ViewToken>, changed: Array<ViewToken>}) => void,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n};\n\nexport type Props<SectionT> =\n  RequiredProps<SectionT> &\n  OptionalProps<SectionT> &\n  VirtualizedListProps;\n\ntype DefaultProps = (typeof VirtualizedList.defaultProps) & {data: Array<Item>};\ntype State = {childProps: VirtualizedListProps};\n\n/**\n * Right now this just flattens everything into one list and uses VirtualizedList under the\n * hood. The only operation that might not scale well is concatting the data arrays of all the\n * sections when new props are received, which should be plenty fast for up to ~10,000 items.\n */\nclass VirtualizedSectionList<SectionT: SectionBase>\n  extends React.PureComponent<DefaultProps, Props<SectionT>, State>\n{\n  props: Props<SectionT>;\n\n  state: State;\n\n  static defaultProps: DefaultProps = {\n    ...VirtualizedList.defaultProps,\n    data: [],\n  };\n\n  _keyExtractor = (item: Item, index: number) => {\n    const info = this._subExtractor(index);\n    return (info && info.key) || String(index);\n  };\n\n  _subExtractor(\n    index: number,\n  ): ?{\n    section: SectionT,\n    key: string, // Key of the section or combined key for section + item\n    index: ?number, // Relative index within the section\n  } {\n    let itemIndex = index;\n    const defaultKeyExtractor = this.props.keyExtractor;\n    for (let ii = 0; ii < this.props.sections.length; ii++) {\n      const section = this.props.sections[ii];\n      const key = section.key;\n      warning(\n        key != null,\n        'VirtualizedSectionList: A `section` you supplied is missing the `key` property.'\n      );\n      itemIndex -= 1; // The section itself is an item\n      if (itemIndex >= section.data.length) {\n        itemIndex -= section.data.length;\n      } else if (itemIndex === -1) {\n        return {section, key, index: null};\n      } else {\n        const keyExtractor = section.keyExtractor || defaultKeyExtractor;\n        return {\n          section,\n          key: key + ':' + keyExtractor(section.data[itemIndex], itemIndex),\n          index: itemIndex,\n        };\n      }\n    }\n  }\n\n  _convertViewable = (viewable: ViewToken): ?ViewToken => {\n    invariant(viewable.index != null, 'Received a broken ViewToken');\n    const info = this._subExtractor(viewable.index);\n    if (!info) {\n      return null;\n    }\n    const keyExtractor = info.section.keyExtractor || this.props.keyExtractor;\n    return {\n      ...viewable,\n      index: info.index,\n      key: keyExtractor(viewable.item, info.index),\n      section: info.section,\n    };\n  };\n\n  _onViewableItemsChanged = (\n    {viewableItems, changed}: {viewableItems: Array<ViewToken>, changed: Array<ViewToken>}\n  ) => {\n    if (this.props.onViewableItemsChanged) {\n      this.props.onViewableItemsChanged({\n        viewableItems: viewableItems.map(this._convertViewable, this).filter(Boolean),\n        changed: changed.map(this._convertViewable, this).filter(Boolean),\n      });\n    }\n  }\n\n  _renderItem = ({item, index}: {item: Item, index: number}) => {\n    const info = this._subExtractor(index);\n    if (!info) {\n      return null;\n    } else if (info.index == null) {\n      const {renderSectionHeader} = this.props;\n      return renderSectionHeader ? renderSectionHeader({section: info.section}) : null;\n    } else {\n      const renderItem = info.section.renderItem ||\n        this.props.renderItem;\n      const SeparatorComponent = this._getSeparatorComponent(index, info);\n      invariant(renderItem, 'no renderItem!');\n      return (\n        <View>\n          {renderItem({item, index: info.index || 0})}\n          {SeparatorComponent && <SeparatorComponent />}\n        </View>\n      );\n    }\n  };\n\n  _getSeparatorComponent(index: number, info?: ?Object): ?ReactClass<*> {\n    info = info || this._subExtractor(index);\n    if (!info) {\n      return null;\n    }\n    const ItemSeparatorComponent = info.section.ItemSeparatorComponent || this.props.ItemSeparatorComponent;\n    const {SectionSeparatorComponent} = this.props;\n    const isLastItemInList = index === this.state.childProps.getItemCount() - 1;\n    const isLastItemInSection = info.index === info.section.data.length - 1;\n    if (SectionSeparatorComponent && isLastItemInSection && !isLastItemInList) {\n      return SectionSeparatorComponent;\n    }\n    if (ItemSeparatorComponent && !isLastItemInSection && !isLastItemInList) {\n      return ItemSeparatorComponent;\n    }\n    return null;\n  }\n\n  _computeState(props: Props<SectionT>): State {\n    const offset = props.ListHeaderComponent ? 1 : 0;\n    const stickyHeaderIndices = [];\n    const itemCount = props.sections.reduce(\n      (v, section) => {\n        stickyHeaderIndices.push(v + offset);\n        return v + section.data.length + 1;\n      },\n      0\n    );\n    return {\n      childProps: {\n        ...props,\n        renderItem: this._renderItem,\n        ItemSeparatorComponent: undefined, // Rendered with renderItem\n        data: props.sections,\n        getItemCount: () => itemCount,\n        getItem,\n        keyExtractor: this._keyExtractor,\n        onViewableItemsChanged:\n          props.onViewableItemsChanged ? this._onViewableItemsChanged : undefined,\n        stickyHeaderIndices: props.stickySectionHeadersEnabled ? stickyHeaderIndices : undefined,\n      },\n    };\n  }\n\n  constructor(props: Props<SectionT>, context: Object) {\n    super(props, context);\n    this.state = this._computeState(props);\n  }\n\n  componentWillReceiveProps(nextProps: Props<SectionT>) {\n    this.setState(this._computeState(nextProps));\n  }\n\n  render() {\n    return <VirtualizedList {...this.state.childProps} />;\n  }\n}\n\nfunction getItem(sections: ?Array<Item>, index: number): ?Item {\n  if (!sections) {\n    return null;\n  }\n  let itemIdx = index - 1;\n  for (let ii = 0; ii < sections.length; ii++) {\n    if (itemIdx === -1) {\n      return sections[ii]; // The section itself is the item\n    } else if (itemIdx < sections[ii].data.length) {\n      return sections[ii].data[itemIdx];\n    } else {\n      itemIdx -= (sections[ii].data.length + 1);\n    }\n  }\n  return null;\n}\n\nmodule.exports = VirtualizedSectionList;\n"]}]