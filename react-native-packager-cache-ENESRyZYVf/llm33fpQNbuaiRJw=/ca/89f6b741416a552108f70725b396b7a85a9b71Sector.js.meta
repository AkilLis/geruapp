["86b97001e611d9976e043d8269fa0ea409b79bf2","916f062663ac04ac8ae03b7cd7b6c33712e7fd47",["react","prop-types","react-native"],[87,182,292],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-progress/Shapes/Sector.js"],"names":["CIRCLE","Math","PI","makeSectorPath","x","y","angle","radius","Path","moveTo","move","arc","close","startAngle","endAngle","arcFlag","centerX","centerY","cos","sin","Sector","props","offset","restProps","path","left","top","propTypes","number","isRequired","shape","defaultProps"],"mappings":";;;;AAEA;;;;AACA;;;;AACA;;AAEA,IAAMA,SAASC,KAAKC,EAAL,GAAU,CAAzB;;AAEA,SAASC,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6C;AAC3C,MAAID,SAASN,MAAb,EAAqB;AACnB,WAAO,iBAAIQ,IAAJ,GACJC,MADI,CACGL,CADH,EACMC,CADN,EAEJK,IAFI,CAECH,MAFD,EAES,CAFT,EAGJI,GAHI,CAGA,CAHA,EAGGJ,SAAS,CAHZ,EAGeA,MAHf,EAGuBA,MAHvB,EAIJI,GAJI,CAIA,CAJA,EAIGJ,SAAS,CAAC,CAJb,EAIgBA,MAJhB,EAIwBA,MAJxB,EAKJK,KALI,EAAP;AAMD;;AAED,MAAMC,aAAcZ,KAAKC,EAAL,GAAU,CAAX,GAAgBI,KAAnC;AACA,MAAMQ,WAAWb,KAAKC,EAAL,GAAU,CAA3B;AACA,MAAMa,UAAUT,QAAQL,KAAKC,EAAb,GAAkB,CAAlB,GAAsB,CAAtC;AACA,MAAMc,UAAUZ,IAAIG,MAApB;AACA,MAAMU,UAAUZ,IAAIE,MAApB;;AAEA,eAAWS,OAAX,SAAsBC,OAAtB,sBACWD,UAAWf,KAAKiB,GAAL,CAASL,UAAT,IAAuBN,MAD7C,WACwDU,UAAWhB,KAAKkB,GAAL,CAASN,UAAT,IAAuBN,MAD1F,sBAEWA,MAFX,SAEqBA,MAFrB,WAEiCQ,OAFjC,YAE8CC,UAAWf,KAAKiB,GAAL,CAASJ,QAAT,IAAqBP,MAF9E,WAEyFU,UAAWhB,KAAKkB,GAAL,CAASL,QAAT,IAAqBP,MAFzH,sBAGWS,OAHX,SAGsBC,OAHtB;AAID;;IAEoBG,M;;;;;;;;;;6BAcV;AAAA,mBACyC,KAAKC,KAD9C;AAAA,UACCf,KADD,UACCA,KADD;AAAA,UACQC,MADR,UACQA,MADR;AAAA,UACgBe,MADhB,UACgBA,MADhB;AAAA,UAC2BC,SAD3B;;AAEP,UAAMC,OAAOrB,eACVmB,OAAOG,IAAP,IAAe,CADL,EAEVH,OAAOI,GAAP,IAAc,CAFJ,EAGXpB,KAHW,EAIXC,MAJW,CAAb;AAMA,aACE,+CAAK,KAAL,yBAAW,GAAGiB,IAAd,IAAwBD,SAAxB,EADF;AAGD;;;;;AAzBkBH,M,CACZO,S,GAAY;AACjBrB,SAAO,oBAAUsB,MAAV,CAAiBC,UADP;AAEjBtB,UAAQ,oBAAUqB,MAAV,CAAiBC,UAFR;AAGjBP,UAAQ,oBAAUQ,KAAV,CAAgB;AACtBJ,SAAK,oBAAUE,MADO;AAEtBH,UAAM,oBAAUG;AAFM,GAAhB;AAHS,C;AADAR,M,CAUZW,Y,GAAe;AACpBT,UAAQ,EAAEI,KAAK,CAAP,EAAUD,MAAM,CAAhB;AADY,C;kBAVHL,M","sourcesContent":["/* eslint new-cap: [\"error\", { \"capIsNew\": false }] */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ART } from 'react-native';\n\nconst CIRCLE = Math.PI * 2;\n\nfunction makeSectorPath(x, y, angle, radius) {\n  if (angle >= CIRCLE) {\n    return ART.Path()\n      .moveTo(x, y)\n      .move(radius, 0)\n      .arc(0, radius * 2, radius, radius)\n      .arc(0, radius * -2, radius, radius)\n      .close();\n  }\n\n  const startAngle = (Math.PI / 2) - angle;\n  const endAngle = Math.PI / 2;\n  const arcFlag = angle > Math.PI ? 1 : 0;\n  const centerX = x + radius;\n  const centerY = y + radius;\n\n  return `M${centerX} ${centerY}\n          L${centerX + (Math.cos(startAngle) * radius)} ${centerY - (Math.sin(startAngle) * radius)}\n          A${radius} ${radius} 0 ${arcFlag} 0 ${centerX + (Math.cos(endAngle) * radius)} ${centerY - (Math.sin(endAngle) * radius)}\n          L${centerX} ${centerY}`;\n}\n\nexport default class Sector extends Component {\n  static propTypes = {\n    angle: PropTypes.number.isRequired, // in radians\n    radius: PropTypes.number.isRequired,\n    offset: PropTypes.shape({\n      top: PropTypes.number,\n      left: PropTypes.number,\n    }),\n  };\n\n  static defaultProps = {\n    offset: { top: 0, left: 0 },\n  };\n\n  render() {\n    const { angle, radius, offset, ...restProps } = this.props;\n    const path = makeSectorPath(\n      (offset.left || 0),\n      (offset.top || 0),\n      angle,\n      radius\n    );\n    return (\n      <ART.Shape d={path} {...restProps} />\n    );\n  }\n}\n"]}]