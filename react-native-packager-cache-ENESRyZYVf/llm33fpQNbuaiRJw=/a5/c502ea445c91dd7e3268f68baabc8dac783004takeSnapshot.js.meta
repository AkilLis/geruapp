["70258eb6aac340573851b684d570cb3add8fc5b0","8fdccf7b8356fae0876426ac195c4e82d9990a57",["ReactNative","UIManager"],[42,82],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/native/takeSnapshot.js"],"names":["ReactNative","require","UIManager","module","exports","takeSnapshot","view","options","findNodeHandle","__takeSnapshot"],"mappings":";AAWA;;AAEA,IAAIA,cAAcC,QAAQ,aAAR,CAAlB;AACA,IAAIC,YAAYD,QAAQ,WAAR,CAAhB;;AAqBAE,OAAOC,OAAP,GAAiB,SAAeC,YAAf,CACfC,IADe,EAEfC,OAFe;AAAA;AAAA;AAAA;AAAA;AASf,cACE,OAAOD,IAAP,KAAgB,QAAhB,IACAA,SAAS,QAFX,EAGE;AACAA,mBAAON,YAAYQ,cAAZ,CAA2BF,IAA3B,KAAoC,QAA3C;AACD;;AAdc,2CAkBRJ,UAAUO,cAAV,CAAyBH,IAAzB,EAA+BC,OAA/B,CAlBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule takeSnapshot\n * @flow\n */\n'use strict';\n\nvar ReactNative = require('ReactNative');\nvar UIManager = require('UIManager');\n\nimport type {Element} from 'React';\n\n/**\n * Capture an image of the screen, window or an individual view. The image\n * will be stored in a temporary file that will only exist for as long as the\n * app is running.\n *\n * The `view` argument can be the literal string `window` if you want to\n * capture the entire window, or it can be a reference to a specific\n * React Native component.\n *\n * The `options` argument may include:\n * - width/height (number) - the width and height of the image to capture.\n * - format (string) - either 'png' or 'jpeg'. Defaults to 'png'.\n * - quality (number) - the quality when using jpeg. 0.0 - 1.0 (default).\n *\n * Returns a Promise.\n * @platform ios\n */\nmodule.exports = async function takeSnapshot(\n  view ?: 'window' | Element<any> | number,\n  options ?: {\n     width ?: number,\n     height ?: number,\n     format ?: 'png' | 'jpeg',\n     quality ?: number,\n  },\n) {\n  if (\n    typeof view !== 'number' &&\n    view !== 'window'\n  ) {\n    view = ReactNative.findNodeHandle(view) || 'window';\n  }\n\n  // Call the hidden '__takeSnapshot' method; the main one throws an error to\n  // prevent accidental backwards-incompatible usage.\n  return UIManager.__takeSnapshot(view, options);\n};\n"]}]