["767fdfa05059dd7da8f2184dee06a544cc15771c","bd79d318386e7fcd523031568dd9aab465a1d3c2",["react","ReactComponentEnvironment","ReactCompositeComponentTypes","react/lib/ReactCurrentOwner","ReactErrorUtils","ReactFeatureFlags","ReactInstanceMap","ReactInstrumentation","ReactNodeTypes","ReactReconciler","checkReactTypeSpec","react/lib/ReactDebugCurrentFrame","fbjs/lib/emptyObject","fbjs/lib/invariant","fbjs/lib/shallowEqual","shouldUpdateReactComponent","fbjs/lib/warning"],[37,87,160,225,287,339,392,448,502,551,622,684,797,846,896,963,1016],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js"],"names":["React","require","ReactComponentEnvironment","ReactCompositeComponentTypes","ReactCurrentOwner","ReactErrorUtils","ReactFeatureFlags","ReactInstanceMap","ReactInstrumentation","ReactNodeTypes","ReactReconciler","__DEV__","checkReactTypeSpec","ReactDebugCurrentFrame","warningAboutMissingGetChildContext","emptyObject","invariant","shallowEqual","shouldUpdateReactComponent","warning","StatelessComponent","Component","prototype","render","get","_currentElement","type","element","props","context","updater","shouldConstruct","isReactComponent","isPureComponent","isPureReactComponent","measureLifeCyclePerf","fn","debugID","timerType","debugTool","onBeginLifeCycleTimer","onEndLifeCycleTimer","nextMountID","ReactCompositeComponent","construct","_rootNodeID","_compositeType","_instance","_hostParent","_hostContainerInfo","_updateBatchNumber","_pendingElement","_pendingStateQueue","_pendingReplaceState","_pendingForceUpdate","_renderedNodeType","_renderedComponent","_context","_mountOrder","_topLevelWrapper","_pendingCallbacks","_calledComponentWillUnmount","_warnedAboutRefsInRender","mountComponent","transaction","hostParent","hostContainerInfo","publicProps","publicContext","_processContext","updateQueue","getUpdateQueue","doConstruct","inst","_constructComponent","renderedElement","childContextTypes","displayName","name","isValidElement","StatelessFunctional","PureClass","ImpureClass","propsMutated","componentName","undefined","refs","set","getInitialState","isReactClassApproved","state","getName","getDefaultProps","propTypes","contextTypes","componentShouldUpdate","componentDidUnmount","componentWillRecieveProps","initialState","Array","isArray","componentWillMount","_debugID","_processPendingState","markup","unstable_handleError","performInitialMountWithErrorHandling","performInitialMount","componentDidMount","getReactMountReady","enqueue","callbacks","i","length","current","_constructComponentWithoutOwner","checkpoint","e","rollback","unmountComponent","_renderValidatedComponent","nodeType","getType","child","_instantiateReactComponent","EMPTY","_processChildContext","childDebugIDs","onSetChildren","getHostNode","safely","skipLifecycle","componentWillUnmount","invokeGuardedCallbackAndCatchFirstError","remove","_maskContext","maskedContext","contextName","_checkContextTypes","currentContext","childContext","getChildContext","onBeginProcessingChildContext","onEndProcessingChildContext","typeSpecs","values","location","receiveComponent","nextElement","nextContext","prevElement","prevContext","updateComponent","performUpdateIfNecessary","j","getPublicInstance","prevParentElement","nextParentElement","prevUnmaskedContext","nextUnmaskedContext","willReceive","prevProps","nextProps","componentWillReceiveProps","beforeState","afterState","enqueueReplaceState","nextState","shouldUpdate","prevState","shouldComponentUpdate","_performComponentUpdate","queue","replace","dontMutate","partial","partialState","call","unmaskedContext","hasComponentDidUpdate","componentDidUpdate","componentWillUpdate","_updateRenderedComponentWithErrorHandling","_updateRenderedComponent","bind","_updateRenderedComponentWithNextElement","nextRenderedElement","prevComponentInstance","prevRenderedElement","oldHostNode","prepareNewChildrenBeforeUnmountInStack","nextMarkup","_replaceNodeWithMarkup","prevInstance","replaceNodeWithMarkup","_renderValidatedComponentWithoutOwnerOrContext","_isMockFunction","attachRef","ref","component","publicComponentInstance","detachRef","constructor","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCompositeComponent\n */\n\n'use strict';\n\nvar React = require('react');\nvar ReactComponentEnvironment = require('ReactComponentEnvironment');\nvar ReactCompositeComponentTypes = require('ReactCompositeComponentTypes');\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactErrorUtils = require('ReactErrorUtils');\nvar ReactFeatureFlags = require('ReactFeatureFlags');\nvar ReactInstanceMap = require('ReactInstanceMap');\nvar ReactInstrumentation = require('ReactInstrumentation');\nvar ReactNodeTypes = require('ReactNodeTypes');\nvar ReactReconciler = require('ReactReconciler');\n\nif (__DEV__) {\n  var checkReactTypeSpec = require('checkReactTypeSpec');\n  var ReactDebugCurrentFrame = require('react/lib/ReactDebugCurrentFrame');\n  var warningAboutMissingGetChildContext = {};\n}\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar shouldUpdateReactComponent = require('shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nfunction StatelessComponent(Component) {}\nStatelessComponent.prototype.render = function() {\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\n  var element = Component(this.props, this.context, this.updater);\n  return element;\n};\n\nfunction shouldConstruct(Component) {\n  return !!(Component.prototype && Component.prototype.isReactComponent);\n}\n\nfunction isPureComponent(Component) {\n  return !!(Component.prototype && Component.prototype.isPureReactComponent);\n}\n\n// Separated into a function to contain deoptimizations caused by try/finally.\nfunction measureLifeCyclePerf(fn, debugID, timerType) {\n  if (debugID === 0) {\n    // Top-level wrappers (see ReactMount) and empty components (see\n    // ReactDOMEmptyComponent) are invisible to hooks and devtools.\n    // Both are implementation details that should go away in the future.\n    return fn();\n  }\n\n  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);\n  try {\n    return fn();\n  } finally {\n    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);\n  }\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponent = {\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function(element) {\n    this._currentElement = element;\n    this._rootNodeID = 0;\n    this._compositeType = null;\n    this._instance = null;\n    this._hostParent = null;\n    this._hostContainerInfo = null;\n\n    // See ReactUpdateQueue\n    this._updateBatchNumber = null;\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedNodeType = null;\n    this._renderedComponent = null;\n    this._context = null;\n    this._mountOrder = 0;\n    this._topLevelWrapper = null;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n\n    // ComponentWillUnmount shall only be called once\n    this._calledComponentWillUnmount = false;\n\n    if (__DEV__) {\n      this._warnedAboutRefsInRender = false;\n    }\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} hostParent\n   * @param {?object} hostContainerInfo\n   * @param {?object} context\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function(\n    transaction,\n    hostParent,\n    hostContainerInfo,\n    context,\n  ) {\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var publicProps = this._currentElement.props;\n    var publicContext = this._processContext(context);\n\n    var Component = this._currentElement.type;\n\n    var updateQueue = transaction.getUpdateQueue();\n\n    // Initialize the public class\n    var doConstruct = shouldConstruct(Component);\n    var inst = this._constructComponent(\n      doConstruct,\n      publicProps,\n      publicContext,\n      updateQueue,\n    );\n    var renderedElement;\n\n    // Support functional components\n    if (!doConstruct && (inst == null || inst.render == null)) {\n      renderedElement = inst;\n      if (__DEV__) {\n        warning(\n          !Component.childContextTypes,\n          '%s(...): childContextTypes cannot be defined on a functional component.',\n          Component.displayName || Component.name || 'Component',\n        );\n      }\n      invariant(\n        inst === null || inst === false || React.isValidElement(inst),\n        '%s(...): A valid React element (or null) must be returned. You may have ' +\n          'returned undefined, an array or some other invalid object.',\n        Component.displayName || Component.name || 'Component',\n      );\n      inst = new StatelessComponent(Component);\n      this._compositeType = ReactCompositeComponentTypes.StatelessFunctional;\n    } else {\n      if (isPureComponent(Component)) {\n        this._compositeType = ReactCompositeComponentTypes.PureClass;\n      } else {\n        this._compositeType = ReactCompositeComponentTypes.ImpureClass;\n      }\n    }\n\n    if (__DEV__) {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      if (inst.render == null) {\n        warning(\n          false,\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: you may have forgotten to define `render`.',\n          Component.displayName || Component.name || 'Component',\n        );\n      }\n\n      var propsMutated = inst.props !== publicProps;\n      var componentName = Component.displayName ||\n        Component.name ||\n        'Component';\n\n      warning(\n        inst.props === undefined || !propsMutated,\n        '%s(...): When calling super() in `%s`, make sure to pass ' +\n          \"up the same props that your component's constructor was passed.\",\n        componentName,\n        componentName,\n      );\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n    inst.updater = updateQueue;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (__DEV__) {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      warning(\n        !inst.getInitialState ||\n          inst.getInitialState.isReactClassApproved ||\n          inst.state,\n        'getInitialState was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Did you mean to define a state property instead?',\n        this.getName() || 'a component',\n      );\n      warning(\n        !inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved,\n        'getDefaultProps was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Use a static property to define defaultProps instead.',\n        this.getName() || 'a component',\n      );\n      warning(\n        !inst.propTypes,\n        'propTypes was defined as an instance property on %s. Use a static ' +\n          'property to define propTypes instead.',\n        this.getName() || 'a component',\n      );\n      warning(\n        !inst.contextTypes,\n        'contextTypes was defined as an instance property on %s. Use a ' +\n          'static property to define contextTypes instead.',\n        this.getName() || 'a component',\n      );\n      warning(\n        typeof inst.componentShouldUpdate !== 'function',\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        this.getName() || 'A component',\n      );\n      warning(\n        typeof inst.componentDidUnmount !== 'function',\n        '%s has a method called ' +\n          'componentDidUnmount(). But there is no such lifecycle method. ' +\n          'Did you mean componentWillUnmount()?',\n        this.getName() || 'A component',\n      );\n      warning(\n        typeof inst.componentWillRecieveProps !== 'function',\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        this.getName() || 'A component',\n      );\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = (initialState = null);\n    }\n    invariant(\n      typeof initialState === 'object' && !Array.isArray(initialState),\n      '%s.state: must be set to an object or null',\n      this.getName() || 'ReactCompositeComponent',\n    );\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    if (inst.componentWillMount) {\n      if (__DEV__) {\n        measureLifeCyclePerf(\n          () => inst.componentWillMount(),\n          this._debugID,\n          'componentWillMount',\n        );\n      } else {\n        inst.componentWillMount();\n      }\n      // When mounting, calls to `setState` by `componentWillMount` will set\n      // `this._pendingStateQueue` without triggering a re-render.\n      if (this._pendingStateQueue) {\n        inst.state = this._processPendingState(inst.props, inst.context);\n      }\n    }\n\n    var markup;\n    if (inst.unstable_handleError) {\n      markup = this.performInitialMountWithErrorHandling(\n        renderedElement,\n        hostParent,\n        hostContainerInfo,\n        transaction,\n        context,\n      );\n    } else {\n      markup = this.performInitialMount(\n        renderedElement,\n        hostParent,\n        hostContainerInfo,\n        transaction,\n        context,\n      );\n    }\n\n    if (inst.componentDidMount) {\n      if (__DEV__) {\n        transaction.getReactMountReady().enqueue(() => {\n          measureLifeCyclePerf(\n            () => inst.componentDidMount(),\n            this._debugID,\n            'componentDidMount',\n          );\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n      }\n    }\n\n    // setState callbacks during willMount should end up here\n    const callbacks = this._pendingCallbacks;\n    if (callbacks) {\n      this._pendingCallbacks = null;\n      for (let i = 0; i < callbacks.length; i++) {\n        transaction.getReactMountReady().enqueue(callbacks[i], inst);\n      }\n    }\n\n    return markup;\n  },\n\n  _constructComponent: function(\n    doConstruct,\n    publicProps,\n    publicContext,\n    updateQueue,\n  ) {\n    if (__DEV__) {\n      ReactCurrentOwner.current = this;\n      try {\n        return this._constructComponentWithoutOwner(\n          doConstruct,\n          publicProps,\n          publicContext,\n          updateQueue,\n        );\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      return this._constructComponentWithoutOwner(\n        doConstruct,\n        publicProps,\n        publicContext,\n        updateQueue,\n      );\n    }\n  },\n\n  _constructComponentWithoutOwner: function(\n    doConstruct,\n    publicProps,\n    publicContext,\n    updateQueue,\n  ) {\n    var Component = this._currentElement.type;\n\n    if (doConstruct) {\n      if (__DEV__) {\n        return measureLifeCyclePerf(\n          () => new Component(publicProps, publicContext, updateQueue),\n          this._debugID,\n          'ctor',\n        );\n      } else {\n        return new Component(publicProps, publicContext, updateQueue);\n      }\n    }\n\n    // This can still be an instance in case of factory components\n    // but we'll count this as time spent rendering as the more common case.\n    if (__DEV__) {\n      return measureLifeCyclePerf(\n        () => Component(publicProps, publicContext, updateQueue),\n        this._debugID,\n        'render',\n      );\n    } else {\n      return Component(publicProps, publicContext, updateQueue);\n    }\n  },\n\n  performInitialMountWithErrorHandling: function(\n    renderedElement,\n    hostParent,\n    hostContainerInfo,\n    transaction,\n    context,\n  ) {\n    var markup;\n    var checkpoint = transaction.checkpoint();\n    try {\n      markup = this.performInitialMount(\n        renderedElement,\n        hostParent,\n        hostContainerInfo,\n        transaction,\n        context,\n      );\n    } catch (e) {\n      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint\n      transaction.rollback(checkpoint);\n      this._instance.unstable_handleError(e);\n      if (this._pendingStateQueue) {\n        this._instance.state = this._processPendingState(\n          this._instance.props,\n          this._instance.context,\n        );\n      }\n      checkpoint = transaction.checkpoint();\n      this._renderedComponent.unmountComponent(\n        true /* safely */,\n        // Don't call componentWillUnmount() because they never fully mounted:\n        true /* skipLifecyle */,\n      );\n      transaction.rollback(checkpoint);\n\n      // Try again - we've informed the component about the error, so they can render an error message this time.\n      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n      markup = this.performInitialMount(\n        renderedElement,\n        hostParent,\n        hostContainerInfo,\n        transaction,\n        context,\n      );\n    }\n    return markup;\n  },\n\n  performInitialMount: function(\n    renderedElement,\n    hostParent,\n    hostContainerInfo,\n    transaction,\n    context,\n  ) {\n    // If not a stateless component, we now render\n    if (renderedElement === undefined) {\n      renderedElement = this._renderValidatedComponent();\n    }\n\n    var nodeType = ReactNodeTypes.getType(renderedElement);\n    this._renderedNodeType = nodeType;\n    var child = this._instantiateReactComponent(\n      renderedElement,\n      nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */,\n    );\n    this._renderedComponent = child;\n\n    var debugID = 0;\n    if (__DEV__) {\n      debugID = this._debugID;\n    }\n\n    var markup = ReactReconciler.mountComponent(\n      child,\n      transaction,\n      hostParent,\n      hostContainerInfo,\n      this._processChildContext(context),\n      debugID,\n    );\n\n    if (__DEV__) {\n      if (debugID !== 0) {\n        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n      }\n    }\n\n    return markup;\n  },\n\n  getHostNode: function() {\n    return ReactReconciler.getHostNode(this._renderedComponent);\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function(safely, skipLifecycle) {\n    if (!this._renderedComponent) {\n      return;\n    }\n\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {\n      inst._calledComponentWillUnmount = true;\n\n      if (safely) {\n        if (!skipLifecycle) {\n          var name = this.getName() + '.componentWillUnmount()';\n          ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError(\n            name,\n            inst.componentWillUnmount,\n            inst,\n          );\n        }\n      } else {\n        if (__DEV__) {\n          measureLifeCyclePerf(\n            () => inst.componentWillUnmount(),\n            this._debugID,\n            'componentWillUnmount',\n          );\n        } else {\n          inst.componentWillUnmount();\n        }\n      }\n    }\n\n    if (this._renderedComponent) {\n      ReactReconciler.unmountComponent(\n        this._renderedComponent,\n        safely,\n        skipLifecycle,\n      );\n      this._renderedNodeType = null;\n      this._renderedComponent = null;\n      this._instance = null;\n    }\n\n    // Reset pending fields\n    // Even if this component is scheduled for another update in ReactUpdates,\n    // it would still be ignored because these fields are reset.\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = 0;\n    this._topLevelWrapper = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function(context) {\n    var Component = this._currentElement.type;\n    var contextTypes = Component.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    var maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function(context) {\n    var maskedContext = this._maskContext(context);\n    if (__DEV__) {\n      var Component = this._currentElement.type;\n      if (Component.contextTypes) {\n        this._checkContextTypes(\n          Component.contextTypes,\n          maskedContext,\n          'context',\n        );\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function(currentContext) {\n    var Component = this._currentElement.type;\n    var inst = this._instance;\n    var childContext;\n\n    if (typeof inst.getChildContext === 'function') {\n      if (__DEV__) {\n        ReactInstrumentation.debugTool.onBeginProcessingChildContext();\n        try {\n          childContext = inst.getChildContext();\n        } finally {\n          ReactInstrumentation.debugTool.onEndProcessingChildContext();\n        }\n      } else {\n        childContext = inst.getChildContext();\n      }\n\n      invariant(\n        typeof Component.childContextTypes === 'object',\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n          'use getChildContext().',\n        this.getName() || 'ReactCompositeComponent',\n      );\n      if (__DEV__) {\n        this._checkContextTypes(\n          Component.childContextTypes,\n          childContext,\n          'child context',\n        );\n      }\n      for (var name in childContext) {\n        invariant(\n          name in Component.childContextTypes,\n          '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.',\n          this.getName() || 'ReactCompositeComponent',\n          name,\n        );\n      }\n      return Object.assign({}, currentContext, childContext);\n    } else {\n      if (__DEV__) {\n        const componentName = this.getName();\n\n        if (!warningAboutMissingGetChildContext[componentName]) {\n          warningAboutMissingGetChildContext[componentName] = true;\n          warning(\n            !Component.childContextTypes,\n            '%s.childContextTypes is specified but there is no getChildContext() method ' +\n              'on the instance. You can either define getChildContext() on %s or remove ' +\n              'childContextTypes from it.',\n            componentName,\n            componentName,\n          );\n        }\n      }\n    }\n    return currentContext;\n  },\n\n  /**\n   * Assert that the context types are valid\n   *\n   * @param {object} typeSpecs Map of context field to a ReactPropType\n   * @param {object} values Runtime values that need to be type-checked\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkContextTypes: function(typeSpecs, values, location: string) {\n    if (__DEV__) {\n      ReactDebugCurrentFrame.current = this._debugID;\n      checkReactTypeSpec(typeSpecs, values, location, this.getName());\n      ReactDebugCurrentFrame.current = null;\n    }\n  },\n\n  receiveComponent: function(nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(\n      transaction,\n      prevElement,\n      nextElement,\n      prevContext,\n      nextContext,\n    );\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function(transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(\n        this,\n        this._pendingElement,\n        transaction,\n        this._context,\n      );\n    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      this.updateComponent(\n        transaction,\n        this._currentElement,\n        this._currentElement,\n        this._context,\n        this._context,\n      );\n    } else {\n      var callbacks = this._pendingCallbacks;\n      this._pendingCallbacks = null;\n      if (callbacks) {\n        for (var j = 0; j < callbacks.length; j++) {\n          transaction\n            .getReactMountReady()\n            .enqueue(callbacks[j], this.getPublicInstance());\n        }\n      }\n      this._updateBatchNumber = null;\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function(\n    transaction,\n    prevParentElement,\n    nextParentElement,\n    prevUnmaskedContext,\n    nextUnmaskedContext,\n  ) {\n    var inst = this._instance;\n    invariant(\n      inst != null,\n      'Attempted to update component `%s` that has already been unmounted ' +\n        '(or failed to mount).',\n      this.getName() || 'ReactCompositeComponent',\n    );\n\n    var willReceive = false;\n    var nextContext;\n\n    // Determine if the context has changed or not\n    if (this._context === nextUnmaskedContext) {\n      nextContext = inst.context;\n    } else {\n      nextContext = this._processContext(nextUnmaskedContext);\n      willReceive = true;\n    }\n\n    var prevProps = prevParentElement.props;\n    var nextProps = nextParentElement.props;\n\n    // Not a simple state update but a props update\n    if (prevParentElement !== nextParentElement) {\n      willReceive = true;\n    }\n\n    // An update here will schedule an update but immediately set\n    // _pendingStateQueue which will ensure that any state updates gets\n    // immediately reconciled instead of waiting for the next batch.\n    if (willReceive && inst.componentWillReceiveProps) {\n      const beforeState = inst.state;\n      if (__DEV__) {\n        measureLifeCyclePerf(\n          () => inst.componentWillReceiveProps(nextProps, nextContext),\n          this._debugID,\n          'componentWillReceiveProps',\n        );\n      } else {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n      const afterState = inst.state;\n      if (beforeState !== afterState) {\n        inst.state = beforeState;\n        inst.updater.enqueueReplaceState(inst, afterState);\n        if (__DEV__) {\n          warning(\n            false,\n            '%s.componentWillReceiveProps(): Assigning directly to ' +\n              \"this.state is deprecated (except inside a component's \" +\n              'constructor). Use setState instead.',\n            this.getName() || 'ReactCompositeComponent',\n          );\n        }\n      }\n    }\n\n    // If updating happens to enqueue any new updates, we shouldn't execute new\n    // callbacks until the next render happens, so stash the callbacks first.\n    var callbacks = this._pendingCallbacks;\n    this._pendingCallbacks = null;\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n    var shouldUpdate = true;\n    if (!this._pendingForceUpdate) {\n      var prevState = inst.state;\n      shouldUpdate = willReceive || nextState !== prevState;\n      if (inst.shouldComponentUpdate) {\n        if (__DEV__) {\n          shouldUpdate = measureLifeCyclePerf(\n            () => inst.shouldComponentUpdate(nextProps, nextState, nextContext),\n            this._debugID,\n            'shouldComponentUpdate',\n          );\n        } else {\n          shouldUpdate = inst.shouldComponentUpdate(\n            nextProps,\n            nextState,\n            nextContext,\n          );\n        }\n      } else {\n        if (this._compositeType === ReactCompositeComponentTypes.PureClass) {\n          shouldUpdate = !shallowEqual(prevProps, nextProps) ||\n            !shallowEqual(inst.state, nextState);\n        }\n      }\n    }\n\n    if (__DEV__) {\n      warning(\n        shouldUpdate !== undefined,\n        '%s.shouldComponentUpdate(): Returned undefined instead of a ' +\n          'boolean value. Make sure to return true or false.',\n        this.getName() || 'ReactCompositeComponent',\n      );\n    }\n\n    this._updateBatchNumber = null;\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(\n        nextParentElement,\n        nextProps,\n        nextState,\n        nextContext,\n        transaction,\n        nextUnmaskedContext,\n      );\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n\n    if (callbacks) {\n      for (var j = 0; j < callbacks.length; j++) {\n        transaction\n          .getReactMountReady()\n          .enqueue(callbacks[j], this.getPublicInstance());\n      }\n    }\n  },\n\n  _processPendingState: function(props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = replace ? queue[0] : inst.state;\n    var dontMutate = true;\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      let partialState = typeof partial === 'function'\n        ? partial.call(inst, nextState, props, context)\n        : partial;\n      if (partialState) {\n        if (dontMutate) {\n          dontMutate = false;\n          nextState = Object.assign({}, nextState, partialState);\n        } else {\n          Object.assign(nextState, partialState);\n        }\n      }\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function(\n    nextElement,\n    nextProps,\n    nextState,\n    nextContext,\n    transaction,\n    unmaskedContext,\n  ) {\n    var inst = this._instance;\n\n    var hasComponentDidUpdate = !!inst.componentDidUpdate;\n    var prevProps;\n    var prevState;\n    var prevContext;\n    if (hasComponentDidUpdate) {\n      prevProps = inst.props;\n      prevState = inst.state;\n      prevContext = inst.context;\n    }\n\n    if (inst.componentWillUpdate) {\n      if (__DEV__) {\n        measureLifeCyclePerf(\n          () => inst.componentWillUpdate(nextProps, nextState, nextContext),\n          this._debugID,\n          'componentWillUpdate',\n        );\n      } else {\n        inst.componentWillUpdate(nextProps, nextState, nextContext);\n      }\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    if (inst.unstable_handleError) {\n      this._updateRenderedComponentWithErrorHandling(\n        transaction,\n        unmaskedContext,\n      );\n    } else {\n      this._updateRenderedComponent(transaction, unmaskedContext);\n    }\n\n    if (hasComponentDidUpdate) {\n      if (__DEV__) {\n        transaction.getReactMountReady().enqueue(() => {\n          measureLifeCyclePerf(\n            inst.componentDidUpdate.bind(\n              inst,\n              prevProps,\n              prevState,\n              prevContext,\n            ),\n            this._debugID,\n            'componentDidUpdate',\n          );\n        });\n      } else {\n        transaction\n          .getReactMountReady()\n          .enqueue(\n            inst.componentDidUpdate.bind(\n              inst,\n              prevProps,\n              prevState,\n              prevContext,\n            ),\n            inst,\n          );\n      }\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponentWithErrorHandling: function(transaction, context) {\n    var checkpoint = transaction.checkpoint();\n    try {\n      this._updateRenderedComponent(transaction, context);\n    } catch (e) {\n      // Roll back to checkpoint, handle error (which may add items to the transaction),\n      // and take a new checkpoint\n      transaction.rollback(checkpoint);\n      this._instance.unstable_handleError(e);\n      if (this._pendingStateQueue) {\n        this._instance.state = this._processPendingState(\n          this._instance.props,\n          this._instance.context,\n        );\n      }\n      checkpoint = transaction.checkpoint();\n\n      // Gracefully update to a clean state\n      this._updateRenderedComponentWithNextElement(\n        transaction,\n        context,\n        null,\n        true /* safely */,\n      );\n\n      // Try again - we've informed the component about the error, so they can render an error message this time.\n      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n      this._updateRenderedComponent(transaction, context);\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function(transaction, context) {\n    var nextRenderedElement = this._renderValidatedComponent();\n    this._updateRenderedComponentWithNextElement(\n      transaction,\n      context,\n      nextRenderedElement,\n      false /* safely */,\n    );\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponentWithNextElement: function(\n    transaction,\n    context,\n    nextRenderedElement,\n    safely,\n  ) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n\n    var debugID = 0;\n    if (__DEV__) {\n      debugID = this._debugID;\n    }\n\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(\n        prevComponentInstance,\n        nextRenderedElement,\n        transaction,\n        this._processChildContext(context),\n      );\n    } else {\n      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);\n\n      if (!ReactFeatureFlags.prepareNewChildrenBeforeUnmountInStack) {\n        ReactReconciler.unmountComponent(\n          prevComponentInstance,\n          safely,\n          false /* skipLifecycle */,\n        );\n      }\n\n      var nodeType = ReactNodeTypes.getType(nextRenderedElement);\n      this._renderedNodeType = nodeType;\n      var child = this._instantiateReactComponent(\n        nextRenderedElement,\n        nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */,\n      );\n      this._renderedComponent = child;\n\n      var nextMarkup = ReactReconciler.mountComponent(\n        child,\n        transaction,\n        this._hostParent,\n        this._hostContainerInfo,\n        this._processChildContext(context),\n        debugID,\n      );\n\n      if (ReactFeatureFlags.prepareNewChildrenBeforeUnmountInStack) {\n        ReactReconciler.unmountComponent(\n          prevComponentInstance,\n          safely,\n          false /* skipLifecycle */,\n        );\n      }\n\n      if (__DEV__) {\n        if (debugID !== 0) {\n          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n        }\n      }\n\n      this._replaceNodeWithMarkup(\n        oldHostNode,\n        nextMarkup,\n        prevComponentInstance,\n      );\n    }\n  },\n\n  /**\n   * Overridden in shallow rendering.\n   *\n   * @protected\n   */\n  _replaceNodeWithMarkup: function(oldHostNode, nextMarkup, prevInstance) {\n    ReactComponentEnvironment.replaceNodeWithMarkup(\n      oldHostNode,\n      nextMarkup,\n      prevInstance,\n    );\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function() {\n    var inst = this._instance;\n    var renderedElement;\n\n    if (__DEV__) {\n      renderedElement = measureLifeCyclePerf(\n        () => inst.render(),\n        this._debugID,\n        'render',\n      );\n    } else {\n      renderedElement = inst.render();\n    }\n\n    if (__DEV__) {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (renderedElement === undefined && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedElement = null;\n      }\n    }\n\n    return renderedElement;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function() {\n    var renderedElement;\n    if (\n      __DEV__ ||\n      this._compositeType !== ReactCompositeComponentTypes.StatelessFunctional\n    ) {\n      ReactCurrentOwner.current = this;\n      try {\n        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n    }\n    invariant(\n      // TODO: An `isValidNode` function would probably be more appropriate\n      renderedElement === null ||\n        renderedElement === false ||\n        React.isValidElement(renderedElement),\n      '%s.render(): A valid React element (or null) must be returned. You may have ' +\n        'returned undefined, an array or some other invalid object.',\n      this.getName() || 'ReactCompositeComponent',\n    );\n\n    return renderedElement;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function(ref, component) {\n    var inst = this.getPublicInstance();\n    invariant(inst != null, 'Stateless function components cannot have refs.');\n    var publicComponentInstance = component.getPublicInstance();\n    var refs = inst.refs === emptyObject ? (inst.refs = {}) : inst.refs;\n    refs[ref] = publicComponentInstance;\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function(ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function() {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return type.displayName ||\n      (constructor && constructor.displayName) ||\n      type.name ||\n      (constructor && constructor.name) ||\n      null;\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function() {\n    var inst = this._instance;\n    if (\n      this._compositeType === ReactCompositeComponentTypes.StatelessFunctional\n    ) {\n      return null;\n    }\n    return inst;\n  },\n\n  // Stub\n  _instantiateReactComponent: null,\n};\n\nmodule.exports = ReactCompositeComponent;\n"]}]