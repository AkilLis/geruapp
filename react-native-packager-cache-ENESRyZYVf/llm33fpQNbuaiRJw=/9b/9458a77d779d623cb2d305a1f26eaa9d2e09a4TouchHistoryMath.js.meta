["3a57ad6244d5d56b7d3114a4265bbb0d095c1f6c","0b1b6cb732da152d8d7f665bc0e853a13f838a03",[],[],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/shared/event/eventPlugins/TouchHistoryMath.js"],"names":["TouchHistoryMath","centroidDimension","touchHistory","touchesChangedAfter","isXAxis","ofCurrent","touchBank","total","count","oneTouchData","numberActiveTouches","indexOfSingleActiveTouch","touchActive","currentTimeStamp","currentPageX","currentPageY","previousPageX","previousPageY","i","length","touchTrack","undefined","toAdd","noCentroid","currentCentroidXOfTouchesChangedAfter","currentCentroidYOfTouchesChangedAfter","previousCentroidXOfTouchesChangedAfter","previousCentroidYOfTouchesChangedAfter","currentCentroidX","currentCentroidY","module","exports"],"mappings":";;AAIA;;AAEA,IAAIA,mBAAmB;AAiBrBC,qBAAmB,2BACjBC,YADiB,EAEjBC,mBAFiB,EAGjBC,OAHiB,EAIjBC,SAJiB,EAKjB;AACA,QAAIC,YAAYJ,aAAaI,SAA7B;AACA,QAAIC,QAAQ,CAAZ;AACA,QAAIC,QAAQ,CAAZ;;AAEA,QAAIC,eAAeP,aAAaQ,mBAAb,KAAqC,CAArC,GACfR,aAAaI,SAAb,CAAuBJ,aAAaS,wBAApC,CADe,GAEf,IAFJ;;AAIA,QAAIF,iBAAiB,IAArB,EAA2B;AACzB,UACEA,aAAaG,WAAb,IACAH,aAAaI,gBAAb,GAAgCV,mBAFlC,EAGE;AACAI,iBAASF,aAAaD,OAAb,GACLK,aAAaK,YADR,GAELT,aAAa,CAACD,OAAd,GACIK,aAAaM,YADjB,GAEI,CAACV,SAAD,IAAcD,OAAd,GACIK,aAAaO,aADjB,GAEIP,aAAaQ,aANzB;AAOAT,gBAAQ,CAAR;AACD;AACF,KAdD,MAcO;AACL,WAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAIZ,UAAUa,MAA9B,EAAsCD,GAAtC,EAA2C;AACzC,YAAIE,aAAad,UAAUY,CAAV,CAAjB;AACA,YACEE,eAAe,IAAf,IACAA,eAAeC,SADf,IAEAD,WAAWR,WAFX,IAGAQ,WAAWP,gBAAX,IAA+BV,mBAJjC,EAKE;AACA,cAAImB,KAAJ;AACA,cAAIjB,aAAaD,OAAjB,EAA0B;AACxBkB,oBAAQF,WAAWN,YAAnB;AACD,WAFD,MAEO,IAAIT,aAAa,CAACD,OAAlB,EAA2B;AAChCkB,oBAAQF,WAAWL,YAAnB;AACD,WAFM,MAEA,IAAI,CAACV,SAAD,IAAcD,OAAlB,EAA2B;AAChCkB,oBAAQF,WAAWJ,aAAnB;AACD,WAFM,MAEA;AACLM,oBAAQF,WAAWH,aAAnB;AACD;AACDV,mBAASe,KAAT;AACAd;AACD;AACF;AACF;AACD,WAAOA,QAAQ,CAAR,GAAYD,QAAQC,KAApB,GAA4BR,iBAAiBuB,UAApD;AACD,GAtEoB;;AAwErBC,yCAAuC,+CACrCtB,YADqC,EAErCC,mBAFqC,EAGrC;AACA,WAAOH,iBAAiBC,iBAAjB,CACLC,YADK,EAELC,mBAFK,EAGL,IAHK,EAIL,IAJK,CAAP;AAMD,GAlFoB;;AAoFrBsB,yCAAuC,+CACrCvB,YADqC,EAErCC,mBAFqC,EAGrC;AACA,WAAOH,iBAAiBC,iBAAjB,CACLC,YADK,EAELC,mBAFK,EAGL,KAHK,EAIL,IAJK,CAAP;AAMD,GA9FoB;;AAgGrBuB,0CAAwC,gDACtCxB,YADsC,EAEtCC,mBAFsC,EAGtC;AACA,WAAOH,iBAAiBC,iBAAjB,CACLC,YADK,EAELC,mBAFK,EAGL,IAHK,EAIL,KAJK,CAAP;AAMD,GA1GoB;;AA4GrBwB,0CAAwC,gDACtCzB,YADsC,EAEtCC,mBAFsC,EAGtC;AACA,WAAOH,iBAAiBC,iBAAjB,CACLC,YADK,EAELC,mBAFK,EAGL,KAHK,EAIL,KAJK,CAAP;AAMD,GAtHoB;;AAwHrByB,oBAAkB,0BAAS1B,YAAT,EAAuB;AACvC,WAAOF,iBAAiBC,iBAAjB,CACLC,YADK,EAEL,CAFK,EAGL,IAHK,EAIL,IAJK,CAAP;AAMD,GA/HoB;;AAiIrB2B,oBAAkB,0BAAS3B,YAAT,EAAuB;AACvC,WAAOF,iBAAiBC,iBAAjB,CACLC,YADK,EAEL,CAFK,EAGL,KAHK,EAIL,IAJK,CAAP;AAMD,GAxIoB;;AA0IrBqB,cAAY,CAAC;AA1IQ,CAAvB;;AA6IAO,OAAOC,OAAP,GAAiB/B,gBAAjB","sourcesContent":["/**\n * @providesModule TouchHistoryMath\n */\n\n'use strict';\n\nvar TouchHistoryMath = {\n  /**\n   * This code is optimized and not intended to look beautiful. This allows\n   * computing of touch centroids that have moved after `touchesChangedAfter`\n   * timeStamp. You can compute the current centroid involving all touches\n   * moves after `touchesChangedAfter`, or you can compute the previous\n   * centroid of all touches that were moved after `touchesChangedAfter`.\n   *\n   * @param {TouchHistoryMath} touchHistory Standard Responder touch track\n   * data.\n   * @param {number} touchesChangedAfter timeStamp after which moved touches\n   * are considered \"actively moving\" - not just \"active\".\n   * @param {boolean} isXAxis Consider `x` dimension vs. `y` dimension.\n   * @param {boolean} ofCurrent Compute current centroid for actively moving\n   * touches vs. previous centroid of now actively moving touches.\n   * @return {number} value of centroid in specified dimension.\n   */\n  centroidDimension: function(\n    touchHistory,\n    touchesChangedAfter,\n    isXAxis,\n    ofCurrent,\n  ) {\n    var touchBank = touchHistory.touchBank;\n    var total = 0;\n    var count = 0;\n\n    var oneTouchData = touchHistory.numberActiveTouches === 1\n      ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]\n      : null;\n\n    if (oneTouchData !== null) {\n      if (\n        oneTouchData.touchActive &&\n        oneTouchData.currentTimeStamp > touchesChangedAfter\n      ) {\n        total += ofCurrent && isXAxis\n          ? oneTouchData.currentPageX\n          : ofCurrent && !isXAxis\n              ? oneTouchData.currentPageY\n              : !ofCurrent && isXAxis\n                  ? oneTouchData.previousPageX\n                  : oneTouchData.previousPageY;\n        count = 1;\n      }\n    } else {\n      for (var i = 0; i < touchBank.length; i++) {\n        var touchTrack = touchBank[i];\n        if (\n          touchTrack !== null &&\n          touchTrack !== undefined &&\n          touchTrack.touchActive &&\n          touchTrack.currentTimeStamp >= touchesChangedAfter\n        ) {\n          var toAdd; // Yuck, program temporarily in invalid state.\n          if (ofCurrent && isXAxis) {\n            toAdd = touchTrack.currentPageX;\n          } else if (ofCurrent && !isXAxis) {\n            toAdd = touchTrack.currentPageY;\n          } else if (!ofCurrent && isXAxis) {\n            toAdd = touchTrack.previousPageX;\n          } else {\n            toAdd = touchTrack.previousPageY;\n          }\n          total += toAdd;\n          count++;\n        }\n      }\n    }\n    return count > 0 ? total / count : TouchHistoryMath.noCentroid;\n  },\n\n  currentCentroidXOfTouchesChangedAfter: function(\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      true, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  currentCentroidYOfTouchesChangedAfter: function(\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      false, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  previousCentroidXOfTouchesChangedAfter: function(\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      true, // isXAxis\n      false, // ofCurrent\n    );\n  },\n\n  previousCentroidYOfTouchesChangedAfter: function(\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      false, // isXAxis\n      false, // ofCurrent\n    );\n  },\n\n  currentCentroidX: function(touchHistory) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      0, // touchesChangedAfter\n      true, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  currentCentroidY: function(touchHistory) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      0, // touchesChangedAfter\n      false, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  noCentroid: -1,\n};\n\nmodule.exports = TouchHistoryMath;\n"]}]