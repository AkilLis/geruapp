["80c4deec90d05cf20b6f5981fa1b41992ddcfddf","2167db31c9bb8a63f9caf7fc017cad71ebfe276d",["ReactTypeOfWork","getComponentName"],[47,335],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/shared/ReactFiberComponentTreeHook.js"],"names":["ReactTypeOfWork","require","IndeterminateComponent","FunctionalComponent","ClassComponent","HostComponent","getComponentName","describeComponentFrame","name","source","ownerName","fileName","replace","lineNumber","describeFiber","fiber","tag","owner","_debugOwner","_debugSource","getStackAddendumByWorkInProgressFiber","workInProgress","info","node","return","module","exports"],"mappings":";;AAYA;;AAEA,IAAIA,kBAAkBC,QAAQ,iBAAR,CAAtB;IAEEC,sB,GAIEF,e,CAJFE,sB;IACAC,mB,GAGEH,e,CAHFG,mB;IACAC,c,GAEEJ,e,CAFFI,c;IACAC,a,GACEL,e,CADFK,a;;AAEF,IAAIC,mBAAmBL,QAAQ,kBAAR,CAAvB;;AAIA,SAASM,sBAAT,CAAgCC,IAAhC,EAAsCC,MAAtC,EAAmDC,SAAnD,EAA8D;AAC5D,SAAO,eACJF,QAAQ,SADJ,KAEJC,SACG,UACEA,OAAOE,QAAP,CAAgBC,OAAhB,CAAwB,WAAxB,EAAqC,EAArC,CADF,GAEE,GAFF,GAGEH,OAAOI,UAHT,GAIE,GALL,GAMGH,YAAY,kBAAkBA,SAAlB,GAA8B,GAA1C,GAAgD,EAR/C,CAAP;AASD;;AAED,SAASI,aAAT,CAAuBC,KAAvB,EAA6C;AAC3C,UAAQA,MAAMC,GAAd;AACE,SAAKd,sBAAL;AACA,SAAKC,mBAAL;AACA,SAAKC,cAAL;AACA,SAAKC,aAAL;AACE,UAAIY,QAAQF,MAAMG,WAAlB;AACA,UAAIT,SAASM,MAAMI,YAAnB;AACA,UAAIX,OAAOF,iBAAiBS,KAAjB,CAAX;AACA,UAAIL,YAAY,IAAhB;AACA,UAAIO,KAAJ,EAAW;AACTP,oBAAYJ,iBAAiBW,KAAjB,CAAZ;AACD;AACD,aAAOV,uBAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,SAArC,CAAP;AACF;AACE,aAAO,EAAP;AAdJ;AAgBD;;AAKD,SAASU,qCAAT,CAA+CC,cAA/C,EAA8E;AAC5E,MAAIC,OAAO,EAAX;AACA,MAAIC,OAAOF,cAAX;AACA,KAAG;AACDC,YAAQR,cAAcS,IAAd,CAAR;;AAEAA,WAAOA,KAAKC,MAAZ;AACD,GAJD,QAISD,IAJT;AAKA,SAAOD,IAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiB;AACfN,8EADe;AAEfb;AAFe,CAAjB","sourcesContent":["/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @providesModule ReactFiberComponentTreeHook\n */\n\n'use strict';\n\nvar ReactTypeOfWork = require('ReactTypeOfWork');\nvar {\n  IndeterminateComponent,\n  FunctionalComponent,\n  ClassComponent,\n  HostComponent,\n} = ReactTypeOfWork;\nvar getComponentName = require('getComponentName');\n\nimport type {Fiber} from 'ReactFiber';\n\nfunction describeComponentFrame(name, source: any, ownerName) {\n  return '\\n    in ' +\n    (name || 'Unknown') +\n    (source\n      ? ' (at ' +\n          source.fileName.replace(/^.*[\\\\\\/]/, '') +\n          ':' +\n          source.lineNumber +\n          ')'\n      : ownerName ? ' (created by ' + ownerName + ')' : '');\n}\n\nfunction describeFiber(fiber: Fiber): string {\n  switch (fiber.tag) {\n    case IndeterminateComponent:\n    case FunctionalComponent:\n    case ClassComponent:\n    case HostComponent:\n      var owner = fiber._debugOwner;\n      var source = fiber._debugSource;\n      var name = getComponentName(fiber);\n      var ownerName = null;\n      if (owner) {\n        ownerName = getComponentName(owner);\n      }\n      return describeComponentFrame(name, source, ownerName);\n    default:\n      return '';\n  }\n}\n\n// This function can only be called with a work-in-progress fiber and\n// only during begin or complete phase. Do not call it under any other\n// circumstances.\nfunction getStackAddendumByWorkInProgressFiber(workInProgress: Fiber): string {\n  var info = '';\n  var node = workInProgress;\n  do {\n    info += describeFiber(node);\n    // Otherwise this return pointer might point to the wrong tree:\n    node = node.return;\n  } while (node);\n  return info;\n}\n\nmodule.exports = {\n  getStackAddendumByWorkInProgressFiber,\n  describeComponentFrame,\n};\n"]}]