["d714033bd6f3f897255da3b206696e317991c080","a73e3c92fe5d33e046597ed0528b9c84929fab50",["NativeEventEmitter","Platform","NativeModules","WebSocketEvent","binaryToBase64","event-target-shim","base64-js"],[49,95,141,204,252,298,341],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/WebSocket/WebSocket.js"],"names":["NativeEventEmitter","require","Platform","RCTWebSocketModule","WebSocketModule","WebSocketEvent","binaryToBase64","EventTarget","base64","CONNECTING","OPEN","CLOSING","CLOSED","CLOSE_NORMAL","WEBSOCKET_EVENTS","nextWebSocketId","WebSocket","url","protocols","options","readyState","Array","isArray","_eventEmitter","_socketId","_registerEvents","connect","code","reason","_close","data","Error","send","ArrayBuffer","isView","sendBinary","ping","OS","statusCode","closeReason","close","_subscriptions","forEach","e","remove","addListener","ev","id","dispatchEvent","type","toByteArray","buffer","_unregisterEvents","message","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule WebSocket\n * @flow\n */\n'use strict';\n\nconst NativeEventEmitter = require('NativeEventEmitter');\nconst Platform = require('Platform');\nconst RCTWebSocketModule = require('NativeModules').WebSocketModule;\nconst WebSocketEvent = require('WebSocketEvent');\nconst binaryToBase64 = require('binaryToBase64');\n\nconst EventTarget = require('event-target-shim');\nconst base64 = require('base64-js');\n\nimport type EventSubscription from 'EventSubscription';\n\nconst CONNECTING = 0;\nconst OPEN = 1;\nconst CLOSING = 2;\nconst CLOSED = 3;\n\nconst CLOSE_NORMAL = 1000;\n\nconst WEBSOCKET_EVENTS = [\n  'close',\n  'error',\n  'message',\n  'open',\n];\n\nlet nextWebSocketId = 0;\n\n/**\n * Browser-compatible WebSockets implementation.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * See https://github.com/websockets/ws\n */\nclass WebSocket extends EventTarget(...WEBSOCKET_EVENTS) {\n  static CONNECTING = CONNECTING;\n  static OPEN = OPEN;\n  static CLOSING = CLOSING;\n  static CLOSED = CLOSED;\n\n  CONNECTING: number = CONNECTING;\n  OPEN: number = OPEN;\n  CLOSING: number = CLOSING;\n  CLOSED: number = CLOSED;\n\n  _socketId: number;\n  _eventEmitter: NativeEventEmitter;\n  _subscriptions: Array<EventSubscription>;\n\n  onclose: ?Function;\n  onerror: ?Function;\n  onmessage: ?Function;\n  onopen: ?Function;\n\n  binaryType: ?string;\n  bufferedAmount: number;\n  extension: ?string;\n  protocol: ?string;\n  readyState: number = CONNECTING;\n  url: ?string;\n\n  constructor(url: string, protocols: ?string | ?Array<string>, options: ?{origin?: string}) {\n    super();\n    if (typeof protocols === 'string') {\n      protocols = [protocols];\n    }\n\n    if (!Array.isArray(protocols)) {\n      protocols = null;\n    }\n\n    this._eventEmitter = new NativeEventEmitter(RCTWebSocketModule);\n    this._socketId = nextWebSocketId++;\n    this._registerEvents();\n    RCTWebSocketModule.connect(url, protocols, options, this._socketId);\n  }\n\n  close(code?: number, reason?: string): void {\n    if (this.readyState === this.CLOSING ||\n        this.readyState === this.CLOSED) {\n      return;\n    }\n\n    this.readyState = this.CLOSING;\n    this._close(code, reason);\n  }\n\n  send(data: string | ArrayBuffer | $ArrayBufferView): void {\n    if (this.readyState === this.CONNECTING) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    if (typeof data === 'string') {\n      RCTWebSocketModule.send(data, this._socketId);\n      return;\n    }\n\n    if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n      RCTWebSocketModule.sendBinary(binaryToBase64(data), this._socketId);\n      return;\n    }\n\n    throw new Error('Unsupported data type');\n  }\n\n  ping(): void {\n    if (this.readyState === this.CONNECTING) {\n        throw new Error('INVALID_STATE_ERR');\n    }\n\n    RCTWebSocketModule.ping(this._socketId);\n  }\n\n  _close(code?: number, reason?: string): void {\n    if (Platform.OS === 'android') {\n      // See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n      const statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n      const closeReason = typeof reason === 'string' ? reason : '';\n      RCTWebSocketModule.close(statusCode, closeReason, this._socketId);\n    } else {\n      RCTWebSocketModule.close(this._socketId);\n    }\n  }\n\n  _unregisterEvents(): void {\n    this._subscriptions.forEach(e => e.remove());\n    this._subscriptions = [];\n  }\n\n  _registerEvents(): void {\n    this._subscriptions = [\n      this._eventEmitter.addListener('websocketMessage', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.dispatchEvent(new WebSocketEvent('message', {\n          data: (ev.type === 'binary') ? base64.toByteArray(ev.data).buffer : ev.data\n        }));\n      }),\n      this._eventEmitter.addListener('websocketOpen', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.OPEN;\n        this.dispatchEvent(new WebSocketEvent('open'));\n      }),\n      this._eventEmitter.addListener('websocketClosed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(new WebSocketEvent('close', {\n          code: ev.code,\n          reason: ev.reason,\n        }));\n        this._unregisterEvents();\n        this.close();\n      }),\n      this._eventEmitter.addListener('websocketFailed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(new WebSocketEvent('error', {\n          message: ev.message,\n        }));\n        this.dispatchEvent(new WebSocketEvent('close', {\n          message: ev.message,\n        }));\n        this._unregisterEvents();\n        this.close();\n      })\n    ];\n  }\n}\n\nmodule.exports = WebSocket;\n"]}]