["d2c0f04ede1cd56567afcac0aeae1d17f4afa92a","c3c7607cfc9f47acaf9f76920ce78f25902a4bfe",["react","react-native","react-timer-mixin","./SceneComponent","./DefaultTabBar","./ScrollableTabBar"],[20,138,615,667,716,767],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-scrollable-tab-view/index.js"],"names":["React","require","PropTypes","Component","ReactNative","ViewPropTypes","Dimensions","View","Animated","ScrollView","Platform","StyleSheet","ViewPagerAndroid","InteractionManager","TimerMixin","SceneComponent","DefaultTabBar","ScrollableTabBar","AnimatedViewPagerAndroid","OS","createAnimatedComponent","undefined","ScrollableTabView","createClass","mixins","statics","scrollOnMountCalled","propTypes","tabBarPosition","oneOf","initialPage","number","page","onChangeTab","func","onScroll","renderTabBar","any","style","contentProps","object","scrollWithoutAnimation","bool","locked","prerenderingSiblingsNumber","getDefaultProps","getInitialState","containerWidth","get","width","scrollValue","scrollXIOS","positionAndroid","offsetAndroid","Value","props","containerWidthAnimatedValue","__makeNative","divide","callListeners","_polyfillAnimatedValue","addListener","value","state","add","positionAndroidValue","offsetAndroidValue","currentPage","sceneKeys","newSceneKeys","componentWillReceiveProps","children","updateSceneKeys","goToPage","componentWillUnmount","removeAllListeners","pageNumber","offset","scrollView","getNode","scrollTo","x","y","animated","setPageWithoutAnimation","setPage","callback","_onChangeTab","bind","cloneElement","newKeys","previousKeys","setState","_children","forEach","child","idx","key","_makeSceneKey","_keyExists","_shouldRenderSceneKey","push","animatedValue","listeners","Set","listener","removeListener","delete","clear","currentPageKey","numOfSibling","find","sceneKey","tabLabel","renderScrollableContent","scenes","_composeScenes","event","nativeEvent","contentOffset","useNativeDriver","_onScroll","_onMomentumScrollBeginAndEnd","length","styles","scrollableContentAndroid","_updateSelectedPage","position","map","e","offsetX","Math","round","nextPage","localNextPage","prevPage","i","ref","from","_handleLayout","layout","requestAnimationFrame","Children","render","overlayTabs","tabBarProps","tabs","activeTab","tabBarBackgroundColor","backgroundColor","tabBarActiveTextColor","activeTextColor","tabBarInactiveTextColor","inactiveTextColor","tabBarTextStyle","textStyle","tabBarUnderlineStyle","underlineStyle","left","right","container","module","exports","create","flex"],"mappings":"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","sourcesContent":["const React = require('react');\nconst {\n  PropTypes,\n  Component,\n} = React;\nconst { ViewPropTypes } = ReactNative = require('react-native');\nconst {\n  Dimensions,\n  View,\n  Animated,\n  ScrollView,\n  Platform,\n  StyleSheet,\n  ViewPagerAndroid,\n  InteractionManager,\n} = ReactNative;\nconst TimerMixin = require('react-timer-mixin');\n\nconst SceneComponent = require('./SceneComponent');\nconst DefaultTabBar = require('./DefaultTabBar');\nconst ScrollableTabBar = require('./ScrollableTabBar');\n\nconst AnimatedViewPagerAndroid = Platform.OS === 'android' ?\n  Animated.createAnimatedComponent(ViewPagerAndroid) :\n  undefined;\n\nconst ScrollableTabView = React.createClass({\n  mixins: [TimerMixin, ],\n  statics: {\n    DefaultTabBar,\n    ScrollableTabBar,\n  },\n  scrollOnMountCalled: false,\n\n  propTypes: {\n    tabBarPosition: PropTypes.oneOf(['top', 'bottom', 'overlayTop', 'overlayBottom', ]),\n    initialPage: PropTypes.number,\n    page: PropTypes.number,\n    onChangeTab: PropTypes.func,\n    onScroll: PropTypes.func,\n    renderTabBar: PropTypes.any,\n    style: ViewPropTypes.style,\n    contentProps: PropTypes.object,\n    scrollWithoutAnimation: PropTypes.bool,\n    locked: PropTypes.bool,\n    prerenderingSiblingsNumber: PropTypes.number,\n  },\n\n  getDefaultProps() {\n    return {\n      tabBarPosition: 'top',\n      initialPage: 0,\n      page: -1,\n      onChangeTab: () => {},\n      onScroll: () => {},\n      contentProps: {},\n      scrollWithoutAnimation: false,\n      locked: false,\n      prerenderingSiblingsNumber: 0,\n    };\n  },\n\n  getInitialState() {\n    const containerWidth = Dimensions.get('window').width;\n    let scrollValue;\n    let scrollXIOS;\n    let positionAndroid;\n    let offsetAndroid;\n\n    if (Platform.OS === 'ios') {\n      scrollXIOS = new Animated.Value(this.props.initialPage * containerWidth);\n      const containerWidthAnimatedValue = new Animated.Value(containerWidth);\n      // Need to call __makeNative manually to avoid a native animated bug. See\n      // https://github.com/facebook/react-native/pull/14435\n      containerWidthAnimatedValue.__makeNative();\n      scrollValue = Animated.divide(scrollXIOS, containerWidthAnimatedValue);\n\n      const callListeners = this._polyfillAnimatedValue(scrollValue);\n      scrollXIOS.addListener(\n        ({ value, }) => callListeners(value / this.state.containerWidth)\n      );\n    } else {\n      positionAndroid = new Animated.Value(this.props.initialPage);\n      offsetAndroid = new Animated.Value(0);\n      scrollValue = Animated.add(positionAndroid, offsetAndroid);\n\n      const callListeners = this._polyfillAnimatedValue(scrollValue);\n      let positionAndroidValue = this.props.initialPage;\n      let offsetAndroidValue = 0;\n      positionAndroid.addListener(({ value, }) => {\n        positionAndroidValue = value;\n        callListeners(positionAndroidValue + offsetAndroidValue);\n      });\n      offsetAndroid.addListener(({ value, }) => {\n        offsetAndroidValue = value;\n        callListeners(positionAndroidValue + offsetAndroidValue);\n      });\n    }\n\n    return {\n      currentPage: this.props.initialPage,\n      scrollValue,\n      scrollXIOS,\n      positionAndroid,\n      offsetAndroid,\n      containerWidth,\n      sceneKeys: this.newSceneKeys({ currentPage: this.props.initialPage, }),\n    };\n  },\n\n  componentWillReceiveProps(props) {\n    if (props.children !== this.props.children) {\n      this.updateSceneKeys({ page: this.state.currentPage, children: props.children, });\n    }\n\n    if (props.page >= 0 && props.page !== this.state.currentPage) {\n      this.goToPage(props.page);\n    }\n  },\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      this.state.scrollXIOS.removeAllListeners();\n    } else {\n      this.state.positionAndroid.removeAllListeners();\n      this.state.offsetAndroid.removeAllListeners();\n    }\n  },\n\n  goToPage(pageNumber) {\n    if (Platform.OS === 'ios') {\n      const offset = pageNumber * this.state.containerWidth;\n      if (this.scrollView) {\n        this.scrollView.getNode().scrollTo({x: offset, y: 0, animated: !this.props.scrollWithoutAnimation, });\n      }\n    } else {\n      if (this.scrollView) {\n        if (this.props.scrollWithoutAnimation) {\n          this.scrollView.getNode().setPageWithoutAnimation(pageNumber);\n        } else {\n          this.scrollView.getNode().setPage(pageNumber);\n        }\n      }\n    }\n\n    const currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: pageNumber,\n      callback: this._onChangeTab.bind(this, currentPage, pageNumber),\n    });\n  },\n\n  renderTabBar(props) {\n    if (this.props.renderTabBar === false) {\n      return null;\n    } else if (this.props.renderTabBar) {\n      return React.cloneElement(this.props.renderTabBar(props), props);\n    } else {\n      return <DefaultTabBar {...props} />;\n    }\n  },\n\n  updateSceneKeys({ page, children = this.props.children, callback = () => {}, }) {\n    let newKeys = this.newSceneKeys({ previousKeys: this.state.sceneKeys, currentPage: page, children, });\n    this.setState({currentPage: page, sceneKeys: newKeys, }, callback);\n  },\n\n  newSceneKeys({ previousKeys = [], currentPage = 0, children = this.props.children, }) {\n    let newKeys = [];\n    this._children(children).forEach((child, idx) => {\n      let key = this._makeSceneKey(child, idx);\n      if (this._keyExists(previousKeys, key) ||\n        this._shouldRenderSceneKey(idx, currentPage)) {\n        newKeys.push(key);\n      }\n    });\n    return newKeys;\n  },\n\n  // Animated.add and Animated.divide do not currently support listeners so\n  // we have to polyfill it here since a lot of code depends on being able\n  // to add a listener to `scrollValue`. See https://github.com/facebook/react-native/pull/12620.\n  _polyfillAnimatedValue(animatedValue) {\n\n    const listeners = new Set();\n    const addListener = (listener) => {\n      listeners.add(listener);\n    };\n\n    const removeListener = (listener) => {\n      listeners.delete(listener);\n    };\n\n    const removeAllListeners = () => {\n      listeners.clear();\n    };\n\n    animatedValue.addListener = addListener;\n    animatedValue.removeListener = removeListener;\n    animatedValue.removeAllListeners = removeAllListeners;\n\n    return (value) => listeners.forEach(listener => listener({ value, }));\n  },\n\n  _shouldRenderSceneKey(idx, currentPageKey) {\n    let numOfSibling = this.props.prerenderingSiblingsNumber;\n    return (idx < (currentPageKey + numOfSibling + 1) &&\n      idx > (currentPageKey - numOfSibling - 1));\n  },\n\n  _keyExists(sceneKeys, key) {\n    return sceneKeys.find((sceneKey) => key === sceneKey);\n  },\n\n  _makeSceneKey(child, idx) {\n    return child.props.tabLabel + '_' + idx;\n  },\n\n  renderScrollableContent() {\n    if (Platform.OS === 'ios') {\n      const scenes = this._composeScenes();\n      return <Animated.ScrollView\n        horizontal\n        pagingEnabled\n        automaticallyAdjustContentInsets={false}\n        contentOffset={{ x: this.props.initialPage * this.state.containerWidth, }}\n        ref={(scrollView) => { this.scrollView = scrollView; }}\n        onScroll={Animated.event(\n          [{ nativeEvent: { contentOffset: { x: this.state.scrollXIOS, }, }, }, ],\n          { useNativeDriver: true, listener: this._onScroll, }\n        )}\n        onMomentumScrollBegin={this._onMomentumScrollBeginAndEnd}\n        onMomentumScrollEnd={this._onMomentumScrollBeginAndEnd}\n        scrollEventThrottle={16}\n        scrollsToTop={false}\n        showsHorizontalScrollIndicator={false}\n        scrollEnabled={!this.props.locked}\n        directionalLockEnabled\n        alwaysBounceVertical={false}\n        keyboardDismissMode=\"on-drag\"\n        {...this.props.contentProps}\n      >\n          {scenes}\n      </Animated.ScrollView>;\n    } else {\n      const scenes = this._composeScenes();\n      return <AnimatedViewPagerAndroid\n        key={this._children().length}\n        style={styles.scrollableContentAndroid}\n        initialPage={this.props.initialPage}\n        onPageSelected={this._updateSelectedPage}\n        keyboardDismissMode=\"on-drag\"\n        scrollEnabled={!this.props.locked}\n        onPageScroll={Animated.event(\n          [{\n            nativeEvent: {\n              position: this.state.positionAndroid,\n              offset: this.state.offsetAndroid,\n            },\n          }, ],\n          {\n            useNativeDriver: true,\n            listener: this._onScroll,\n          },\n        )}\n        ref={(scrollView) => { this.scrollView = scrollView; }}\n        {...this.props.contentProps}\n      >\n        {scenes}\n      </AnimatedViewPagerAndroid>;\n    }\n  },\n\n  _composeScenes() {\n    return this._children().map((child, idx) => {\n      let key = this._makeSceneKey(child, idx);\n      return <SceneComponent\n        key={child.key}\n        shouldUpdated={this._shouldRenderSceneKey(idx, this.state.currentPage)}\n        style={{width: this.state.containerWidth, }}\n      >\n        {this._keyExists(this.state.sceneKeys, key) ? child : <View tabLabel={child.props.tabLabel}/>}\n      </SceneComponent>;\n    });\n  },\n\n  _onMomentumScrollBeginAndEnd(e) {\n    const offsetX = e.nativeEvent.contentOffset.x;\n    const page = Math.round(offsetX / this.state.containerWidth);\n    if (this.state.currentPage !== page) {\n      this._updateSelectedPage(page);\n    }\n  },\n\n  _updateSelectedPage(nextPage) {\n    let localNextPage = nextPage;\n    if (typeof localNextPage === 'object') {\n      localNextPage = nextPage.nativeEvent.position;\n    }\n\n    const currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: localNextPage,\n      callback: this._onChangeTab.bind(this, currentPage, localNextPage),\n    });\n  },\n\n  _onChangeTab(prevPage, currentPage) {\n    this.props.onChangeTab({\n      i: currentPage,\n      ref: this._children()[currentPage],\n      from: prevPage,\n    });\n  },\n\n  _onScroll(e) {\n    if (Platform.OS === 'ios') {\n      const offsetX = e.nativeEvent.contentOffset.x;\n      if (offsetX === 0 && !this.scrollOnMountCalled) {\n        this.scrollOnMountCalled = true;\n      } else {\n        this.props.onScroll(offsetX / this.state.containerWidth);\n      }\n    } else {\n      const { position, offset, } = e.nativeEvent;\n      this.props.onScroll(position + offset);\n    }\n  },\n\n  _handleLayout(e) {\n    const { width, } = e.nativeEvent.layout;\n\n    if (Math.round(width) !== Math.round(this.state.containerWidth)) {\n      if (Platform.OS === 'ios') {\n        const containerWidthAnimatedValue = new Animated.Value(width);\n        // Need to call __makeNative manually to avoid a native animated bug. See\n        // https://github.com/facebook/react-native/pull/14435\n        containerWidthAnimatedValue.__makeNative();\n        scrollValue = Animated.divide(this.state.scrollXIOS, containerWidthAnimatedValue);\n        this.setState({ containerWidth: width, scrollValue, });\n      } else {\n        this.setState({ containerWidth: width, });\n      }\n      this.requestAnimationFrame(() => {\n        this.goToPage(this.state.currentPage);\n      });\n    }\n  },\n\n  _children(children = this.props.children) {\n    return React.Children.map(children, (child) => child);\n  },\n\n  render() {\n    let overlayTabs = (this.props.tabBarPosition === 'overlayTop' || this.props.tabBarPosition === 'overlayBottom');\n    let tabBarProps = {\n      goToPage: this.goToPage,\n      tabs: this._children().map((child) => child.props.tabLabel),\n      activeTab: this.state.currentPage,\n      scrollValue: this.state.scrollValue,\n      containerWidth: this.state.containerWidth,\n    };\n\n    if (this.props.tabBarBackgroundColor) {\n      tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;\n    }\n    if (this.props.tabBarActiveTextColor) {\n      tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;\n    }\n    if (this.props.tabBarInactiveTextColor) {\n      tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;\n    }\n    if (this.props.tabBarTextStyle) {\n      tabBarProps.textStyle = this.props.tabBarTextStyle;\n    }\n    if (this.props.tabBarUnderlineStyle) {\n      tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;\n    }\n    if (overlayTabs) {\n      tabBarProps.style = {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        [this.props.tabBarPosition === 'overlayTop' ? 'top' : 'bottom']: 0,\n      };\n    }\n\n    return <View style={[styles.container, this.props.style, ]} onLayout={this._handleLayout}>\n      {this.props.tabBarPosition === 'top' && this.renderTabBar(tabBarProps)}\n      {this.renderScrollableContent()}\n      {(this.props.tabBarPosition === 'bottom' || overlayTabs) && this.renderTabBar(tabBarProps)}\n    </View>;\n  },\n});\n\nmodule.exports = ScrollableTabView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scrollableContentAndroid: {\n    flex: 1,\n  },\n});\n"]}]