["aabc29d5f425992eb0d57b32ca2439aacbfecf4d","188cb09e7d2d626f2b92d9f1e71318b01cb1b185",["./assert","./isTypeName","./String","./Function","./isBoolean","./isObject","./isNil","./create","./getTypeName","./dict","./getDefaultInterfaceName","./isIdentity","./is","./extend","./assign"],[21,59,97,133,172,211,246,279,318,355,404,459,493,523,557],{"version":3,"sources":["/var/www/geruapp/node_modules/tcomb/lib/interface.js"],"names":["assert","require","isTypeName","String","Function","isBoolean","isObject","isNil","create","getTypeName","dict","getDefaultInterfaceName","isIdentity","is","extend","assign","extendInterface","mixins","name","inter","getOptions","options","hasOwnProperty","strict","props","process","env","NODE_ENV","stringify","displayName","identity","Object","keys","map","prop","every","Interface","value","path","join","k","idempotent","ret","expected","actual","instance","concat","freeze","meta","kind","x","update","patch","xs","getDefaultName","module","exports"],"mappings":"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","sourcesContent":["var assert = require('./assert');\nvar isTypeName = require('./isTypeName');\nvar String = require('./String');\nvar Function = require('./Function');\nvar isBoolean = require('./isBoolean');\nvar isObject = require('./isObject');\nvar isNil = require('./isNil');\nvar create = require('./create');\nvar getTypeName = require('./getTypeName');\nvar dict = require('./dict');\nvar getDefaultInterfaceName = require('./getDefaultInterfaceName');\nvar isIdentity = require('./isIdentity');\nvar is = require('./is');\nvar extend = require('./extend');\nvar assign = require('./assign');\n\nfunction extendInterface(mixins, name) {\n  return extend(inter, mixins, name);\n}\n\nfunction getOptions(options) {\n  if (!isObject(options)) {\n    options = isNil(options) ? {} : { name: options };\n  }\n  if (!options.hasOwnProperty('strict')) {\n    options.strict = inter.strict;\n  }\n  return options;\n}\n\nfunction inter(props, options) {\n\n  options = getOptions(options);\n  var name = options.name;\n  var strict = options.strict;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(dict(String, Function).is(props), function () { return 'Invalid argument props ' + assert.stringify(props) + ' supplied to interface(props, [options]) combinator (expected a dictionary String -> Type)'; });\n    assert(isTypeName(name), function () { return 'Invalid argument name ' + assert.stringify(name) + ' supplied to interface(props, [options]) combinator (expected a string)'; });\n    assert(isBoolean(strict), function () { return 'Invalid argument strict ' + assert.stringify(strict) + ' supplied to struct(props, [options]) combinator (expected a boolean)'; });\n  }\n\n  var displayName = name || getDefaultInterfaceName(props);\n  var identity = Object.keys(props).map(function (prop) { return props[prop]; }).every(isIdentity);\n\n  function Interface(value, path) {\n\n    if (process.env.NODE_ENV === 'production') {\n      if (identity) {\n        return value; // just trust the input if elements must not be hydrated\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      path = path || [displayName];\n      assert(!isNil(value), function () { return 'Invalid value ' + value + ' supplied to ' + path.join('/'); });\n      // strictness\n      if (strict) {\n        for (var k in value) {\n          assert(props.hasOwnProperty(k), function () { return 'Invalid additional prop \"' + k + '\" supplied to ' + path.join('/'); });\n        }\n      }\n    }\n\n    var idempotent = true;\n    var ret = identity ? {} : assign({}, value);\n    for (var prop in props) {\n      var expected = props[prop];\n      var actual = value[prop];\n      var instance = create(expected, actual, ( process.env.NODE_ENV !== 'production' ? path.concat(prop + ': ' + getTypeName(expected)) : null ));\n      idempotent = idempotent && ( actual === instance );\n      ret[prop] = instance;\n    }\n\n    if (idempotent) { // implements idempotency\n      ret = value;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      Object.freeze(ret);\n    }\n\n    return ret;\n\n  }\n\n  Interface.meta = {\n    kind: 'interface',\n    props: props,\n    name: name,\n    identity: identity,\n    strict: strict\n  };\n\n  Interface.displayName = displayName;\n\n  Interface.is = function (x) {\n    if (isNil(x)) {\n      return false;\n    }\n    if (strict) {\n      for (var k in x) {\n        if (!props.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n    }\n    for (var prop in props) {\n      if (!is(x[prop], props[prop])) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  Interface.update = function (instance, patch) {\n    return Interface(assert.update(instance, patch));\n  };\n\n  Interface.extend = function (xs, name) {\n    return extendInterface([Interface].concat(xs), name);\n  };\n\n  return Interface;\n}\n\ninter.strict = false;\ninter.getOptions = getOptions;\ninter.getDefaultName = getDefaultInterfaceName;\ninter.extend = extendInterface;\nmodule.exports = inter;\n"]}]