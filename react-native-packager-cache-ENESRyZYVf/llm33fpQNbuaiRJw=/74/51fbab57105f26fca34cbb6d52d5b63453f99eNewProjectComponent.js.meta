["ab6d803dfa0050ae42684caaacb0804349b118da","d2dd3eb595b48abe6c4f6a0024508a05c0a65b35",["react","react-native","react-redux","redux","../ProjectActions","../../styles/variables","react-native-navbar","../../components/NavBarIconText","react-native-modalbox","react-native-router-flux","../../components/ModalPicker","../../components/image-slider/ImagesSlider","../../components/tab-image-chooser/TabImagesContainer","../../components/ModalDropdown","./ProjectForm"],[87,184,228,266,307,434,562,700,849,1000,1057,1190,1345,1518,1656],{"version":3,"sources":["/var/www/geruapp/src/project/components/NewProjectComponent.js"],"names":["newProjectActions","mapDispatchToProps","dispatch","actions","NewProjectComponent","createClass","projectDetail","NewProjectDetail","imageUploaded","data","props","newProjectImageUploaded","imageRemoved","newProjectImageRemoved","suggestedClicked","item","suggestedImageChoosed","url","ratio","getSuggestedShowcases","pageIndex","render","project","styles","container","onBackAction","getIn","bind","create","flex","padding","inputs","marginTop","marginBottom","marginLeft","marginRight","dropdown","flexDirection","justifyContent","alignItems","dropdownSkill","flexWrap","selectedOption","fontFamily","durationBundleContainer","selectedBudget","color","BRAND_SECONDARY","borderRadius","borderWidth","borderColor","backgroundColor","otherBudget","dropdownIcon"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Platform,\n  Alert,\n  TextInput,\n  ScrollView\n} from 'react-native'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as newProjectActions from '../ProjectActions'\nimport variables from '../../styles/variables'\n\nimport NavigationBar from 'react-native-navbar'\nimport NavBarIconText from '../../components/NavBarIconText'\n\nimport Modal from 'react-native-modalbox'\nimport { Actions } from 'react-native-router-flux'\nimport ModalPicker from '../../components/ModalPicker'\nimport ImagesSlider from '../../components/image-slider/ImagesSlider'\n\nimport TabImagesContainer from '../../components/tab-image-chooser/TabImagesContainer'\n\n\nimport ModalDropdown from '../../components/ModalDropdown'\nimport ProjectForm from './ProjectForm'\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n      actions: bindActionCreators(newProjectActions, dispatch),\n  }\n}\n\nconst NewProjectComponent = React.createClass({\n \n  projectDetail() {\n      Actions.NewProjectDetail()\n  },\n\n  imageUploaded(data) {\n      this.props.actions.newProjectImageUploaded(data)\n  },\n\n  imageRemoved(data) {\n      this.props.actions.newProjectImageRemoved(data)\n  },\n\n  suggestedClicked(item) {\n      this.props.actions.suggestedImageChoosed({\n          url: 'http://ur-undrakh.com/files/images/20170106/EM/M-240.JPG',\n          ratio: 1.62,\n      })\n  },\n\n  getSuggestedShowcases(pageIndex) {\n      this.props.actions.getSuggestedShowcases(pageIndex)\n  },\n\n  render() {\n    let { \n      project \n    } = this.props\n\n    return (\n      <View style={styles.container}>\n            <NavigationBar\n                leftButton={\n                      <NavBarIconText icon=\"ios-arrow-back-outline\"\n                              size={30}\n                              color=\"#b5b5b5\"\n                              text=\"буцах\"\n                              position=\"back\"\n                              onPress={this.props.onBackAction}\n                      />\n                }\n                rightButton={\n                      <NavBarIconText icon=\"ios-arrow-forward-outline\"\n                              size={30}\n                              color=\"#b5b5b5\"\n                              text=\"дараах\"\n                              onPress={() => this.projectDetail()}\n                      />\n                }\n            />\n\n            <ImagesSlider images={ project.getIn(['files', 'selectedFiles'])} />\n\n            <TabImagesContainer tabs={ project.getIn(['files', 'imagesTabs']) } \n                                onSuggestedClicked={this.suggestedClicked.bind(this)}\n                                onGetSuggestedShowcases={this.getSuggestedShowcases.bind(this)} \n            />\n      </View>\n    )\n  }\n\n})\n\nvar styles = StyleSheet.create({\n  container : {\n    flex: 1,\n    padding: 10,\n  },\n\n  inputs: {\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 10,\n    marginRight: 10,\n  },\n\n  dropdown: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    marginBottom: 10,\n    marginLeft: 10,\n    marginRight: 10,\n  },\n\n  dropdownSkill: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    marginBottom: 10,\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  \n  selectedOption: {\n    marginLeft: 5,\n    fontFamily: 'Lato-Black'\n  },\n\n  durationBundleContainer: {\n    flexDirection: 'row',\n  },\n\n  selectedBudget: {\n    color: variables.BRAND_SECONDARY,\n    marginTop: 5,\n    marginLeft: 5,\n    padding: 5,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: variables.BRAND_SECONDARY,\n    backgroundColor: '#fff',\n    fontFamily: 'Lato-Regular'\n  },\n\n  otherBudget: {\n    marginLeft: 5,\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: '#edeff0',\n    color: '#b5b5b5',\n    fontFamily: 'Lato-Bold'\n  },\n\n  dropdownIcon: {\n    marginLeft: 10,\n  }\n})\n\nexport default connect(null, mapDispatchToProps)(NewProjectComponent)"]}]