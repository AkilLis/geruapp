["e0287910ef94bc9410ad0e41704b41dce98d9081","f8e505ee7bbbee72c3900265b2b4fd4b52c9b6bd",["./Util","./Scene","./ActionConst"],[156,189,288],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-router-flux/src/Actions.js"],"names":["ActionConst","ActionMap","jump","JUMP","push","PUSH","replace","REPLACE","back","BACK","BackAction","BACK_ACTION","popAndReplace","POP_AND_REPLACE","popTo","POP_TO","refresh","REFRESH","reset","RESET","focus","FOCUS","pushOrPop","PUSH_OR_POP","androidBack","ANDROID_BACK","filterParam","data","toString","proto","constructor","name","reservedKeys","Object","keys","getInheritProps","props","key","style","type","component","tabs","sceneKey","parent","children","parentProps","passProps","Actions","callback","create","bind","iterate","pop","root","refsParam","wrapBy","refs","indexOf","join","staticProps","inheritProps","componentProps","forEach","prop","componentClass","prototype","render","res","list","normalized","Array","item","it","condition","el","onPress","baseKey","subStateParent","subStates","filter","length","map","c","innerKey","inner","index","base","console","log","scene","x","ActionsTest"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Pavel Aksonov\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { assert } from './Util';\nimport Scene from './Scene';\nimport * as ActionConst from './ActionConst';\n\nexport const ActionMap = {\n  jump: ActionConst.JUMP,\n  push: ActionConst.PUSH,\n  replace: ActionConst.REPLACE,\n  back: ActionConst.BACK,\n  BackAction: ActionConst.BACK_ACTION,\n  popAndReplace: ActionConst.POP_AND_REPLACE,\n  popTo: ActionConst.POP_TO,\n  refresh: ActionConst.REFRESH,\n  reset: ActionConst.RESET,\n  focus: ActionConst.FOCUS,\n  pushOrPop: ActionConst.PUSH_OR_POP,\n  androidBack: ActionConst.ANDROID_BACK,\n  [ActionConst.JUMP]: ActionConst.JUMP,\n  [ActionConst.PUSH]: ActionConst.PUSH,\n  [ActionConst.REPLACE]: ActionConst.REPLACE,\n  [ActionConst.BACK]: ActionConst.BACK,\n  [ActionConst.BACK_ACTION]: ActionConst.BACK_ACTION,\n  [ActionConst.POP_AND_REPLACE]: ActionConst.POP_AND_REPLACE,\n  [ActionConst.POP_TO]: ActionConst.POP_TO,\n  [ActionConst.REFRESH]: ActionConst.REFRESH,\n  [ActionConst.RESET]: ActionConst.RESET,\n  [ActionConst.FOCUS]: ActionConst.FOCUS,\n  [ActionConst.PUSH_OR_POP]: ActionConst.PUSH_OR_POP,\n  [ActionConst.ANDROID_BACK]: ActionConst.ANDROID_BACK,\n};\n\nfunction filterParam(data) {\n  if (data.toString() !== '[object Object]') {\n    return { data };\n  }\n  const proto = (data || {}).constructor.name;\n  // avoid passing React Native parameters\n  if (!data || (proto !== 'Object')) {\n    return {};\n  }\n  return data;\n}\n\nconst reservedKeys = [\n  'create',\n  'callback',\n  'iterate',\n  'current',\n  ...Object.keys(ActionMap),\n];\n\nfunction getInheritProps(props) {\n  // eslint-disable-next-line no-unused-vars\n  const { key, style, type, component, tabs, sceneKey, parent, children, ...parentProps } = props;\n  return parentProps.passProps ? parentProps : {};\n}\n\nclass Actions {\n  constructor() {\n    this.callback = null;\n    this.create = this.create.bind(this);\n    this.iterate = this.iterate.bind(this);\n    this.pop = this.pop.bind(this);\n    this.refresh = this.refresh.bind(this);\n    this.focus = this.focus.bind(this);\n  }\n\n  iterate(root: Scene, parentProps = {}, refsParam = {}, wrapBy) {\n    const refs = refsParam;\n    assert(root.props, 'props should be defined for stack');\n    const key = root.key;\n    assert(key, 'unique key should be defined ');\n    assert(\n      reservedKeys.indexOf(key) === -1,\n      `'${key}' is not allowed as key name. Reserved keys: [${reservedKeys.join(', ')}]`,\n    );\n    const { children, component, ...staticProps } = root.props;\n    let type = root.props.type || (parentProps.tabs ? ActionConst.JUMP : ActionConst.PUSH);\n    if (type === 'switch') {\n      type = ActionConst.JUMP;\n    }\n    const inheritProps = getInheritProps(parentProps);\n    const componentProps = component ? { component: wrapBy(component) } : {};\n    // wrap other components\n    if (wrapBy) {\n      Object.keys(staticProps).forEach((prop) => {\n        const componentClass = staticProps[prop];\n        if (componentClass && componentClass.prototype && componentClass.prototype.render) {\n          componentProps[prop] = wrapBy(componentClass);\n          delete staticProps[prop];\n        }\n      });\n    }\n    const res = {\n      key,\n      name: key,\n      sceneKey: key,\n      parent: parentProps.key,\n      type,\n      ...inheritProps,\n      ...staticProps,\n      ...componentProps,\n    };\n    let list = children || [];\n    const normalized = [];\n    if (!(list instanceof Array)) {\n      list = [list];\n    }\n    list.forEach((item) => {\n      if (item) {\n        if (item instanceof Array) {\n          item.forEach((it) => {\n            normalized.push(it);\n          });\n        } else {\n          normalized.push(item);\n        }\n      }\n    });\n    list = normalized; // normalize the list of scenes\n\n    const condition = el => (!el.props.component && !el.props.children && !el.props.onPress &&\n    (!el.props.type || ActionMap[el.props.type] === ActionConst.REFRESH));\n    // determine sub-states\n    let baseKey = root.key;\n    let subStateParent = parentProps.key;\n    const subStates = list.filter(condition);\n    list = list.filter(el => !condition(el));\n    if (list.length) {\n      res.children = list.map(c => this.iterate(c, res, refs, wrapBy).key);\n    } else {\n      if (!staticProps.onPress) {\n        assert(component, `component property is not set for key=${key}`);\n      }\n      // wrap scene if parent is \"tabs\"\n      if (parentProps.tabs) {\n        const innerKey = `${res.key}_`;\n        baseKey = innerKey;\n        subStateParent = res.key;\n        const inner = { ...res,\n          name: key,\n          key: innerKey,\n          sceneKey: innerKey,\n          type: ActionConst.PUSH,\n          parent: res.key };\n        refs[innerKey] = inner;\n        res.children = [innerKey];\n        delete res.component;\n      }\n      res.index = 0;\n    }\n    // process substates\n    for (const el of subStates) {\n      refs[el.key] = { key: el.key,\n        name: el.key,\n        ...el.props,\n        type: ActionConst.REFRESH,\n        base: baseKey,\n        parent: subStateParent };\n      if (this[el.key]) {\n        console.log(`Key ${el.key} is already defined!`);\n      }\n      this[el.key] =\n        (props = {}) => {\n          assert(this.callback, 'Actions.callback is not defined!');\n          this.callback({ key: el.key, type: ActionConst.REFRESH, ...filterParam(props) });\n        };\n    }\n    if (this[key]) {\n      console.log(`Key ${key} is already defined!`);\n    }\n    this[key] =\n      (props = {}) => {\n        assert(this.callback, 'Actions.callback is not defined!');\n        this.callback({ key, type, ...filterParam(props) });\n      };\n    refs[res.key] = res;\n\n    return res;\n  }\n\n  popTo(props = {}) {\n    return this.callback({ ...filterParam(props), type: ActionConst.POP_TO });\n  }\n\n  pop(props = {}) {\n    return this.callback({ ...filterParam(props), type: ActionConst.BACK_ACTION });\n  }\n\n  jump(props = {}) {\n    return this.callback({ ...filterParam(props), type: ActionConst.JUMP });\n  }\n\n  refresh(props = {}) {\n    return this.callback({ ...filterParam(props), type: ActionConst.REFRESH });\n  }\n\n  focus(props = {}) {\n    return this.callback({ ...filterParam(props), type: ActionConst.FOCUS });\n  }\n\n  androidBack(props = {}) {\n    return this.callback({ ...filterParam(props), type: ActionConst.ANDROID_BACK });\n  }\n\n  create(scene:Scene, wrapBy = x => x) {\n    assert(scene, 'root scene should be defined');\n    const refs = {};\n    this.iterate(scene, {}, refs, wrapBy);\n    return refs;\n  }\n}\n\nexport { Actions as ActionsTest };\nexport default new Actions();\n"]}]