["8f7d4fa31ea28aa432188e5208f9e9f2c779b1f5","96851090c5a2c59b77d93b8253ed5747f8ee275e",["react","react-native","./ImageItem"],[87,184,227],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-camera-roll-picker/index.js"],"names":["CameraRollPicker","props","state","images","selected","lastCursor","loadingMore","noMore","dataSource","DataSource","rowHasChanged","r1","r2","fetch","nextProps","setState","_fetch","groupTypes","assetType","fetchParams","first","OS","after","getPhotos","then","data","_appendImages","e","console","log","assets","edges","newState","page_info","has_next_page","length","end_cursor","concat","cloneWithRows","_nEveryRow","imagesPerRow","scrollRenderAheadDistance","initialListSize","pageSize","removeClippedSubviews","imageMargin","backgroundColor","emptyText","emptyTextStyle","listViewOrEmptyText","getRowCount","flex","_renderFooterSpinner","bind","_onEndReached","_renderRow","rowData","textAlign","styles","wrapper","padding","paddingRight","item","selectedMarker","containerWidth","uri","node","image","isSelected","_arrayObjectIndexOf","_selectImage","items","map","_renderImage","row","spinner","maximum","callback","index","splice","push","n","result","temp","i","array","property","value","o","indexOf","create","flexDirection","marker","position","top","propTypes","PropTypes","number","bool","oneOf","func","element","string","style","defaultProps","selectedImages","currentImage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n  CameraRoll,\n  Platform,\n  StyleSheet,\n  View,\n  Text,\n  ListView,\n  ActivityIndicator,\n} from 'react-native';\nimport ImageItem from './ImageItem';\n\nclass CameraRollPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      images: [],\n      selected: this.props.selected,\n      lastCursor: null,\n      loadingMore: false,\n      noMore: false,\n      dataSource: new ListView.DataSource({rowHasChanged: (r1, r2) => r1 !== r2}),\n    };\n  }\n\n  componentWillMount() {\n    this.fetch();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      selected: nextProps.selected,\n    });\n  }\n\n  fetch() {\n    if (!this.state.loadingMore) {\n      this.setState({loadingMore: true}, () => { this._fetch(); });\n    }\n  }\n\n  _fetch() {\n    var {groupTypes, assetType} = this.props;\n\n    var fetchParams = {\n      first: 1000,\n      groupTypes: groupTypes,\n      assetType: assetType,\n    };\n\n    if (Platform.OS === \"android\") {\n      // not supported in android\n      delete fetchParams.groupTypes;\n    }\n\n    if (this.state.lastCursor) {\n      fetchParams.after = this.state.lastCursor;\n    }\n\n    CameraRoll.getPhotos(fetchParams)\n      .then((data) => this._appendImages(data), (e) => console.log(e));\n  }\n\n  _appendImages(data) {\n    var assets = data.edges;\n    var newState = {\n      loadingMore: false,\n    };\n\n    if (!data.page_info.has_next_page) {\n      newState.noMore = true;\n    }\n\n    if (assets.length > 0) {\n      newState.lastCursor = data.page_info.end_cursor;\n      newState.images = this.state.images.concat(assets);\n      newState.dataSource = this.state.dataSource.cloneWithRows(\n        this._nEveryRow(newState.images, this.props.imagesPerRow)\n      );\n    }\n\n    this.setState(newState);\n  }\n\n  render() {\n    var {dataSource} = this.state;\n    var {\n      scrollRenderAheadDistance,\n      initialListSize,\n      pageSize,\n      removeClippedSubviews,\n      imageMargin,\n      backgroundColor,\n      emptyText,\n      emptyTextStyle,\n    } = this.props;\n\n    var listViewOrEmptyText = dataSource.getRowCount() > 0 ? (\n      <ListView\n        style={{flex: 1,}}\n        scrollRenderAheadDistance={scrollRenderAheadDistance}\n        initialListSize={initialListSize}\n        pageSize={pageSize}\n        removeClippedSubviews={removeClippedSubviews}\n        renderFooter={this._renderFooterSpinner.bind(this)}\n        onEndReached={this._onEndReached.bind(this)}\n        dataSource={dataSource}\n        renderRow={rowData => this._renderRow(rowData)} />\n    ) : (\n      <Text style={[{textAlign: 'center'}, emptyTextStyle]}>{emptyText}</Text>\n    );\n\n    return (\n      <View\n        style={[styles.wrapper, {padding: imageMargin, paddingRight: 0, backgroundColor: backgroundColor},]}>\n        {listViewOrEmptyText}\n      </View>\n    );\n  }\n\n  _renderImage(item) {\n    var {selected} = this.state;\n    var {\n      imageMargin,\n      selectedMarker,\n      imagesPerRow,\n      containerWidth\n    } = this.props;\n\n    var uri = item.node.image.uri;\n    var isSelected = (this._arrayObjectIndexOf(selected, 'uri', uri) >= 0) ? true : false;\n\n    return (\n      <ImageItem\n        key={uri}\n        item={item}\n        selected={isSelected}\n        imageMargin={imageMargin}\n        selectedMarker={selectedMarker}\n        imagesPerRow={imagesPerRow}\n        containerWidth={containerWidth}\n        onClick={this._selectImage.bind(this)}\n      />\n    );\n  }\n\n  _renderRow(rowData) {\n    var items = rowData.map((item) => {\n      if (item === null) {\n        return null;\n      }\n      return this._renderImage(item);\n    });\n\n    return (\n      <View style={styles.row}>\n        {items}\n      </View>\n    );\n  }\n\n  _renderFooterSpinner() {\n    if (!this.state.noMore) {\n      return <ActivityIndicator style={styles.spinner} />;\n    }\n    return null;\n  }\n\n  _onEndReached() {\n    if (!this.state.noMore) {\n      this.fetch();\n    }\n  }\n\n  _selectImage(image) {\n    var {maximum, imagesPerRow, callback} = this.props;\n\n    var selected = this.state.selected,\n        index = this._arrayObjectIndexOf(selected, 'uri', image.uri);\n\n    if (index >= 0) {\n      selected.splice(index, 1);\n    } else {\n      if (selected.length < maximum) {\n        selected.push(image);\n      }\n    }\n\n    this.setState({\n      selected: selected,\n      dataSource: this.state.dataSource.cloneWithRows(\n        this._nEveryRow(this.state.images, imagesPerRow)\n      ),\n    });\n\n    callback(this.state.selected, image);\n  }\n\n  _nEveryRow(data, n) {\n    var result = [],\n        temp = [];\n\n    for (var i = 0; i < data.length; ++i) {\n      if (i > 0 && i % n === 0) {\n        result.push(temp);\n        temp = [];\n      }\n      temp.push(data[i]);\n    }\n\n    if (temp.length > 0) {\n      while (temp.length !== n) {\n        temp.push(null);\n      }\n      result.push(temp);\n    }\n\n    return result;\n  }\n\n  _arrayObjectIndexOf(array, property, value) {\n    return array.map((o) => { return o[property]; }).indexOf(value);\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  wrapper:{\n    flex: 1,\n  },\n  row:{\n    flexDirection: 'row',\n    flex: 1,\n  },\n  marker: {\n    position: 'absolute',\n    top: 5,\n    backgroundColor: 'transparent',\n  },\n})\n\nCameraRollPicker.propTypes = {\n  scrollRenderAheadDistance: React.PropTypes.number,\n  initialListSize: React.PropTypes.number,\n  pageSize: React.PropTypes.number,\n  removeClippedSubviews: React.PropTypes.bool,\n  groupTypes: React.PropTypes.oneOf([\n    'Album',\n    'All',\n    'Event',\n    'Faces',\n    'Library',\n    'PhotoStream',\n    'SavedPhotos',\n  ]),\n  maximum: React.PropTypes.number,\n  assetType: React.PropTypes.oneOf([\n    'Photos',\n    'Videos',\n    'All',\n  ]),\n  imagesPerRow: React.PropTypes.number,\n  imageMargin: React.PropTypes.number,\n  containerWidth: React.PropTypes.number,\n  callback: React.PropTypes.func,\n  selected: React.PropTypes.array,\n  selectedMarker: React.PropTypes.element,\n  backgroundColor: React.PropTypes.string,\n  emptyText: React.PropTypes.string,\n  emptyTextStyle: Text.propTypes.style,\n}\n\nCameraRollPicker.defaultProps = {\n  scrollRenderAheadDistance: 500,\n  initialListSize: 1,\n  pageSize: 3,\n  removeClippedSubviews: true,\n  groupTypes: 'SavedPhotos',\n  maximum: 15,\n  imagesPerRow: 3,\n  imageMargin: 5,\n  assetType: 'Photos',\n  backgroundColor: 'white',\n  selected: [],\n  callback: function(selectedImages, currentImage) {\n    console.log(currentImage);\n    console.log(selectedImages);\n  },\n  emptyText: 'No photos.',\n}\n\nexport default CameraRollPicker;\n"]}]