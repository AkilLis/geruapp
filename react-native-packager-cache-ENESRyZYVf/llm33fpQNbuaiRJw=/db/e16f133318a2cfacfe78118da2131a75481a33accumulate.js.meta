["3cce7514f0826ee14675536e1898e3f2d5131f0d","0aaf0d93a45f1f3c3d646ad61eec9cce3445ffda",["fbjs/lib/invariant"],[41],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/utils/accumulate.js"],"names":["invariant","require","accumulate","current","next","Array","isArray","concat","module","exports"],"mappings":";;AAYA;;AAEA,IAAIA,YAAYC,QAAQ,oBAAR,CAAhB;;AASA,SAASC,UAAT,CACEC,OADF,EAEEC,IAFF,EAGgB;AACdJ,YACEI,QAAQ,IADV,EAEE,sEAFF;;AAKA,MAAID,WAAW,IAAf,EAAqB;AACnB,WAAOC,IAAP;AACD;;AAID,MAAIC,MAAMC,OAAN,CAAcH,OAAd,CAAJ,EAA4B;AAC1B,WAAOA,QAAQI,MAAR,CAAeH,IAAf,CAAP;AACD;;AAED,MAAIC,MAAMC,OAAN,CAAcF,IAAd,CAAJ,EAAyB;AACvB,WAAO,CAACD,OAAD,EAAUI,MAAV,CAAiBH,IAAjB,CAAP;AACD;;AAED,SAAO,CAACD,OAAD,EAAUC,IAAV,CAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBP,UAAjB","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule accumulate\n * @flow\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Accumulates items that must not be null or undefined.\n *\n * This is used to conserve memory by avoiding array allocations.\n *\n * @return {*|array<*>} An accumulation of items.\n */\nfunction accumulate<T>(\n  current: ?(T | Array<T>),\n  next: T | Array<T>,\n): T | Array<T> {\n  invariant(\n    next != null,\n    'accumulate(...): Accumulated items must be not be null or undefined.',\n  );\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    return current.concat(next);\n  }\n\n  if (Array.isArray(next)) {\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulate;\n"]}]