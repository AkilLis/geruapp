["77e0105d159b9869e91eef2b98d9bf70cbe53e2d","609651b99cdc568d55b2fe5176f87a971cf79e83",["react-native","./NavigationContainer","./NavigationPropTypes","./NavigationScenesReducer","react","prop-types"],[39,99,159,223,273,308,355,402],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-experimental-navigation/NavigationAnimatedView.js"],"names":["Animated","require","NavigationContainer","NavigationPropTypes","NavigationScenesReducer","React","StyleSheet","View","PropTypes","applyDefaultAnimation","position","navigationState","spring","bounciness","toValue","index","start","NavigationAnimatedView","props","context","layout","height","Value","initHeight","initWidth","isMeasured","width","state","scenes","_onLayout","bind","_onProgressChange","_positionListener","addListener","nextProps","setState","lastProps","applyAnimation","removeListener","data","delta","Math","abs","value","Number","EPSILON","filter","scene","isStale","length","overlay","_renderOverlay","_renderScenes","style","styles","map","_renderScene","onNavigate","renderScene","renderOverlay","event","nativeEvent","setValue","Component","propTypes","func","isRequired","defaultProps","create","flex","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule NavigationAnimatedView\n * @flow\n */\n'use strict';\n\nconst Animated = require('react-native').Animated;\nconst NavigationContainer = require('./NavigationContainer');\nconst NavigationPropTypes = require('./NavigationPropTypes');\nconst NavigationScenesReducer = require('./NavigationScenesReducer');\nconst React = require('react');\nconst StyleSheet = require('react-native').StyleSheet;\nconst View = require('react-native').View;\n\nimport type {\n  NavigationActionCaller,\n  NavigationAnimatedValue,\n  NavigationAnimationSetter,\n  NavigationLayout,\n  NavigationParentState,\n  NavigationScene,\n  NavigationSceneRenderer,\n} from 'NavigationTypeDefinition';\n\ntype Props = {\n  applyAnimation: NavigationAnimationSetter,\n  navigationState: NavigationParentState,\n  onNavigate: NavigationActionCaller,\n  renderOverlay: ?NavigationSceneRenderer,\n  renderScene: NavigationSceneRenderer,\n  style: any,\n};\n\ntype State = {\n  layout: NavigationLayout,\n  position: NavigationAnimatedValue,\n  scenes: Array<NavigationScene>,\n};\n\nconst PropTypes = require('prop-types');\n\nfunction applyDefaultAnimation(\n  position: NavigationAnimatedValue,\n  navigationState: NavigationParentState,\n): void {\n  Animated.spring(\n    position,\n    {\n      bounciness: 0,\n      toValue: navigationState.index,\n    }\n  ).start();\n}\n\nclass NavigationAnimatedView\n  extends React.Component<any, Props, State> {\n\n  _onLayout: (event: any) => void;\n  _onProgressChange: (data: {value: number}) => void;\n  _positionListener: any;\n\n  props: Props;\n  state: State;\n\n  static propTypes = {\n    applyAnimation: PropTypes.func,\n    navigationState: NavigationPropTypes.navigationState.isRequired,\n    onNavigate: PropTypes.func.isRequired,\n    renderOverlay: PropTypes.func,\n    renderScene: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    applyAnimation: applyDefaultAnimation,\n  };\n\n  constructor(props: Props, context: any) {\n    super(props, context);\n\n    // The initial layout isn't measured. Measured layout will be only available\n    // when the component is mounted.\n    const layout = {\n      height: new Animated.Value(0),\n      initHeight: 0,\n      initWidth: 0,\n      isMeasured: false,\n      width: new Animated.Value(0),\n    };\n\n    this.state = {\n      layout,\n      position: new Animated.Value(this.props.navigationState.index),\n      scenes: NavigationScenesReducer([], this.props.navigationState),\n    };\n  }\n\n  componentWillMount(): void {\n    this._onLayout = this._onLayout.bind(this);\n    this._onProgressChange = this._onProgressChange.bind(this);\n  }\n\n  componentDidMount(): void {\n    this._positionListener =\n      this.state.position.addListener(this._onProgressChange);\n  }\n\n  componentWillReceiveProps(nextProps: Props): void {\n    if (nextProps.navigationState !== this.props.navigationState) {\n      this.setState({\n        scenes: NavigationScenesReducer(\n          this.state.scenes,\n          nextProps.navigationState,\n          this.props.navigationState\n        ),\n      });\n    }\n  }\n\n  componentDidUpdate(lastProps: Props): void {\n    if (lastProps.navigationState.index !== this.props.navigationState.index) {\n      this.props.applyAnimation(\n        this.state.position,\n        this.props.navigationState,\n        lastProps.navigationState\n      );\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.state.position.removeListener(this._positionListener);\n  }\n\n  _onProgressChange(data: Object): void {\n    const delta = Math.abs(data.value - this.props.navigationState.index);\n    if (delta > Number.EPSILON) {\n      return;\n    }\n\n    const scenes = this.state.scenes.filter(scene => {\n      return !scene.isStale;\n    });\n\n    if (scenes.length !== this.state.scenes.length) {\n      this.setState({ scenes });\n    }\n  }\n\n  render(): ReactElement {\n    const overlay = this._renderOverlay();\n    const scenes = this._renderScenes();\n    return (\n      <View\n        onLayout={this._onLayout}\n        style={this.props.style}>\n        <View style={styles.scenes} key=\"scenes\">\n          {scenes}\n        </View>\n        {overlay}\n      </View>\n    );\n  }\n\n  _renderScenes(): Array<?ReactElement> {\n    return this.state.scenes.map(this._renderScene, this);\n  }\n\n  _renderScene(scene: NavigationScene): ?ReactElement {\n    const {\n      navigationState,\n      onNavigate,\n      renderScene,\n    } = this.props;\n\n    const {\n      position,\n      scenes,\n    } = this.state;\n\n    return renderScene({\n      layout: this.state.layout,\n      navigationState,\n      onNavigate,\n      position,\n      scene,\n      scenes,\n    });\n  }\n\n  _renderOverlay(): ?ReactElement {\n    if (this.props.renderOverlay) {\n      const {\n        navigationState,\n        onNavigate,\n        renderOverlay,\n      } = this.props;\n\n      const {\n        position,\n        scenes,\n      } = this.state;\n\n      return renderOverlay({\n        layout: this.state.layout,\n        navigationState,\n        onNavigate,\n        position,\n        scene: scenes[navigationState.index],\n        scenes,\n      });\n    }\n    return null;\n  }\n\n  _onLayout(event: any): void {\n    const {height, width} = event.nativeEvent.layout;\n\n    const layout = {\n      ...this.state.layout,\n      initHeight: height,\n      initWidth: width,\n      isMeasured: true,\n    };\n\n    layout.height.setValue(height);\n    layout.width.setValue(width);\n\n    this.setState({ layout });\n  }\n}\n\nconst styles = StyleSheet.create({\n  scenes: {\n    flex: 1,\n  },\n});\n\nNavigationAnimatedView = NavigationContainer.create(NavigationAnimatedView);\n\nmodule.exports = NavigationAnimatedView;\n"]}]