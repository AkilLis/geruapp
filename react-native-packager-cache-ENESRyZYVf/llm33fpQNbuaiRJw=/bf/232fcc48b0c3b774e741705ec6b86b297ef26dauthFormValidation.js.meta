["ce07a72c69b3f0c7e8241733e4cb44493d81bbb5","eaee5b1b4dd1ce0d43b56c4cebf2f3e72794fd5c",["./authConstants"],[145],{"version":3,"sources":["/var/www/geruapp/src/auth/authFormValidation.js"],"names":["formValidation","state","form","setIn","fields","username","email","password","passwordAgain","usernameHasError","emailHasError","passwordHasError","passwordAgainHasError"],"mappings":";AAQA;;;;;kBAiBwBA,c;;AAXxB;;AAWe,SAASA,cAAT,CAAyBC,KAAzB,EAAgC;AAC7C,UAAQA,MAAMC,IAAN,CAAWD,KAAnB;AAIE;AACE,aAAOA,MAAME,KAAN,CAAY,CAAC,MAAD,EAAS,SAAT,CAAZ,EAAiC,IAAjC,CAAP;;AAIF;AACE,UAAIF,MAAMC,IAAN,CAAWE,MAAX,CAAkBC,QAAlB,KAA+B,EAA/B,IACAJ,MAAMC,IAAN,CAAWE,MAAX,CAAkBE,KAAlB,KAA4B,EAD5B,IAEAL,MAAMC,IAAN,CAAWE,MAAX,CAAkBG,QAAlB,KAA+B,EAF/B,IAGAN,MAAMC,IAAN,CAAWE,MAAX,CAAkBI,aAAlB,KAAoC,EAHpC,IAIA,CAACP,MAAMC,IAAN,CAAWE,MAAX,CAAkBK,gBAJnB,IAKA,CAACR,MAAMC,IAAN,CAAWE,MAAX,CAAkBM,aALnB,IAMA,CAACT,MAAMC,IAAN,CAAWE,MAAX,CAAkBO,gBANnB,IAOF,CAACV,MAAMC,IAAN,CAAWE,MAAX,CAAkBQ,qBAPrB,EAO4C;AAC1C,eAAOX,MAAME,KAAN,CAAY,CAAC,MAAD,EAAS,SAAT,CAAZ,EAAiC,IAAjC,CAAP;AACD,OATD,MASO;AACL,eAAOF,MAAME,KAAN,CAAY,CAAC,MAAD,EAAS,SAAT,CAAZ,EAAiC,KAAjC,CAAP;AACD;;AAIH;AACE,UAAIF,MAAMC,IAAN,CAAWE,MAAX,CAAkBC,QAAlB,KAA+B,EAA/B,IACAJ,MAAMC,IAAN,CAAWE,MAAX,CAAkBG,QAAlB,KAA+B,EAD/B,IAEA,CAACN,MAAMC,IAAN,CAAWE,MAAX,CAAkBK,gBAFnB,IAGA,CAACR,MAAMC,IAAN,CAAWE,MAAX,CAAkBO,gBAHvB,EAGyC;AACvC,eAAOV,MAAME,KAAN,CAAY,CAAC,MAAD,EAAS,SAAT,CAAZ,EAAiC,IAAjC,CAAP;AACD,OALD,MAKO;AACL,eAAOF,MAAME,KAAN,CAAY,CAAC,MAAD,EAAS,SAAT,CAAZ,EAAiC,KAAjC,CAAP;AACD;;AAIH;AACE,UAAIF,MAAMC,IAAN,CAAWE,MAAX,CAAkBE,KAAlB,KAA4B,EAA5B,IACF,CAACL,MAAMC,IAAN,CAAWE,MAAX,CAAkBM,aADrB,EACoC;AAClC,eAAOT,MAAME,KAAN,CAAY,CAAC,MAAD,EAAS,SAAT,CAAZ,EAAiC,IAAjC,CAAP;AACD,OAHD,MAGO;AACL,eAAOF,MAAME,KAAN,CAAY,CAAC,MAAD,EAAS,SAAT,CAAZ,EAAiC,KAAjC,CAAP;AACD;;AA3CL;;AAiDA,SAAOF,KAAP;AACD","sourcesContent":["/**\n * # authFormValidation.js\n *\n * This class determines only if the form is valid\n * so that the form button can be enabled.\n * if all the fields on the form are without error,\n * the form is considered valid\n */\n'use strict'\n\n/**\n * ## Imports\n * the actions being addressed\n */\nimport {\n  LOGOUT,\n  REGISTER,\n  LOGIN,\n  FORGOT_PASSWORD\n} from './authConstants'\n\n/**\n * ## formValidation\n * @param {Object} state - the Redux state object\n */\nexport default function formValidation (state) {\n  switch (state.form.state) {\n    /**\n     * ### Logout has no fields, so always valid\n     */\n    case LOGOUT:\n      return state.setIn(['form', 'isValid'], true)\n    /**\n     * ### Registration has 4 fields\n     */\n    case REGISTER:\n      if (state.form.fields.username !== '' &&\n          state.form.fields.email !== '' &&\n          state.form.fields.password !== '' &&\n          state.form.fields.passwordAgain !== '' &&\n          !state.form.fields.usernameHasError &&\n          !state.form.fields.emailHasError &&\n          !state.form.fields.passwordHasError &&\n        !state.form.fields.passwordAgainHasError) {\n        return state.setIn(['form', 'isValid'], true)\n      } else {\n        return state.setIn(['form', 'isValid'], false)\n      }\n    /**\n     * ### Login has 2 fields\n     */\n    case LOGIN:\n      if (state.form.fields.username !== '' &&\n          state.form.fields.password !== '' &&\n          !state.form.fields.usernameHasError &&\n          !state.form.fields.passwordHasError) {\n        return state.setIn(['form', 'isValid'], true)\n      } else {\n        return state.setIn(['form', 'isValid'], false)\n      }\n    /**\n     * ### Reset password has 1 field\n     */\n    case FORGOT_PASSWORD:\n      if (state.form.fields.email !== '' &&\n        !state.form.fields.emailHasError) {\n        return state.setIn(['form', 'isValid'], true)\n      } else {\n        return state.setIn(['form', 'isValid'], false)\n      }\n\n  }\n  /**\n   * Default, return the state\n   */\n  return state\n}"]}]