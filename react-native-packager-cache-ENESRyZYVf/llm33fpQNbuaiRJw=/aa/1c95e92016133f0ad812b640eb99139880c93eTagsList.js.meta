["b66bab7058ff51e43726390bfbc5254e875667c1","020fac06b58a951edc4e8be9f899eaf5fb953f34",["react","react-native","../../styles/variables"],[86,183,226],{"version":3,"sources":["/var/www/geruapp/src/showcase/components/TagsList.js"],"names":["TagsList","props","tags","display","template","styles","container","searchContainer","scrollView","tagsContainer","get","map","item","i","tagContainer","selected","onTagDiselect","tagText","tagSelected","name","toUpperCase","tag","disabled","onTagSelected","tagDisabled","propTypes","object","deleteable","bool","defaultProps","create","flex","paddingLeft","backgroundColor","flexDirection","flexWrap","justifyContent","alignItems","paddingBottom","paddingTop","paddingHorizontal","height","borderRadius","margin","paddingVertical","BRAND_SECONDARY","color","fontSize","fontFamily","FONT_REGULAR"],"mappings":";;;;AAAA;;;;AACA;;AASA;;;;IAGqBA,Q;;;AACpB,mBAAYC,KAAZ,EAAmB;AAAA;AAAA,yHACXA,KADW;AAElB;;;;2BAEQ;AAAA;;AAAA,gBACgB,KAAKA,KADrB;AAAA,OACFC,IADE,UACFA,IADE;AAAA,OACIC,OADJ,UACIA,OADJ;;AAER,OAAIC,WAAW,IAAf;;AAEA,UACC;AAAA;AAAA,MAAM,OAAOC,OAAOC,SAApB;AACC;AAAA;AAAA,OAAM,OAAOD,OAAOE,eAApB;AACC;AADD,KADD;AAUC;AAAA;AAAA,OAAY,OAAOF,OAAOG,UAA1B,EAAsC,8BAA8B,KAApE;AACC;AAAA;AAAA,QAAM,OAAOH,OAAOI,aAApB;AAECP,WAAKQ,GAAL,CAAS,UAAT,EAAqBC,GAArB,CAAyB,UAACC,IAAD,EAAOC,CAAP;AAAA,cACxB;AAAA;AAAA,UAAkB,OAAO,CAACR,OAAOS,YAAR,EAAsBT,OAAOU,QAA7B,CAAzB;AACM,kBAAS;AAAA,iBAAM,OAAKd,KAAL,CAAWe,aAAX,CAAyBJ,IAAzB,CAAN;AAAA,UADf;AAEM,mBAAWV,KAAKQ,GAAL,CAAS,UAAT,CAFjB;AAGC;AAAA;AAAA,WAAM,OAAO,CAACL,OAAOY,OAAR,EAAiBZ,OAAOa,WAAxB,CAAb;AAAqDN,cAAKO,IAAL,CAAUC,WAAV;AAArD;AAHD,QADwB;AAAA,OAAzB,CAFD;AAWClB,WAAKQ,GAAL,CAAS,WAAT,EAAsBC,GAAtB,CAA0B,UAACU,GAAD,EAAMR,CAAN;AAAA,cACzB;AAAA;AAAA,UAAkB,OAAO,CAACR,OAAOS,YAAR,EAAsBT,OAAOiB,QAA7B,CAAzB;AACM,kBAAS;AAAA,iBAAM,OAAKrB,KAAL,CAAWsB,aAAX,CAAyBF,GAAzB,CAAN;AAAA,UADf;AAEM,mBAAWnB,KAAKQ,GAAL,CAAS,UAAT,CAFjB;AAGC;AAAA;AAAA,WAAM,OAAO,CAACL,OAAOY,OAAR,EAAiBZ,OAAOmB,WAAxB,CAAb;AAAqDH,aAAIF,IAAJ,CAASC,WAAT;AAArD;AAHD,QADyB;AAAA,OAA1B;AAXD;AADD;AAVD,IADD;AAmCA;;;;;kBA5CmBpB,Q;;;AA+CrBA,SAASyB,SAAT,GAAqB;AACpBvB,OAAM,iBAAUwB,MADI;AAEpBC,aAAY,iBAAUC;AAFF,CAArB;;AAKA5B,SAAS6B,YAAT,GAAwB;AACvBF,aAAY;AADW,CAAxB;;AAIA,IAAItB,SAAS,wBAAWyB,MAAX,CAAkB;AAC9BrB,gBAAe;AACdsB,QAAM,CADQ;AAEdC,eAAa,EAFC;AAGdC,mBAAiB,MAHH;AAIdC,iBAAe,KAJD;AAKdC,YAAU,MALI;AAMdC,kBAAgB,YANF;AAOdC,cAAY;AAPE,EADe;;AAW9B/B,YAAW;AACVyB,QAAM;AADI,EAXmB;;AAe9BxB,kBAAiB;AAChB+B,iBAAe,CADC;AAEhBC,cAAY,EAFI;AAGhBC,qBAAmB;AAHH,EAfa;;AAqB9B1B,eAAc;AACb2B,UAAQ,EADK;AAEbC,gBAAc,CAFD;AAGbC,UAAQ,CAHK;AAIbH,qBAAmB,EAJN;AAKbI,mBAAiB;AALJ,EArBgB;;AA8B9B7B,WAAU;AACTkB,mBAAiB,oBAAUY;AADlB,EA9BoB;;AAkC9BvB,WAAU;AACTW,mBAAiB;AADR,EAlCoB;;AAsC9BhB,UAAS;AACR6B,SAAO,MADC;AAERC,YAAU,EAFF;AAGRC,cAAY,oBAAUC;AAHd,EAtCqB;;AA4C9B/B,cAAa;AACZ4B,SAAO;AADK,EA5CiB;;AAgD9BtB,cAAa;AACZsB,SAAO;AADK;;AAhDiB,CAAlB,CAAb","sourcesContent":["import React, { PropTypes, Component } from 'react'\nimport { \n\tStyleSheet, \n\tView, \n\tTouchableOpacity, \n\tText, \n\tScrollView, \n\tTouchableHighlight,\n\tTextInput\n} from 'react-native'\nimport variables from '../../styles/variables'\n//import { SearchBar } from 'react-native-elements'\n\nexport default class TagsList extends Component {\n\tconstructor(props) {\n\t  super(props)\t\n\t}\n\n\trender() {\n\t\tvar { tags, display } = this.props\n\t\tlet template = null\n\n\t\treturn (\n\t\t\t<View style={styles.container}>\n\t\t\t\t<View style={styles.searchContainer}>\n\t\t\t\t\t<TextInput />\n\t\t\t\t\t{/*<SearchBar containerStyle={{backgroundColor: '#fff', borderTopColor: '#fff', borderBottomColor: '#fff'}} \n\t\t\t\t\t\t\t   inputStyle={{backgroundColor: '#efefef', fontFamily: variables.FONT_REGULAR}}\n\t\t\t\t\t\t\t   placeholder='хайх ...'\n\t\t\t\t\t\t\t   placeholderTextColor='#b5b5b5'\n\t\t\t\t\t\t\t   lightTheme/>*/}\n\t\t\t\t</View>\n\n\t\t\t\t<ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>\n\t\t\t\t\t<View style={styles.tagsContainer}>\n\t\t\t\t\t{\n\t\t\t\t\t\ttags.get('selected').map((item, i) => (\n\t\t\t\t\t\t\t<TouchableOpacity style={[styles.tagContainer, styles.selected]} \n\t\t\t\t\t\t\t\t\t\t\t  onPress={() => this.props.onTagDiselect(item)}\n\t\t\t\t\t\t\t\t\t\t\t  disabled={ tags.get('fetching') }>\n\t\t\t\t\t\t\t\t<Text style={[styles.tagText, styles.tagSelected]}>{ item.name.toUpperCase() }</Text>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\ttags.get('suggested').map((tag, i) => (\n\t\t\t\t\t\t\t<TouchableOpacity style={[styles.tagContainer, styles.disabled]} \n\t\t\t\t\t\t\t\t\t\t\t  onPress={() => this.props.onTagSelected(tag)}\n\t\t\t\t\t\t\t\t\t\t\t  disabled={ tags.get('fetching') }>\n\t\t\t\t\t\t\t\t<Text style={[styles.tagText, styles.tagDisabled]}>{ tag.name.toUpperCase() }</Text>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t\t</View>\n\t\t\t\t</ScrollView>\n\t\t\t</View>\n\t\t)\n\t}\n}\n\nTagsList.propTypes = {\n\ttags: PropTypes.object,\n\tdeleteable: PropTypes.bool,\n}\n\nTagsList.defaultProps = {\n\tdeleteable: true,\n}\n\nvar styles = StyleSheet.create({\n\ttagsContainer: {\n\t\tflex: 1,\n\t\tpaddingLeft: 20,\n\t\tbackgroundColor: '#fff' ,\n\t\tflexDirection: 'row',\n\t\tflexWrap: 'wrap',\n\t\tjustifyContent: 'flex-start',\n\t\talignItems: 'center',\n\t},\n\n\tcontainer: {\n\t\tflex: 1,\n\t},\n\n\tsearchContainer: {\n\t\tpaddingBottom: 5,\n\t\tpaddingTop: 15,\n\t\tpaddingHorizontal: 15,\n\t},\n\n\ttagContainer: {\n\t\theight: 30,\n\t\tborderRadius: 2,\t\n\t\tmargin: 5,\n\t\tpaddingHorizontal: 35,\n\t\tpaddingVertical: 5,\n\t\t/*flexDirection: 'row',*/\n\t},\n\n\tselected: {\n\t\tbackgroundColor: variables.BRAND_SECONDARY,\n\t},\n\n\tdisabled: {\n\t\tbackgroundColor: '#efefef',\n\t},\n\n\ttagText: {\n\t\tcolor: '#fff',\n\t\tfontSize: 14,\n\t\tfontFamily: variables.FONT_REGULAR\n\t},\n\n\ttagSelected: {\n\t\tcolor: '#fff'\n\t},\n\n\ttagDisabled: {\n\t\tcolor: '#242424'\n\t}\n\n})\n"]}]