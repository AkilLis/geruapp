["c4bfcdbb53290dfea53852fdcccbe0b4fec652a0","7d188b3292b3828b4d74b49bf17b041129adfa60",["ColorPropType","NativeMethodsMixin","React","ReactNativeViewAttributes","StyleSheet","react-timer-mixin","Touchable","TouchableWithoutFeedback","View","ViewPropTypes","ensureComponentIsNative","ensurePositiveDelayProps","fbjs/lib/keyOf","merge"],[44,95,138,188,243,283,329,382,430,468,525,592,641,680],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js"],"names":["ColorPropType","require","NativeMethodsMixin","React","ReactNativeViewAttributes","StyleSheet","TimerMixin","Touchable","TouchableWithoutFeedback","View","ViewPropTypes","ensureComponentIsNative","ensurePositiveDelayProps","keyOf","merge","DEFAULT_PROPS","activeOpacity","underlayColor","PRESS_RETENTION_OFFSET","top","left","right","bottom","TouchableHighlight","createClass","propTypes","PropTypes","number","style","onShowUnderlay","func","onHideUnderlay","hasTVPreferredFocus","bool","tvParallaxProperties","object","mixins","Mixin","getDefaultProps","_computeSyntheticState","props","activeProps","opacity","activeUnderlayProps","backgroundColor","underlayStyle","INACTIVE_UNDERLAY_PROPS","getInitialState","touchableGetInitialState","componentDidMount","refs","CHILD_REF","componentDidUpdate","componentWillReceiveProps","nextProps","setState","viewConfig","uiViewClassName","validAttributes","RCTView","touchableHandleActivePressIn","e","clearTimeout","_hideTimeout","_showUnderlay","onPressIn","touchableHandleActivePressOut","_hideUnderlay","onPressOut","touchableHandlePress","setTimeout","delayPressOut","onPress","touchableHandleLongPress","onLongPress","touchableGetPressRectOffset","pressRetentionOffset","touchableGetHitSlop","hitSlop","touchableGetHighlightDelayMS","delayPressIn","touchableGetLongPressDelayMS","delayLongPress","touchableGetPressOutDelayMS","isMounted","_hasPressHandler","UNDERLAY_REF","setNativeProps","state","INACTIVE_CHILD_PROPS","render","accessible","accessibilityLabel","accessibilityComponentType","accessibilityTraits","onLayout","touchableHandleStartShouldSetResponder","touchableHandleResponderTerminationRequest","touchableHandleResponderGrant","touchableHandleResponderMove","touchableHandleResponderRelease","touchableHandleResponderTerminate","testID","cloneElement","Children","only","children","ref","renderDebugView","color","childRef","underlayRef","create","x","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule TouchableHighlight\n * @noflow\n */\n'use strict';\n\n// Note (avik): add @flow when Flow supports spread properties in propTypes\n\nvar ColorPropType = require('ColorPropType');\nvar NativeMethodsMixin = require('NativeMethodsMixin');\nvar React = require('React');\nvar ReactNativeViewAttributes = require('ReactNativeViewAttributes');\nvar StyleSheet = require('StyleSheet');\nvar TimerMixin = require('react-timer-mixin');\nvar Touchable = require('Touchable');\nvar TouchableWithoutFeedback = require('TouchableWithoutFeedback');\nvar View = require('View');\n\nconst ViewPropTypes = require('ViewPropTypes');\n\nvar ensureComponentIsNative = require('ensureComponentIsNative');\nvar ensurePositiveDelayProps = require('ensurePositiveDelayProps');\nvar keyOf = require('fbjs/lib/keyOf');\nvar merge = require('merge');\n\ntype Event = Object;\n\nvar DEFAULT_PROPS = {\n  activeOpacity: 0.85,\n  underlayColor: 'black',\n};\n\nvar PRESS_RETENTION_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, which allows\n * the underlay color to show through, darkening or tinting the view.\n *\n * The underlay comes from wrapping the child in a new View, which can affect\n * layout, and sometimes cause unwanted visual artifacts if not used correctly,\n * for example if the backgroundColor of the wrapped view isn't explicitly set\n * to an opaque color.\n *\n * TouchableHighlight must have one child (not zero or more than one).\n * If you wish to have several child components, wrap them in a View.\n *\n * Example:\n *\n * ```\n * renderButton: function() {\n *   return (\n *     <TouchableHighlight onPress={this._onPressButton}>\n *       <Image\n *         style={styles.button}\n *         source={require('./myButton.png')}\n *       />\n *     </TouchableHighlight>\n *   );\n * },\n * ```\n */\n\nvar TouchableHighlight = React.createClass({\n  propTypes: {\n    ...TouchableWithoutFeedback.propTypes,\n    /**\n     * Determines what the opacity of the wrapped view should be when touch is\n     * active.\n     */\n    activeOpacity: React.PropTypes.number,\n    /**\n     * The color of the underlay that will show through when the touch is\n     * active.\n     */\n    underlayColor: ColorPropType,\n    style: ViewPropTypes.style,\n    /**\n     * Called immediately after the underlay is shown\n     */\n    onShowUnderlay: React.PropTypes.func,\n    /**\n     * Called immediately after the underlay is hidden\n     */\n    onHideUnderlay: React.PropTypes.func,\n    /**\n     * *(Apple TV only)* TV preferred focus (see documentation for the View component).\n     *\n     * @platform ios\n     */\n    hasTVPreferredFocus: React.PropTypes.bool,\n    /**\n     * *(Apple TV only)* Object with properties to control Apple TV parallax effects.\n     *\n     * enabled: If true, parallax effects are enabled.  Defaults to true.\n     * shiftDistanceX: Defaults to 2.0.\n     * shiftDistanceY: Defaults to 2.0.\n     * tiltAngle: Defaults to 0.05.\n     * magnification: Defaults to 1.0.\n     *\n     * @platform ios\n     */\n    tvParallaxProperties: React.PropTypes.object,\n\n  },\n\n  mixins: [NativeMethodsMixin, TimerMixin, Touchable.Mixin],\n\n  getDefaultProps: () => DEFAULT_PROPS,\n\n  // Performance optimization to avoid constantly re-generating these objects.\n  _computeSyntheticState: function(props) {\n    return {\n      activeProps: {\n        style: {\n          opacity: props.activeOpacity,\n        }\n      },\n      activeUnderlayProps: {\n        style: {\n          backgroundColor: props.underlayColor,\n        }\n      },\n      underlayStyle: [\n        INACTIVE_UNDERLAY_PROPS.style,\n        props.style,\n      ],\n      hasTVPreferredFocus: props.hasTVPreferredFocus\n    };\n  },\n\n  getInitialState: function() {\n    return merge(\n      this.touchableGetInitialState(), this._computeSyntheticState(this.props)\n    );\n  },\n\n  componentDidMount: function() {\n    ensurePositiveDelayProps(this.props);\n    ensureComponentIsNative(this.refs[CHILD_REF]);\n  },\n\n  componentDidUpdate: function() {\n    ensureComponentIsNative(this.refs[CHILD_REF]);\n  },\n\n  componentWillReceiveProps: function(nextProps) {\n    ensurePositiveDelayProps(nextProps);\n    if (nextProps.activeOpacity !== this.props.activeOpacity ||\n        nextProps.underlayColor !== this.props.underlayColor ||\n        nextProps.style !== this.props.style) {\n      this.setState(this._computeSyntheticState(nextProps));\n    }\n  },\n\n  viewConfig: {\n    uiViewClassName: 'RCTView',\n    validAttributes: ReactNativeViewAttributes.RCTView\n  },\n\n  /**\n   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are\n   * defined on your component.\n   */\n  touchableHandleActivePressIn: function(e: Event) {\n    this.clearTimeout(this._hideTimeout);\n    this._hideTimeout = null;\n    this._showUnderlay();\n    this.props.onPressIn && this.props.onPressIn(e);\n  },\n\n  touchableHandleActivePressOut: function(e: Event) {\n    if (!this._hideTimeout) {\n      this._hideUnderlay();\n    }\n    this.props.onPressOut && this.props.onPressOut(e);\n  },\n\n  touchableHandlePress: function(e: Event) {\n    this.clearTimeout(this._hideTimeout);\n    this._showUnderlay();\n    this._hideTimeout = this.setTimeout(this._hideUnderlay,\n      this.props.delayPressOut || 100);\n    this.props.onPress && this.props.onPress(e);\n  },\n\n  touchableHandleLongPress: function(e: Event) {\n    this.props.onLongPress && this.props.onLongPress(e);\n  },\n\n  touchableGetPressRectOffset: function() {\n    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop: function() {\n    return this.props.hitSlop;\n  },\n\n  touchableGetHighlightDelayMS: function() {\n    return this.props.delayPressIn;\n  },\n\n  touchableGetLongPressDelayMS: function() {\n    return this.props.delayLongPress;\n  },\n\n  touchableGetPressOutDelayMS: function() {\n    return this.props.delayPressOut;\n  },\n\n  _showUnderlay: function() {\n    if (!this.isMounted() || !this._hasPressHandler()) {\n      return;\n    }\n\n    this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);\n    this.refs[CHILD_REF].setNativeProps(this.state.activeProps);\n    this.props.onShowUnderlay && this.props.onShowUnderlay();\n  },\n\n  _hideUnderlay: function() {\n    this.clearTimeout(this._hideTimeout);\n    this._hideTimeout = null;\n    if (this._hasPressHandler() && this.refs[UNDERLAY_REF]) {\n      this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);\n      this.refs[UNDERLAY_REF].setNativeProps({\n        ...INACTIVE_UNDERLAY_PROPS,\n        style: this.state.underlayStyle,\n      });\n      this.props.onHideUnderlay && this.props.onHideUnderlay();\n    }\n  },\n\n  _hasPressHandler: function() {\n    return !!(\n      this.props.onPress ||\n      this.props.onPressIn ||\n      this.props.onPressOut ||\n      this.props.onLongPress\n    );\n  },\n\n  render: function() {\n    return (\n      <View\n        accessible={this.props.accessible !== false}\n        accessibilityLabel={this.props.accessibilityLabel}\n        accessibilityComponentType={this.props.accessibilityComponentType}\n        accessibilityTraits={this.props.accessibilityTraits}\n        ref={UNDERLAY_REF}\n        style={this.state.underlayStyle}\n        onLayout={this.props.onLayout}\n        hitSlop={this.props.hitSlop}\n        isTVSelectable={true}\n        tvParallaxProperties={this.props.tvParallaxProperties}\n        hasTVPreferredFocus={this.state.hasTVPreferredFocus}\n        onStartShouldSetResponder={this.touchableHandleStartShouldSetResponder}\n        onResponderTerminationRequest={this.touchableHandleResponderTerminationRequest}\n        onResponderGrant={this.touchableHandleResponderGrant}\n        onResponderMove={this.touchableHandleResponderMove}\n        onResponderRelease={this.touchableHandleResponderRelease}\n        onResponderTerminate={this.touchableHandleResponderTerminate}\n        testID={this.props.testID}>\n        {React.cloneElement(\n          React.Children.only(this.props.children),\n          {\n            ref: CHILD_REF,\n          }\n        )}\n        {Touchable.renderDebugView({color: 'green', hitSlop: this.props.hitSlop})}\n      </View>\n    );\n  }\n});\n\nvar CHILD_REF = keyOf({childRef: null});\nvar UNDERLAY_REF = keyOf({underlayRef: null});\nvar INACTIVE_CHILD_PROPS = {\n  style: StyleSheet.create({x: {opacity: 1.0}}).x,\n};\nvar INACTIVE_UNDERLAY_PROPS = {\n  style: StyleSheet.create({x: {backgroundColor: 'transparent'}}).x,\n};\n\nmodule.exports = TouchableHighlight;\n"]}]