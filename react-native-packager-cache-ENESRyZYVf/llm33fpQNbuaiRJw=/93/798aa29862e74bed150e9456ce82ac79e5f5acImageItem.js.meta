["ec92af7bad7f83c2c2462f091efac4e36ab9a664","e2fac250b39889702f06e3a7b1741a26ea30e0a2",["react","react-native","./circle-check.png"],[87,184,1557],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-camera-roll-picker/ImageItem.js"],"names":["ImageItem","props","get","width","imageMargin","imagesPerRow","containerWidth","_imageSize","item","selected","selectedMarker","marker","styles","height","require","image","node","marginBottom","marginRight","_handleClick","uri","onClick","create","position","top","right","backgroundColor","defaultProps","propTypes","PropTypes","object","bool","element","number","func"],"mappings":";;;;AAAA;;;;AACA;;IAOMA,S;;;AACJ,qBAAYC,KAAZ,EAAkB;AAAA;AAAA,6HACVA,KADU;AAEjB;;;;yCAEoB;AAAA,4BACL,wBAAWC,GAAX,CAAe,QAAf,CADK;AAAA,UACdC,KADc,mBACdA,KADc;;AAAA,mBAE+B,KAAKF,KAFpC;AAAA,UAEdG,WAFc,UAEdA,WAFc;AAAA,UAEDC,YAFC,UAEDA,YAFC;AAAA,UAEaC,cAFb,UAEaA,cAFb;;;AAInB,UAAG,OAAOA,cAAP,IAAyB,WAA5B,EAAyC;AACvCH,gBAAQG,cAAR;AACD;AACD,WAAKC,UAAL,GAAkB,CAACJ,QAAQ,CAACE,eAAe,CAAhB,IAAqBD,WAA9B,IAA6CC,YAA/D;AACD;;;6BAEQ;AAAA;;AAAA,oBAC6C,KAAKJ,KADlD;AAAA,UACFO,IADE,WACFA,IADE;AAAA,UACIC,QADJ,WACIA,QADJ;AAAA,UACcC,cADd,WACcA,cADd;AAAA,UAC8BN,WAD9B,WAC8BA,WAD9B;;;AAGP,UAAIO,SAASD,iBAAiBA,cAAjB,GACT;AACE,eAAO,CAACE,OAAOD,MAAR,EAAgB,EAACR,OAAO,EAAR,EAAYU,QAAQ,EAApB,EAAhB,CADT;AAEE,gBAAQC,QAAQ,oBAAR;AAFV,QADJ;;AAMA,UAAIC,QAAQP,KAAKQ,IAAL,CAAUD,KAAtB;;AAEA,aACE;AAAA;AAAA;AACE,iBAAO,EAACE,cAAcb,WAAf,EAA4Bc,aAAad,WAAzC,EADT;AAEE,mBAAS;AAAA,mBAAM,OAAKe,YAAL,CAAkBJ,KAAlB,CAAN;AAAA,WAFX;AAGE;AAAA;AAAA;AACE,oBAAQ,EAACK,KAAKL,MAAMK,GAAZ,EADV;AAEE,mBAAO,EAACP,QAAQ,KAAKN,UAAd,EAA0BJ,OAAO,KAAKI,UAAtC,EAFT;AAGKE,kBAAD,GAAaE,MAAb,GAAsB;AAH1B;AAHF,OADF;AAWD;;;iCAEYH,I,EAAM;AACjB,WAAKP,KAAL,CAAWoB,OAAX,CAAmBb,IAAnB;AACD;;;;;AAGH,IAAMI,SAAS,wBAAWU,MAAX,CAAkB;AAC/BX,UAAQ;AACNY,cAAU,UADJ;AAENC,SAAK,CAFC;AAGNC,WAAO,CAHD;AAINC,qBAAiB;AAJX;AADuB,CAAlB,CAAf;;AASA1B,UAAU2B,YAAV,GAAyB;AACvBnB,QAAM,EADiB;AAEvBC,YAAU;AAFa,CAAzB;;AAKAT,UAAU4B,SAAV,GAAsB;AACpBpB,QAAM,gBAAMqB,SAAN,CAAgBC,MADF;AAEpBrB,YAAU,gBAAMoB,SAAN,CAAgBE,IAFN;AAGpBrB,kBAAgB,gBAAMmB,SAAN,CAAgBG,OAHZ;AAIpB5B,eAAa,gBAAMyB,SAAN,CAAgBI,MAJT;AAKpB5B,gBAAc,gBAAMwB,SAAN,CAAgBI,MALV;AAMpBZ,WAAS,gBAAMQ,SAAN,CAAgBK;AANL,CAAtB;;kBASelC,S","sourcesContent":["import React, {Component} from 'react';\nimport {\n  Image,\n  StyleSheet,\n  Dimensions,\n  TouchableOpacity,\n} from 'react-native';\n\nclass ImageItem extends Component {\n  constructor(props){\n    super(props)\n  }\n\n  componentWillMount() {\n    var {width} = Dimensions.get('window');\n    var {imageMargin, imagesPerRow, containerWidth} = this.props;\n\n    if(typeof containerWidth != \"undefined\") {\n      width = containerWidth;\n    }\n    this._imageSize = (width - (imagesPerRow + 1) * imageMargin) / imagesPerRow;\n  }\n\n  render() {\n    var {item, selected, selectedMarker, imageMargin} = this.props;\n\n    var marker = selectedMarker ? selectedMarker :\n        <Image\n          style={[styles.marker, {width: 25, height: 25}]}\n          source={require('./circle-check.png')}\n          />;\n\n    var image = item.node.image;\n\n    return (\n      <TouchableOpacity\n        style={{marginBottom: imageMargin, marginRight: imageMargin}}\n        onPress={() => this._handleClick(image)}>\n        <Image\n          source={{uri: image.uri}}\n          style={{height: this._imageSize, width: this._imageSize}} >\n          { (selected) ? marker : null }\n        </Image>\n      </TouchableOpacity>\n    );\n  }\n\n  _handleClick(item) {\n    this.props.onClick(item);\n  }\n}\n\nconst styles = StyleSheet.create({\n  marker: {\n    position: 'absolute',\n    top: 5,\n    right: 5,\n    backgroundColor: 'transparent',\n  },\n})\n\nImageItem.defaultProps = {\n  item: {},\n  selected: false,\n}\n\nImageItem.propTypes = {\n  item: React.PropTypes.object,\n  selected: React.PropTypes.bool,\n  selectedMarker: React.PropTypes.element,\n  imageMargin: React.PropTypes.number,\n  imagesPerRow: React.PropTypes.number,\n  onClick: React.PropTypes.func,\n}\n\nexport default ImageItem;\n"]}]