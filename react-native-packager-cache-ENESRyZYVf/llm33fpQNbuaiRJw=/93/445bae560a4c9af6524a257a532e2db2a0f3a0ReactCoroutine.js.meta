["f5725e688ccb30b2779236346887a444f25c9819","c4d587b4af80c714708a430d82bb552bf6e83bc2",[],[],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/fiber/isomorphic/ReactCoroutine.js"],"names":["REACT_COROUTINE_TYPE","REACT_YIELD_TYPE","Symbol","for","exports","createCoroutine","children","handler","props","key","coroutine","$$typeof","__DEV__","Object","freeze","createYield","value","yieldNode","isCoroutine","object","isYield"],"mappings":";;AAYA;;AAMA,IAAIA,oBAAJ;AACA,IAAIC,gBAAJ;AACA,IAAI,OAAOC,MAAP,KAAkB,UAAlB,oCAAgCA,OAAOC,GAAvC,WAAJ,EAAgD;AAC9CH,yBAAuB,uCAAOG,GAAP,YAAW,iBAAX,CAAvB;AACAF,qBAAmB,uCAAOE,GAAP,YAAW,aAAX,CAAnB;AACD,CAHD,MAGO;AACLH,yBAAuB,MAAvB;AACAC,qBAAmB,MAAnB;AACD;;AAiBDG,QAAQC,eAAR,GAA0B,UACxBC,QADwB,EAExBC,OAFwB,EAGxBC,KAHwB,EAKR;AAAA,MADhBC,GACgB,uEADD,IACC;;AAChB,MAAIC,YAAY;AAEdC,cAAUX,oBAFI;AAGdS,SAAKA,OAAO,IAAP,GAAc,IAAd,GAAqB,KAAKA,GAHjB;AAIdH,cAAUA,QAJI;AAKdC,aAASA,OALK;AAMdC,WAAOA;AANO,GAAhB;;AASA,MAAII,OAAJ,EAAa;AAEX,QAAIC,OAAOC,MAAX,EAAmB;AACjBD,aAAOC,MAAP,CAAcJ,UAAUF,KAAxB;AACAK,aAAOC,MAAP,CAAcJ,SAAd;AACD;AACF;;AAED,SAAOA,SAAP;AACD,CAxBD;;AA0BAN,QAAQW,WAAR,GAAsB,UAASC,KAAT,EAAmC;AACvD,MAAIC,YAAY;AAEdN,cAAUV,gBAFI;AAGde,WAAOA;AAHO,GAAhB;;AAMA,MAAIJ,OAAJ,EAAa;AAEX,QAAIC,OAAOC,MAAX,EAAmB;AACjBD,aAAOC,MAAP,CAAcG,SAAd;AACD;AACF;;AAED,SAAOA,SAAP;AACD,CAfD;;AAoBAb,QAAQc,WAAR,GAAsB,UAASC,MAAT,EAAiC;AACrD,SAAO,OAAOA,MAAP,KAAkB,QAAlB,IACLA,WAAW,IADN,IAELA,OAAOR,QAAP,KAAoBX,oBAFtB;AAGD,CAJD;;AASAI,QAAQgB,OAAR,GAAkB,UAASD,MAAT,EAAiC;AACjD,SAAO,OAAOA,MAAP,KAAkB,QAAlB,IACLA,WAAW,IADN,IAELA,OAAOR,QAAP,KAAoBV,gBAFtB;AAGD,CAJD;;AAMAG,QAAQH,gBAAR,GAA2BA,gBAA3B;AACAG,QAAQJ,oBAAR,GAA+BA,oBAA/B","sourcesContent":["/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCoroutine\n * @flow\n */\n\n'use strict';\n\nimport type {ReactNodeList} from 'ReactTypes';\n\n// The Symbol used to tag the special React types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_COROUTINE_TYPE;\nvar REACT_YIELD_TYPE;\nif (typeof Symbol === 'function' && Symbol.for) {\n  REACT_COROUTINE_TYPE = Symbol.for('react.coroutine');\n  REACT_YIELD_TYPE = Symbol.for('react.yield');\n} else {\n  REACT_COROUTINE_TYPE = 0xeac8;\n  REACT_YIELD_TYPE = 0xeac9;\n}\n\ntype CoroutineHandler<T> = (props: T, yields: Array<mixed>) => ReactNodeList;\n\nexport type ReactCoroutine = {\n  $$typeof: Symbol | number,\n  key: null | string,\n  children: any,\n  // This should be a more specific CoroutineHandler\n  handler: (props: any, yields: Array<mixed>) => ReactNodeList,\n  props: any,\n};\nexport type ReactYield = {\n  $$typeof: Symbol | number,\n  value: mixed,\n};\n\nexports.createCoroutine = function<T>(\n  children: mixed,\n  handler: CoroutineHandler<T>,\n  props: T,\n  key: ?string = null,\n): ReactCoroutine {\n  var coroutine = {\n    // This tag allow us to uniquely identify this as a React Coroutine\n    $$typeof: REACT_COROUTINE_TYPE,\n    key: key == null ? null : '' + key,\n    children: children,\n    handler: handler,\n    props: props,\n  };\n\n  if (__DEV__) {\n    // TODO: Add _store property for marking this as validated.\n    if (Object.freeze) {\n      Object.freeze(coroutine.props);\n      Object.freeze(coroutine);\n    }\n  }\n\n  return coroutine;\n};\n\nexports.createYield = function(value: mixed): ReactYield {\n  var yieldNode = {\n    // This tag allow us to uniquely identify this as a React Yield\n    $$typeof: REACT_YIELD_TYPE,\n    value: value,\n  };\n\n  if (__DEV__) {\n    // TODO: Add _store property for marking this as validated.\n    if (Object.freeze) {\n      Object.freeze(yieldNode);\n    }\n  }\n\n  return yieldNode;\n};\n\n/**\n * Verifies the object is a coroutine object.\n */\nexports.isCoroutine = function(object: mixed): boolean {\n  return typeof object === 'object' &&\n    object !== null &&\n    object.$$typeof === REACT_COROUTINE_TYPE;\n};\n\n/**\n * Verifies the object is a yield object.\n */\nexports.isYield = function(object: mixed): boolean {\n  return typeof object === 'object' &&\n    object !== null &&\n    object.$$typeof === REACT_YIELD_TYPE;\n};\n\nexports.REACT_YIELD_TYPE = REACT_YIELD_TYPE;\nexports.REACT_COROUTINE_TYPE = REACT_COROUTINE_TYPE;\n"]}]