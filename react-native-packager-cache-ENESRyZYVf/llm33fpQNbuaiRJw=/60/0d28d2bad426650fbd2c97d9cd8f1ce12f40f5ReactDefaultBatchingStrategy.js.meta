["39ab533761ef0971df326da2edf635bc6fdb8523","01b9610448be44449104e23e78b934087bf719b8",["ReactUpdates","Transaction","fbjs/lib/emptyFunction"],[44,87,132],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/stack/reconciler/ReactDefaultBatchingStrategy.js"],"names":["ReactUpdates","require","Transaction","emptyFunction","RESET_BATCHED_UPDATES","initialize","close","ReactDefaultBatchingStrategy","isBatchingUpdates","FLUSH_BATCHED_UPDATES","flushBatchedUpdates","bind","TRANSACTION_WRAPPERS","ReactDefaultBatchingStrategyTransaction","reinitializeTransaction","prototype","getTransactionWrappers","transaction","batchedUpdates","callback","a","b","c","d","e","alreadyBatchingUpdates","perform","module","exports"],"mappings":";;AAWA;;AAEA,IAAIA,eAAeC,QAAQ,cAAR,CAAnB;AACA,IAAIC,cAAcD,QAAQ,aAAR,CAAlB;;AAEA,IAAIE,gBAAgBF,QAAQ,wBAAR,CAApB;;AAEA,IAAIG,wBAAwB;AAC1BC,cAAYF,aADc;AAE1BG,SAAO,iBAAW;AAChBC,iCAA6BC,iBAA7B,GAAiD,KAAjD;AACD;AAJyB,CAA5B;;AAOA,IAAIC,wBAAwB;AAC1BJ,cAAYF,aADc;AAE1BG,SAAON,aAAaU,mBAAb,CAAiCC,IAAjC,CAAsCX,YAAtC;AAFmB,CAA5B;;AAKA,IAAIY,uBAAuB,CAACH,qBAAD,EAAwBL,qBAAxB,CAA3B;;AAEA,SAASS,uCAAT,GAAmD;AACjD,OAAKC,uBAAL;AACD;;AAED,qBAAcD,wCAAwCE,SAAtD,EAAiEb,WAAjE,EAA8E;AAC5Ec,0BAAwB,kCAAW;AACjC,WAAOJ,oBAAP;AACD;AAH2E,CAA9E;;AAMA,IAAIK,cAAc,IAAIJ,uCAAJ,EAAlB;;AAEA,IAAIN,+BAA+B;AACjCC,qBAAmB,KADc;;AAOjCU,kBAAgB,wBAASC,QAAT,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyBC,CAAzB,EAA4BC,CAA5B,EAA+BC,CAA/B,EAAkC;AAChD,QAAIC,yBAAyBlB,6BAA6BC,iBAA1D;;AAEAD,iCAA6BC,iBAA7B,GAAiD,IAAjD;;AAGA,QAAIiB,sBAAJ,EAA4B;AAC1B,aAAON,SAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,CAAP;AACD,KAFD,MAEO;AACL,aAAOP,YAAYS,OAAZ,CAAoBP,QAApB,EAA8B,IAA9B,EAAoCC,CAApC,EAAuCC,CAAvC,EAA0CC,CAA1C,EAA6CC,CAA7C,EAAgDC,CAAhD,CAAP;AACD;AACF;AAlBgC,CAAnC;;AAqBAG,OAAOC,OAAP,GAAiBrB,4BAAjB","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultBatchingStrategy\n */\n\n'use strict';\n\nvar ReactUpdates = require('ReactUpdates');\nvar Transaction = require('Transaction');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function() {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  },\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates),\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\nObject.assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n});\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function(callback, a, b, c, d, e) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      return callback(a, b, c, d, e);\n    } else {\n      return transaction.perform(callback, null, a, b, c, d, e);\n    }\n  },\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n"]}]