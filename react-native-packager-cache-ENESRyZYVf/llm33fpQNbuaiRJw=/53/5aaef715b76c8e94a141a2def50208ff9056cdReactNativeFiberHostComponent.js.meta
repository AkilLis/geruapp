["c095bb8c7983d1af8f674660c2828e84649bd04d","06857ddff082b0d550f1dd9813682d06e94ef3c0",["ReactNativeAttributePayload","TextInputState","UIManager","NativeMethodsMixinUtils"],[59,120,163,201],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/native/ReactNativeFiberHostComponent.js"],"names":["ReactNativeAttributePayload","require","TextInputState","UIManager","mountSafeCallback","warnForStyleProps","ReactNativeFiberHostComponent","tag","viewConfig","_nativeTag","_children","blurTextInput","focusTextInput","callback","measure","measureInWindow","relativeToNativeNode","onSuccess","onFail","measureLayout","nativeProps","__DEV__","validAttributes","updatePayload","create","updateView","uiViewClassName","module","exports"],"mappings":";;AAaA;;AAEA,IAAIA,8BAA8BC,QAAQ,6BAAR,CAAlC;AACA,IAAIC,iBAAiBD,QAAQ,gBAAR,CAArB;AACA,IAAIE,YAAYF,QAAQ,WAAR,CAAhB;;eAKIA,QAAQ,yBAAR,C;IAFFG,iB,YAAAA,iB;IACAC,iB,YAAAA,iB;;IAqBIC,6B;AAKJ,yCAAYC,GAAZ,EAAyBC,UAAzB,EAAyE;AAAA;;AACvE,SAAKC,UAAL,GAAkBF,GAAlB;AACA,SAAKG,SAAL,GAAiB,EAAjB;AACA,SAAKF,UAAL,GAAkBA,UAAlB;AACD;;;;2BAEM;AACLN,qBAAeS,aAAf,CAA6B,KAAKF,UAAlC;AACD;;;4BAEO;AACNP,qBAAeU,cAAf,CAA8B,KAAKH,UAAnC;AACD;;;4BAEOI,Q,EAAoC;AAC1CV,gBAAUW,OAAV,CAAkB,KAAKL,UAAvB,EAAmCL,kBAAkB,IAAlB,EAAwBS,QAAxB,CAAnC;AACD;;;oCAEeA,Q,EAA4C;AAC1DV,gBAAUY,eAAV,CACE,KAAKN,UADP,EAEEL,kBAAkB,IAAlB,EAAwBS,QAAxB,CAFF;AAID;;;kCAGCG,oB,EACAC,S,EACAC,M,EACA;AACAf,gBAAUgB,aAAV,CACE,KAAKV,UADP,EAEEO,oBAFF,EAGEZ,kBAAkB,IAAlB,EAAwBc,MAAxB,CAHF,EAIEd,kBAAkB,IAAlB,EAAwBa,SAAxB,CAJF;AAMD;;;mCAEcG,W,EAAqB;AAClC,UAAIC,OAAJ,EAAa;AACXhB,0BAAkBe,WAAlB,EAA+B,KAAKZ,UAAL,CAAgBc,eAA/C;AACD;;AAED,UAAIC,gBAAgBvB,4BAA4BwB,MAA5B,CAClBJ,WADkB,EAElB,KAAKZ,UAAL,CAAgBc,eAFE,CAApB;;AAKAnB,gBAAUsB,UAAV,CACE,KAAKhB,UADP,EAEE,KAAKD,UAAL,CAAgBkB,eAFlB,EAGEH,aAHF;AAKD;;;;;AAGHI,OAAOC,OAAP,GAAiBtB,6BAAjB","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNativeFiberHostComponent\n * @flow\n * @preventMunge\n */\n\n'use strict';\n\nvar ReactNativeAttributePayload = require('ReactNativeAttributePayload');\nvar TextInputState = require('TextInputState');\nvar UIManager = require('UIManager');\n\nvar {\n  mountSafeCallback,\n  warnForStyleProps,\n} = require('NativeMethodsMixinUtils');\n\nimport type {\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n  NativeMethodsInterface,\n} from 'NativeMethodsMixinUtils';\nimport type {Instance} from 'ReactNativeFiber';\nimport type {\n  ReactNativeBaseComponentViewConfig,\n} from 'ReactNativeViewConfigRegistry';\n\n/**\n * This component defines the same methods as NativeMethodsMixin but without the\n * findNodeHandle wrapper. This wrapper is unnecessary for HostComponent views\n * and would also result in a circular require.js dependency (since\n * ReactNativeFiber depends on this component and NativeMethodsMixin depends on\n * ReactNativeFiber).\n */\nclass ReactNativeFiberHostComponent implements NativeMethodsInterface {\n  _children: Array<Instance | number>;\n  _nativeTag: number;\n  viewConfig: ReactNativeBaseComponentViewConfig;\n\n  constructor(tag: number, viewConfig: ReactNativeBaseComponentViewConfig) {\n    this._nativeTag = tag;\n    this._children = [];\n    this.viewConfig = viewConfig;\n  }\n\n  blur() {\n    TextInputState.blurTextInput(this._nativeTag);\n  }\n\n  focus() {\n    TextInputState.focusTextInput(this._nativeTag);\n  }\n\n  measure(callback: MeasureOnSuccessCallback) {\n    UIManager.measure(this._nativeTag, mountSafeCallback(this, callback));\n  }\n\n  measureInWindow(callback: MeasureInWindowOnSuccessCallback) {\n    UIManager.measureInWindow(\n      this._nativeTag,\n      mountSafeCallback(this, callback),\n    );\n  }\n\n  measureLayout(\n    relativeToNativeNode: number,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail: () => void /* currently unused */,\n  ) {\n    UIManager.measureLayout(\n      this._nativeTag,\n      relativeToNativeNode,\n      mountSafeCallback(this, onFail),\n      mountSafeCallback(this, onSuccess),\n    );\n  }\n\n  setNativeProps(nativeProps: Object) {\n    if (__DEV__) {\n      warnForStyleProps(nativeProps, this.viewConfig.validAttributes);\n    }\n\n    var updatePayload = ReactNativeAttributePayload.create(\n      nativeProps,\n      this.viewConfig.validAttributes,\n    );\n\n    UIManager.updateView(\n      this._nativeTag,\n      this.viewConfig.uiViewClassName,\n      updatePayload,\n    );\n  }\n}\n\nmodule.exports = ReactNativeFiberHostComponent;\n"]}]