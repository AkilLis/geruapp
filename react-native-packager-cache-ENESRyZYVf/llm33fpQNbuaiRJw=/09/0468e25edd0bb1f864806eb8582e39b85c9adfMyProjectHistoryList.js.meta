["6fce740d31c7810f18912a4fdc99c0536a3ec4e6","cc9b19514440cace30955553f5245ed3ea32a62b",["react","react-native","react-native-gifted-listview","react-native-gifted-spinner","./card/ProjectCardHistory"],[87,184,243,416,580],{"version":3,"sources":["/var/www/geruapp/src/project/components/MyProjectHistoryList.js"],"names":["MyProjectHistoryList","props","state","_renderRowView","bind","data","rowData","styles","separator","refreshCallback","defaultView","defaultViewTitle","paginateCallback","paginationView","actionsLabel","fontSize","container","onFetchMyProjectsHistory","_renderPaginationFetchigView","_renderPaginationWaitingView","_renderPaginationAllLoadedView","_renderEmptyView","_renderSeparatorView","create","flex","height","backgroundColor"],"mappings":";;;;AAAA;;;;AACA;;AAOA;;;;AACA;;;;AACA;;;;IAEqBA,oB;;;AAEjB,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA,wJACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa,EAAb;;AAEA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;AALiB;AAMlB;;;;6BAEKC,I,EAAM,CAEd;;;mCAEcC,O,EAAS;AACpB,aACE,8DAAoB,SAASA;AAA7B,QADF;AAIH;;;2CAEsB;AACnB,aACE,mDAAM,OAAOC,OAAOC,SAApB,GADF;AAGH;;;qCAEgBC,e,EAAiB;AAC9B,aACE;AAAA;AAAA,UAAM,OAAOF,OAAOG,WAApB;AACE;AAAA;AAAA,YAAM,OAAOH,OAAOI,gBAApB;AAAA;AAAA,SADF;AAKE;AAAA;AAAA;AACE,2BAAc,SADhB;AAEE,qBAASF;AAFX;AAIE;AAAA;AAAA;AAAA;AAAA;AAJF;AALF,OADF;AAgBH;;;iDAE4BG,gB,EAAkB;AAC3C,aACE;AAAA;AAAA;AACE,yBAAc,SADhB;AAEE,mBAASA,gBAFX;AAGE,iBAAOL,OAAOM;AAHhB;AAKE;AAAA;AAAA,YAAM,OAAO,CAACN,OAAOO,YAAR,EAAsB,EAAEC,UAAU,EAAZ,EAAtB,CAAb;AAAA;AAAA;AALF,OADF;AAWH;;;mDAE8B;AAC3B,aACE;AAAA;AAAA,UAAM,OAAOR,OAAOM,cAApB;AACE;AADF,OADF;AAKH;;;qDACiC;AAC9B,aACE,sDADF;AAKF;;;6BAES;AACR,aACE;AAAA;AAAA,UAAM,OAAON,OAAOS,SAApB;AACG;AACC,mBAAS,KAAKb,cADf;AAEC,mBAAS,KAAKF,KAAL,CAAWgB,wBAFrB;AAGC,2BAAiB,CAHlB;AAIC,uBAAa,IAJd;AAKC,sBAAY,IALb;AAMC,iCAAuB,KAAKC,4BAN7B;AAOC,iCAAuB,KAAKC,4BAP7B;AAQC,mCAAyB,KAAKC,8BAR/B;AASC,uBAAa,IATd;AAUC,iCAAuB,EAVxB;AAWC,+BAAqB,EAXtB;AAYC,qBAAW,KAAKC,gBAZjB;AAaC,2BAAiB,KAAKC,oBAbvB;AAcC,gCAAqB;AAdtB;AADH,OADF;AAoBD;;;;;kBAhGkBtB,oB;;;AAmGrB,IAAIO,SAAS,wBAAWgB,MAAX,CAAkB;AAC3BP,aAAW;AACPQ,UAAM;AADC,GADgB;;AAM3BhB,aAAW;AACViB,YAAQ,EADE;AAEVC,qBAAiB;AAFP;AANgB,CAAlB,CAAb","sourcesContent":["import React, { PropTypes, Component } from 'react'\nimport { \n\tStyleSheet,\n\tView, \n\tText,\n\tTouchableHighlight\n} from 'react-native'\n\nimport GiftedListView from 'react-native-gifted-listview'\nimport GiftedSpinner from 'react-native-gifted-spinner'\nimport ProjectCardHistory from './card/ProjectCardHistory'\n\nexport default class MyProjectHistoryList extends Component {\n  \n    constructor(props) {\n      super(props)\n    \n      this.state = {}\n\n      this._renderRowView = this._renderRowView.bind(this)\n    }\n\n\t_onPress(data) {\n\t    \n\t}\n\n\t_renderRowView(rowData) {\n\t    return (\n\t      <ProjectCardHistory project={rowData}\n\t      />\n\t    )\n\t}\n\n\t_renderSeparatorView() {\n\t    return (\n\t      <View style={styles.separator} />\n\t    )\n\t}\n\n\t_renderEmptyView(refreshCallback) {\n\t    return (\n\t      <View style={styles.defaultView}>\n\t        <Text style={styles.defaultViewTitle}>\n\t        \tТанд одоогоор дуусгасан ажил алга байна. Аливааг эхлэх хамгийн хэцүү байдаг.  \n\t        </Text>\n\n\t        <TouchableHighlight\n\t          underlayColor='#c8c7cc'\n\t          onPress={refreshCallback}\n\t        >\n\t          <Text>\n\t            ↻\n\t          </Text>\n\t        </TouchableHighlight>\n\t      </View>\n\t    )\n\t}\n\n\t_renderPaginationWaitingView(paginateCallback) {\n\t    return (\n\t      <TouchableHighlight\n\t        underlayColor='#c8c7cc'\n\t        onPress={paginateCallback}\n\t        style={styles.paginationView}\n\t      >\n\t        <Text style={[styles.actionsLabel, { fontSize: 13 }]}>\n\t          ЦААШ\n\t        </Text>\n\t      </TouchableHighlight>\n\t    )\n\t}\n\n\t_renderPaginationFetchigView() {\n\t    return (\n\t      <View style={styles.paginationView}>\n\t        <GiftedSpinner />\n\t      </View>\n\t    )\n\t}\n  _renderPaginationAllLoadedView() {\n\t    return (\n\t      <View>\n\t        \n\t      </View>\n\t    )\n  }\n\n  render () {\n    return (\n      <View style={styles.container}>\n        \t<GiftedListView\n\t\t        rowView={this._renderRowView}\n\t\t        onFetch={this.props.onFetchMyProjectsHistory}\n\t\t        initialListSize={8}\n\t\t        firstLoader={true}\n\t\t        pagination={true}\n\t\t        paginationFetchigView={this._renderPaginationFetchigView}\n\t\t        paginationWaitingView={this._renderPaginationWaitingView}\n\t\t        paginationAllLoadedView={this._renderPaginationAllLoadedView}\n\t\t        refreshable={true} \n\t\t        refreshableViewHeight={50} \n\t\t        refreshableDistance={40} \n\t\t        emptyView={this._renderEmptyView}\n\t\t        renderSeparator={this._renderSeparatorView}\n\t\t        refreshableTintColor=\"red\"\n\t        />\n      </View>\n    )\n  }\n}\n\nlet styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        //paddingHorizontal: 10,\n    },\n\n    separator: {\n\t    height: 10,\n\t    backgroundColor: 'transparent'\n\t},\n})\n"]}]