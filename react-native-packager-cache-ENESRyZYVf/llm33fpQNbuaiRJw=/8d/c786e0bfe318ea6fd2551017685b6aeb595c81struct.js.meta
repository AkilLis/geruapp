["429b608044b0d582289b84ef9d5855bc23c5aa80","bc448354506047d005624235245cc45bb305172d",["./assert","./isTypeName","./String","./Function","./isBoolean","./isObject","./isNil","./create","./getTypeName","./dict","./getDefaultInterfaceName","./extend"],[21,59,97,133,172,211,246,279,318,355,404,455],{"version":3,"sources":["/var/www/geruapp/node_modules/tcomb/lib/struct.js"],"names":["assert","require","isTypeName","String","Function","isBoolean","isObject","isNil","create","getTypeName","dict","getDefaultInterfaceName","extend","getDefaultName","props","extendStruct","mixins","name","struct","getOptions","options","hasOwnProperty","strict","defaultProps","process","env","NODE_ENV","is","stringify","displayName","Struct","value","path","join","k","expected","actual","undefined","concat","Object","freeze","meta","kind","identity","x","update","instance","patch","xs","module","exports"],"mappings":"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","sourcesContent":["var assert = require('./assert');\nvar isTypeName = require('./isTypeName');\nvar String = require('./String');\nvar Function = require('./Function');\nvar isBoolean = require('./isBoolean');\nvar isObject = require('./isObject');\nvar isNil = require('./isNil');\nvar create = require('./create');\nvar getTypeName = require('./getTypeName');\nvar dict = require('./dict');\nvar getDefaultInterfaceName = require('./getDefaultInterfaceName');\nvar extend = require('./extend');\n\nfunction getDefaultName(props) {\n  return 'Struct' + getDefaultInterfaceName(props);\n}\n\nfunction extendStruct(mixins, name) {\n  return extend(struct, mixins, name);\n}\n\nfunction getOptions(options) {\n  if (!isObject(options)) {\n    options = isNil(options) ? {} : { name: options };\n  }\n  if (!options.hasOwnProperty('strict')) {\n    options.strict = struct.strict;\n  }\n  if (!options.hasOwnProperty('defaultProps')) {\n    options.defaultProps = {};\n  }\n  return options;\n}\n\nfunction struct(props, options) {\n\n  options = getOptions(options);\n  var name = options.name;\n  var strict = options.strict;\n  var defaultProps = options.defaultProps;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(dict(String, Function).is(props), function () { return 'Invalid argument props ' + assert.stringify(props) + ' supplied to struct(props, [options]) combinator (expected a dictionary String -> Type)'; });\n    assert(isTypeName(name), function () { return 'Invalid argument name ' + assert.stringify(name) + ' supplied to struct(props, [options]) combinator (expected a string)'; });\n    assert(isBoolean(strict), function () { return 'Invalid argument strict ' + assert.stringify(strict) + ' supplied to struct(props, [options]) combinator (expected a boolean)'; });\n    assert(isObject(defaultProps), function () { return 'Invalid argument defaultProps ' + assert.stringify(defaultProps) + ' supplied to struct(props, [options]) combinator (expected an object)'; });\n  }\n\n  var displayName = name || getDefaultName(props);\n\n  function Struct(value, path) {\n\n    if (Struct.is(value)) { // implements idempotency\n      return value;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      path = path || [displayName];\n      assert(isObject(value), function () { return 'Invalid value ' + assert.stringify(value) + ' supplied to ' + path.join('/') + ' (expected an object)'; });\n      // strictness\n      if (strict) {\n        for (k in value) {\n          if (value.hasOwnProperty(k)) {\n            assert(props.hasOwnProperty(k), function () { return 'Invalid additional prop \"' + k + '\" supplied to ' + path.join('/'); });\n          }\n        }\n      }\n    }\n\n    if (!(this instanceof Struct)) { // `new` is optional\n      return new Struct(value, path);\n    }\n\n    for (var k in props) {\n      if (props.hasOwnProperty(k)) {\n        var expected = props[k];\n        var actual = value[k];\n        // apply defaults\n        if (actual === undefined) {\n          actual = defaultProps[k];\n        }\n        this[k] = create(expected, actual, ( process.env.NODE_ENV !== 'production' ? path.concat(k + ': ' + getTypeName(expected)) : null ));\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      Object.freeze(this);\n    }\n\n  }\n\n  Struct.meta = {\n    kind: 'struct',\n    props: props,\n    name: name,\n    identity: false,\n    strict: strict,\n    defaultProps: defaultProps\n  };\n\n  Struct.displayName = displayName;\n\n  Struct.is = function (x) {\n    return x instanceof Struct;\n  };\n\n  Struct.update = function (instance, patch) {\n    return new Struct(assert.update(instance, patch));\n  };\n\n  Struct.extend = function (xs, name) {\n    return extendStruct([Struct].concat(xs), name);\n  };\n\n  return Struct;\n}\n\nstruct.strict = false;\nstruct.getOptions = getOptions;\nstruct.getDefaultName = getDefaultName;\nstruct.extend = extendStruct;\nmodule.exports = struct;\n"]}]