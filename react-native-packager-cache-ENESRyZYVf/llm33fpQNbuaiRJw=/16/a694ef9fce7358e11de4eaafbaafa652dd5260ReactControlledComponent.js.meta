["5dcaa08a06d0ef3cea1c8843a3f21eb5fb32d82f","221e8d4c267ecdbcd7caf8480c104ffe640f9a7b",["EventPluginUtils","fbjs/lib/invariant"],[48,94],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/shared/event/ReactControlledComponent.js"],"names":["EventPluginUtils","require","invariant","fiberHostComponent","ReactControlledComponentInjection","injectFiberControlledHostComponent","hostComponentImpl","restoreTarget","restoreQueue","restoreStateOfTarget","target","internalInstance","getInstanceFromNode","tag","restoreControlledState","props","getFiberCurrentPropsFromNode","stateNode","type","ReactControlledComponent","injection","enqueueStateRestore","push","restoreStateIfNeeded","queuedTargets","i","length","module","exports"],"mappings":";;AAWA;;AAEA,IAAIA,mBAAmBC,QAAQ,kBAAR,CAAvB;;AAEA,IAAIC,YAAYD,QAAQ,oBAAR,CAAhB;;AAIA,IAAIE,qBAAqB,IAAzB;;AAEA,IAAIC,oCAAoC;AACtCC,sCAAoC,4CAASC,iBAAT,EAA4B;AAG9DH,yBAAqBG,iBAArB;AACD;AALqC,CAAxC;;AAQA,IAAIC,gBAAgB,IAApB;AACA,IAAIC,eAAe,IAAnB;;AAEA,SAASC,oBAAT,CAA8BC,MAA9B,EAAsC;AAGpC,MAAIC,mBAAmBX,iBAAiBY,mBAAjB,CAAqCF,MAArC,CAAvB;AACA,MAAI,CAACC,gBAAL,EAAuB;AAErB;AACD;AACD,MAAI,OAAOA,iBAAiBE,GAAxB,KAAgC,QAApC,EAA8C;AAC5CX,cACEC,sBACE,OAAOA,mBAAmBW,sBAA1B,KAAqD,UAFzD,EAGE,wEACE,SAJJ;AAMA,QAAMC,QAAQf,iBAAiBgB,4BAAjB,CACZL,iBAAiBM,SADL,CAAd;AAGAd,uBAAmBW,sBAAnB,CACEH,iBAAiBM,SADnB,EAEEN,iBAAiBO,IAFnB,EAGEH,KAHF;AAKA;AACD;AACDb,YACE,OAAOS,iBAAiBG,sBAAxB,KAAmD,UADrD,EAEE,uDAFF;;AAKAH,mBAAiBG,sBAAjB;AACD;;AAED,IAAIK,2BAA2B;AAC7BC,aAAWhB,iCADkB;;AAG7BiB,qBAH6B,+BAGTX,MAHS,EAGD;AAC1B,QAAIH,aAAJ,EAAmB;AACjB,UAAIC,YAAJ,EAAkB;AAChBA,qBAAac,IAAb,CAAkBZ,MAAlB;AACD,OAFD,MAEO;AACLF,uBAAe,CAACE,MAAD,CAAf;AACD;AACF,KAND,MAMO;AACLH,sBAAgBG,MAAhB;AACD;AACF,GAb4B;AAe7Ba,sBAf6B,kCAeN;AACrB,QAAI,CAAChB,aAAL,EAAoB;AAClB;AACD;AACD,QAAIG,SAASH,aAAb;AACA,QAAIiB,gBAAgBhB,YAApB;AACAD,oBAAgB,IAAhB;AACAC,mBAAe,IAAf;;AAEAC,yBAAqBC,MAArB;AACA,QAAIc,aAAJ,EAAmB;AACjB,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,cAAcE,MAAlC,EAA0CD,GAA1C,EAA+C;AAC7ChB,6BAAqBe,cAAcC,CAAd,CAArB;AACD;AACF;AACF;AA9B4B,CAA/B;;AAiCAE,OAAOC,OAAP,GAAiBT,wBAAjB","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactControlledComponent\n */\n\n'use strict';\n\nvar EventPluginUtils = require('EventPluginUtils');\n\nvar invariant = require('fbjs/lib/invariant');\n\n// Use to restore controlled state after a change event has fired.\n\nvar fiberHostComponent = null;\n\nvar ReactControlledComponentInjection = {\n  injectFiberControlledHostComponent: function(hostComponentImpl) {\n    // The fiber implementation doesn't use dynamic dispatch so we need to\n    // inject the implementation.\n    fiberHostComponent = hostComponentImpl;\n  },\n};\n\nvar restoreTarget = null;\nvar restoreQueue = null;\n\nfunction restoreStateOfTarget(target) {\n  // We perform this translation at the end of the event loop so that we\n  // always receive the correct fiber here\n  var internalInstance = EventPluginUtils.getInstanceFromNode(target);\n  if (!internalInstance) {\n    // Unmounted\n    return;\n  }\n  if (typeof internalInstance.tag === 'number') {\n    invariant(\n      fiberHostComponent &&\n        typeof fiberHostComponent.restoreControlledState === 'function',\n      'Fiber needs to be injected to handle a fiber target for controlled ' +\n        'events.',\n    );\n    const props = EventPluginUtils.getFiberCurrentPropsFromNode(\n      internalInstance.stateNode,\n    );\n    fiberHostComponent.restoreControlledState(\n      internalInstance.stateNode,\n      internalInstance.type,\n      props,\n    );\n    return;\n  }\n  invariant(\n    typeof internalInstance.restoreControlledState === 'function',\n    'The internal instance must be a React host component.',\n  );\n  // If it is not a Fiber, we can just use dynamic dispatch.\n  internalInstance.restoreControlledState();\n}\n\nvar ReactControlledComponent = {\n  injection: ReactControlledComponentInjection,\n\n  enqueueStateRestore(target) {\n    if (restoreTarget) {\n      if (restoreQueue) {\n        restoreQueue.push(target);\n      } else {\n        restoreQueue = [target];\n      }\n    } else {\n      restoreTarget = target;\n    }\n  },\n\n  restoreStateIfNeeded() {\n    if (!restoreTarget) {\n      return;\n    }\n    var target = restoreTarget;\n    var queuedTargets = restoreQueue;\n    restoreTarget = null;\n    restoreQueue = null;\n\n    restoreStateOfTarget(target);\n    if (queuedTargets) {\n      for (var i = 0; i < queuedTargets.length; i++) {\n        restoreStateOfTarget(queuedTargets[i]);\n      }\n    }\n  },\n};\n\nmodule.exports = ReactControlledComponent;\n"]}]