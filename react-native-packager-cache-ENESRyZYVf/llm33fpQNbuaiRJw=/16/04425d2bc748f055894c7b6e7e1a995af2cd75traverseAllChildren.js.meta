["810479c5b969c537eec50516605c370405194e48","238859c75dc2937912664aeddd9c9f152eda7f1a",["react/lib/ReactCurrentOwner","ReactElementSymbol","getIteratorFn","fbjs/lib/invariant","KeyEscapeUtils","fbjs/lib/warning"],[49,114,166,208,260,301],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/shared/utils/traverseAllChildren.js"],"names":["ReactCurrentOwner","require","REACT_ELEMENT_TYPE","getIteratorFn","invariant","KeyEscapeUtils","warning","SEPARATOR","SUBSEPARATOR","didWarnAboutMaps","getComponentKey","component","index","key","escape","toString","traverseAllChildrenImpl","children","nameSoFar","callback","traverseContext","type","$$typeof","child","nextName","subtreeCount","nextNamePrefix","Array","isArray","i","length","iteratorFn","__DEV__","entries","mapsAsChildrenAddendum","current","mapsAsChildrenOwnerName","getName","iterator","call","step","ii","next","done","value","addendum","name","childrenString","Object","keys","join","traverseAllChildren","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar REACT_ELEMENT_TYPE = require('ReactElementSymbol');\n\nvar getIteratorFn = require('getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar KeyEscapeUtils = require('KeyEscapeUtils');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * This is inlined from ReactElement since this file is shared between\n * isomorphic and renderers. We could extract this to a\n *\n */\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(\n  children,\n  nameSoFar,\n  callback,\n  traverseContext,\n) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (\n    children === null ||\n    type === 'string' ||\n    type === 'number' ||\n    // The following is inlined from ReactElement. This means we can optimize\n    // some checks. React Fiber also inlines this logic for similar purposes.\n    (type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE)\n  ) {\n    callback(\n      traverseContext,\n      children,\n      // If it's the only child, treat the name as if it was wrapped in an array\n      // so that it's consistent if the number of children grows.\n      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,\n    );\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(\n        child,\n        nextName,\n        callback,\n        traverseContext,\n      );\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      if (__DEV__) {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          let mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = '\\n\\nCheck the render method of `' +\n                mapsAsChildrenOwnerName +\n                '`.';\n            }\n          }\n          warning(\n            didWarnAboutMaps,\n            'Using Maps as children is unsupported and will likely yield ' +\n              'unexpected results. Convert it to a sequence/iterable of keyed ' +\n              'ReactElements instead.%s',\n            mapsAsChildrenAddendum,\n          );\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step;\n      var ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(\n          child,\n          nextName,\n          callback,\n          traverseContext,\n        );\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (__DEV__) {\n        addendum = ' If you meant to render a collection of children, use an array ' +\n          'instead.';\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += '\\n\\nCheck the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = '' + children;\n      invariant(\n        false,\n        'Objects are not valid as a React child (found: %s).%s',\n        childrenString === '[object Object]'\n          ? 'object with keys {' + Object.keys(children).join(', ') + '}'\n          : childrenString,\n        addendum,\n      );\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n"]}]