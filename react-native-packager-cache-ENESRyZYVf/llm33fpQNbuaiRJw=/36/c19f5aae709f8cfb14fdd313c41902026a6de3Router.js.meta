["fb3b26efc56b0240580a68da33be88aadf259c3e","c0848460c88ce2aea44203039a14ed224eaf79c5",["react","react-native","react-native-experimental-navigation","./Actions","./State","./Reducer","./DefaultRenderer","./Scene","./ActionConst"],[87,184,251,431,530,625,734,857,956],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-router-flux/src/Router.js"],"names":["ActionConst","NavigationRootContainer","RootContainer","propTypes","dispatch","func","backAndroidHandler","onBackAndroid","onExitApp","Router","props","renderNavigation","bind","handleProps","handleBackAndroid","reducer","state","routes","addEventListener","setState","removeEventListener","androidBack","err","scenesMap","scenes","children","Array","isArray","component","create","wrapBy","styles","createReducer","parentProps","rootProps","initialState","reducerCreator","routerReducer","navigationState","onNavigate","get","key","REFRESH","callback","constAction","type","childContextTypes","object"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Pavel Aksonov\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport React, {\n  Component,\n  PropTypes,\n} from 'react';\nimport { BackHandler } from 'react-native';\nimport NavigationExperimental from 'react-native-experimental-navigation';\n\nimport Actions, { ActionMap } from './Actions';\nimport getInitialStateFromRoot from './State';\nimport Reducer, { findElement } from './Reducer';\nimport DefaultRenderer from './DefaultRenderer';\nimport Scene from './Scene';\nimport * as ActionConst from './ActionConst';\n\nconst {\n  RootContainer: NavigationRootContainer,\n} = NavigationExperimental;\n\nconst propTypes = {\n  dispatch: PropTypes.func,\n  backAndroidHandler: PropTypes.func,\n  onBackAndroid: PropTypes.func,\n  onExitApp: PropTypes.func,\n};\n\nclass Router extends Component {\n  static childContextTypes = {\n    routes: PropTypes.object,\n  }\n\n  constructor(props) {\n    super(props);\n    this.renderNavigation = this.renderNavigation.bind(this);\n    this.handleProps = this.handleProps.bind(this);\n    this.handleBackAndroid = this.handleBackAndroid.bind(this);\n    const reducer = this.handleProps(props);\n    this.state = { reducer };\n  }\n\n  getChildContext() {\n    return {\n      routes: Actions,\n    };\n  }\n\n  componentDidMount() {\n    BackHandler.addEventListener('hardwareBackPress', this.handleBackAndroid);\n  }\n\n  componentWillReceiveProps(props) {\n    const reducer = this.handleProps(props);\n    this.setState({ reducer });\n  }\n\n  componentWillUnmount() {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBackAndroid);\n  }\n\n  handleBackAndroid() {\n    const {\n      backAndroidHandler,\n      onBackAndroid,\n      onExitApp,\n    } = this.props;\n    // optional for customizing handler\n    if (backAndroidHandler) {\n      return backAndroidHandler();\n    }\n\n    try {\n      Actions.androidBack();\n      if (onBackAndroid) {\n        onBackAndroid();\n      }\n      return true;\n    } catch (err) {\n      if (onExitApp) {\n        return onExitApp();\n      }\n\n      return false;\n    }\n  }\n\n  handleProps(props) {\n    let scenesMap;\n\n    if (props.scenes) {\n      scenesMap = props.scenes;\n    } else {\n      let scenes = props.children;\n\n      if (Array.isArray(props.children) || props.children.props.component) {\n        scenes = (\n          <Scene\n            key=\"__root\"\n            hideNav\n            {...this.props}\n          >\n            {props.children}\n          </Scene>\n        );\n      }\n      scenesMap = Actions.create(scenes, props.wrapBy);\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    const { children, styles, scenes, reducer, createReducer, ...parentProps } = props;\n\n    scenesMap.rootProps = parentProps;\n\n    const initialState = getInitialStateFromRoot(scenesMap);\n    const reducerCreator = props.createReducer || Reducer;\n\n    const routerReducer = props.reducer || (\n      reducerCreator({\n        initialState,\n        scenes: scenesMap,\n      }));\n\n    return routerReducer;\n  }\n\n  renderNavigation(navigationState, onNavigate) {\n    if (!navigationState) {\n      return null;\n    }\n    Actions.get = key => findElement(navigationState, key, ActionConst.REFRESH);\n    Actions.callback = (props) => {\n      const constAction = (props.type && ActionMap[props.type] ? ActionMap[props.type] : null);\n      if (this.props.dispatch) {\n        if (constAction) {\n          this.props.dispatch({ ...props, type: constAction });\n        } else {\n          this.props.dispatch(props);\n        }\n      }\n      return (constAction ? onNavigate({ ...props, type: constAction }) : onNavigate(props));\n    };\n\n    return <DefaultRenderer onNavigate={onNavigate} navigationState={navigationState} />;\n  }\n\n  render() {\n    if (!this.state.reducer) return null;\n\n    return (\n      <NavigationRootContainer\n        reducer={this.state.reducer}\n        renderNavigation={this.renderNavigation}\n      />\n    );\n  }\n}\n\nRouter.propTypes = propTypes;\n\nexport default Router;\n"]}]