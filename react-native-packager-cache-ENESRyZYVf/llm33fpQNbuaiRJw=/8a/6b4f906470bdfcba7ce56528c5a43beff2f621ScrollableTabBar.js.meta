["62868c4eed0f7ca9f79298c7bef067f87d68e247","d789f4eee2fbe34879264978edb57c5b062ba107",["react","react-native","./Button"],[20,72,462],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-scrollable-tab-view/ScrollableTabBar.js"],"names":["React","require","ReactNative","ViewPropTypes","View","Animated","StyleSheet","ScrollView","Text","Platform","Dimensions","Button","WINDOW_WIDTH","get","width","ScrollableTabBar","createClass","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","scrollOffset","style","tabStyle","tabsContainerStyle","textStyle","renderTab","underlineStyle","onScroll","getDefaultProps","getInitialState","_tabsMeasurements","_leftTabUnderline","Value","_widthTabUnderline","_containerWidth","componentDidMount","props","scrollValue","addListener","updateView","offset","position","Math","floor","value","pageOffset","tabCount","length","lastTabPosition","necessarilyMeasurementsCompleted","updateTabPanel","updateTabUnderline","isLastTab","_tabContainerMeasurements","_containerMeasurements","containerWidth","tabWidth","nextTabMeasurements","nextTabWidth","tabOffset","left","absolutePageOffset","newScrollX","OS","_scrollView","scrollTo","x","y","animated","rightBoundScroll","lineLeft","lineRight","right","nextTabLeft","nextTabRight","newLineLeft","newLineRight","state","setValue","name","page","isTabActive","onPressHandler","onLayoutHandler","textColor","fontWeight","styles","tab","color","measureTab","event","nativeEvent","layout","height","_value","render","tabUnderlineStyle","bottom","dynamicTabUnderline","container","onContainerLayout","scrollView","onTabContainerLayout","map","bind","componentWillReceiveProps","nextProps","JSON","stringify","setState","e","module","exports","create","alignItems","justifyContent","paddingLeft","paddingRight","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderColor","flexDirection"],"mappings":"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","sourcesContent":["const React = require('react');\nconst { ViewPropTypes } = ReactNative = require('react-native');\nconst {\n  View,\n  Animated,\n  StyleSheet,\n  ScrollView,\n  Text,\n  Platform,\n  Dimensions,\n} = ReactNative;\nconst Button = require('./Button');\n\nconst WINDOW_WIDTH = Dimensions.get('window').width;\n\nconst ScrollableTabBar = React.createClass({\n  propTypes: {\n    goToPage: React.PropTypes.func,\n    activeTab: React.PropTypes.number,\n    tabs: React.PropTypes.array,\n    backgroundColor: React.PropTypes.string,\n    activeTextColor: React.PropTypes.string,\n    inactiveTextColor: React.PropTypes.string,\n    scrollOffset: React.PropTypes.number,\n    style: ViewPropTypes.style,\n    tabStyle: ViewPropTypes.style,\n    tabsContainerStyle: ViewPropTypes.style,\n    textStyle: Text.propTypes.style,\n    renderTab: React.PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    onScroll:React.PropTypes.func,\n  },\n\n  getDefaultProps() {\n    return {\n      scrollOffset: 52,\n      activeTextColor: 'navy',\n      inactiveTextColor: 'black',\n      backgroundColor: null,\n      style: {},\n      tabStyle: {},\n      tabsContainerStyle: {},\n      underlineStyle: {},\n    };\n  },\n\n  getInitialState() {\n    this._tabsMeasurements = [];\n    return {\n      _leftTabUnderline: new Animated.Value(0),\n      _widthTabUnderline: new Animated.Value(0),\n      _containerWidth: null,\n    };\n  },\n\n  componentDidMount() {\n    this.props.scrollValue.addListener(this.updateView);\n  },\n\n  updateView(offset) {\n    const position = Math.floor(offset.value);\n    const pageOffset = offset.value % 1;\n    const tabCount = this.props.tabs.length;\n    const lastTabPosition = tabCount - 1;\n\n    if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\n      return;\n    }\n\n    if (this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {\n      this.updateTabPanel(position, pageOffset);\n      this.updateTabUnderline(position, pageOffset, tabCount);\n    }\n  },\n\n  necessarilyMeasurementsCompleted(position, isLastTab) {\n    return this._tabsMeasurements[position] &&\n      (isLastTab || this._tabsMeasurements[position + 1]) &&\n      this._tabContainerMeasurements &&\n      this._containerMeasurements;\n  },\n\n  updateTabPanel(position, pageOffset) {\n    const containerWidth = this._containerMeasurements.width;\n    const tabWidth = this._tabsMeasurements[position].width;\n    const nextTabMeasurements = this._tabsMeasurements[position + 1];\n    const nextTabWidth = nextTabMeasurements && nextTabMeasurements.width || 0;\n    const tabOffset = this._tabsMeasurements[position].left;\n    const absolutePageOffset = pageOffset * tabWidth;\n    let newScrollX = tabOffset + absolutePageOffset;\n\n    // center tab and smooth tab change (for when tabWidth changes a lot between two tabs)\n    newScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;\n    newScrollX = newScrollX >= 0 ? newScrollX : 0;\n\n    if (Platform.OS === 'android') {\n      this._scrollView.scrollTo({x: newScrollX, y: 0, animated: false, });\n    } else {\n      const rightBoundScroll = this._tabContainerMeasurements.width - (this._containerMeasurements.width);\n      newScrollX = newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n      this._scrollView.scrollTo({x: newScrollX, y: 0, animated: false, });\n    }\n\n  },\n\n  updateTabUnderline(position, pageOffset, tabCount) {\n    const lineLeft = this._tabsMeasurements[position].left;\n    const lineRight = this._tabsMeasurements[position].right;\n\n    if (position < tabCount - 1) {\n      const nextTabLeft = this._tabsMeasurements[position + 1].left;\n      const nextTabRight = this._tabsMeasurements[position + 1].right;\n\n      const newLineLeft = (pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft);\n      const newLineRight = (pageOffset * nextTabRight + (1 - pageOffset) * lineRight);\n\n      this.state._leftTabUnderline.setValue(newLineLeft);\n      this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n    } else {\n      this.state._leftTabUnderline.setValue(lineLeft);\n      this.state._widthTabUnderline.setValue(lineRight - lineLeft);\n    }\n  },\n\n  renderTab(name, page, isTabActive, onPressHandler, onLayoutHandler) {\n    const { activeTextColor, inactiveTextColor, textStyle, } = this.props;\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    const fontWeight = isTabActive ? 'bold' : 'normal';\n\n    return <Button\n      key={`${name}_${page}`}\n      accessible={true}\n      accessibilityLabel={name}\n      accessibilityTraits='button'\n      onPress={() => onPressHandler(page)}\n      onLayout={onLayoutHandler}\n    >\n      <View style={[styles.tab, this.props.tabStyle, ]}>\n        <Text style={[{color: textColor, fontWeight, }, textStyle, ]}>\n          {name}\n        </Text>\n      </View>\n    </Button>;\n  },\n\n  measureTab(page, event) {\n    const { x, width, height, } = event.nativeEvent.layout;\n    this._tabsMeasurements[page] = {left: x, right: x + width, width, height, };\n    this.updateView({value: this.props.scrollValue._value, });\n  },\n\n  render() {\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      height: 4,\n      backgroundColor: 'navy',\n      bottom: 0,\n    };\n\n    const dynamicTabUnderline = {\n      left: this.state._leftTabUnderline,\n      width: this.state._widthTabUnderline,\n    };\n\n    return <View\n      style={[styles.container, {backgroundColor: this.props.backgroundColor, }, this.props.style, ]}\n      onLayout={this.onContainerLayout}\n    >\n      <ScrollView\n        ref={(scrollView) => { this._scrollView = scrollView; }}\n        horizontal={true}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n        directionalLockEnabled={true}\n        bounces={false}\n        scrollsToTop={false}\n      >\n        <View\n          style={[styles.tabs, {width: this.state._containerWidth, }, this.props.tabsContainerStyle, ]}\n          ref={'tabContainer'}\n          onLayout={this.onTabContainerLayout}\n        >\n          {this.props.tabs.map((name, page) => {\n            const isTabActive = this.props.activeTab === page;\n            const renderTab = this.props.renderTab || this.renderTab;\n            return renderTab(name, page, isTabActive, this.props.goToPage, this.measureTab.bind(this, page));\n          })}\n          <Animated.View style={[tabUnderlineStyle, dynamicTabUnderline, this.props.underlineStyle, ]} />\n        </View>\n      </ScrollView>\n    </View>;\n  },\n\n  componentWillReceiveProps(nextProps) {\n    // If the tabs change, force the width of the tabs container to be recalculated\n    if (JSON.stringify(this.props.tabs) !== JSON.stringify(nextProps.tabs) && this.state._containerWidth) {\n      this.setState({ _containerWidth: null, });\n    }\n  },\n\n  onTabContainerLayout(e) {\n    this._tabContainerMeasurements = e.nativeEvent.layout;\n    let width = this._tabContainerMeasurements.width;\n    if (width < WINDOW_WIDTH) {\n      width = WINDOW_WIDTH;\n    }\n    this.setState({ _containerWidth: width, });\n    this.updateView({value: this.props.scrollValue._value, });\n  },\n\n  onContainerLayout(e) {\n    this._containerMeasurements = e.nativeEvent.layout;\n    this.updateView({value: this.props.scrollValue._value, });\n  },\n});\n\nmodule.exports = ScrollableTabBar;\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 49,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 20,\n    paddingRight: 20,\n  },\n  container: {\n    height: 50,\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: '#ccc',\n  },\n  tabs: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n});\n"]}]