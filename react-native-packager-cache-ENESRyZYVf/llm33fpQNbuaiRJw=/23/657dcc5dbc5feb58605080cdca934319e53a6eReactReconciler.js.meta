["6f244c84d8e0577cadd49d3c78928780c45695f9","5035223303e4d5a18aa7e3284e8f02330e673287",["ReactRef","ReactInstrumentation","fbjs/lib/warning"],[40,88,136],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/stack/reconciler/ReactReconciler.js"],"names":["ReactRef","require","ReactInstrumentation","warning","attachRefs","_currentElement","ReactReconciler","mountComponent","internalInstance","transaction","hostParent","hostContainerInfo","context","parentDebugID","__DEV__","_debugID","debugTool","onBeforeMountComponent","markup","ref","getReactMountReady","enqueue","onMountComponent","getHostNode","unmountComponent","safely","skipLifecycle","onBeforeUnmountComponent","detachRefs","onUnmountComponent","receiveComponent","nextElement","prevElement","_context","onBeforeUpdateComponent","refsChanged","shouldUpdateRefs","onUpdateComponent","performUpdateIfNecessary","updateBatchNumber","_updateBatchNumber","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconciler\n */\n\n'use strict';\n\nvar ReactRef = require('ReactRef');\nvar ReactInstrumentation = require('ReactInstrumentation');\n\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} the containing host component instance\n   * @param {?object} info about the host container\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function(\n    internalInstance,\n    transaction,\n    hostParent,\n    hostContainerInfo,\n    context,\n    parentDebugID, // 0 in production and for roots\n  ) {\n    if (__DEV__) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeMountComponent(\n          internalInstance._debugID,\n          internalInstance._currentElement,\n          parentDebugID,\n        );\n      }\n    }\n    var markup = internalInstance.mountComponent(\n      transaction,\n      hostParent,\n      hostContainerInfo,\n      context,\n      parentDebugID,\n    );\n    if (\n      internalInstance._currentElement &&\n      internalInstance._currentElement.ref != null\n    ) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n    if (__DEV__) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onMountComponent(\n          internalInstance._debugID,\n        );\n      }\n    }\n    return markup;\n  },\n\n  /**\n   * Returns a value that can be passed to\n   * ReactComponentEnvironment.replaceNodeWithMarkup.\n   */\n  getHostNode: function(internalInstance) {\n    return internalInstance.getHostNode();\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function(internalInstance, safely, skipLifecycle) {\n    if (__DEV__) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUnmountComponent(\n          internalInstance._debugID,\n        );\n      }\n    }\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent(safely, skipLifecycle);\n    if (__DEV__) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUnmountComponent(\n          internalInstance._debugID,\n        );\n      }\n    }\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function(\n    internalInstance,\n    nextElement,\n    transaction,\n    context,\n  ) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && context === internalInstance._context) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n\n      // TODO: Bailing out early is just a perf optimization right?\n      // TODO: Removing the return statement should affect correctness?\n      return;\n    }\n\n    if (__DEV__) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(\n          internalInstance._debugID,\n          nextElement,\n        );\n      }\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (\n      refsChanged &&\n      internalInstance._currentElement &&\n      internalInstance._currentElement.ref != null\n    ) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n\n    if (__DEV__) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(\n          internalInstance._debugID,\n        );\n      }\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function(\n    internalInstance,\n    transaction,\n    updateBatchNumber,\n  ) {\n    if (internalInstance._updateBatchNumber !== updateBatchNumber) {\n      // The component's enqueued batch number should always be the current\n      // batch or the following one.\n      warning(\n        internalInstance._updateBatchNumber == null ||\n          internalInstance._updateBatchNumber === updateBatchNumber + 1,\n        'performUpdateIfNecessary: Unexpected batch number (current %s, ' +\n          'pending %s)',\n        updateBatchNumber,\n        internalInstance._updateBatchNumber,\n      );\n      return;\n    }\n    if (__DEV__) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(\n          internalInstance._debugID,\n          internalInstance._currentElement,\n        );\n      }\n    }\n    internalInstance.performUpdateIfNecessary(transaction);\n    if (__DEV__) {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(\n          internalInstance._debugID,\n        );\n      }\n    }\n  },\n};\n\nmodule.exports = ReactReconciler;\n"]}]