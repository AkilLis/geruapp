["ac6daa238a5beb3d49bd48b0029766379b4bb954","b95181daee38e54e6fc1036cfa30fe9317027ef1",["react","react-native-vector-icons/Ionicons","react-native","react-native-vector-icons","../brand/selection.json","../styles/variables"],[87,181,313,369,425,546],{"version":3,"sources":["/var/www/geruapp/src/components/TaggableSearch.js"],"names":["IconSet","TaggableSearch","tags","props","onSearchFired","styles","searchContainer","length","emptyContainer","emptyText","centerCenter","width","BRAND_BLACK","tagContainer","map","item","tagItem","justifyContent","alignItems","tagLabel","paddingRight","height","borderRadius","backgroundColor","create","flexDirection","paddingVertical","borderColor","flex","padding","marginLeft","fontFamily","regular","color","fontSize","paddingLeft","tagRemove","propTypes","array","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { PropTypes, Component } from 'react'\nimport Icon from 'react-native-vector-icons/Ionicons'\nimport { StyleSheet, View, TouchableWithoutFeedback, TouchableOpacity, Text, ScrollView } from 'react-native'\n\nimport { createIconSetFromIcoMoon } from 'react-native-vector-icons'\nimport brandLocationConfig from '../brand/selection.json'\nconst IconSet = createIconSetFromIcoMoon(brandLocationConfig)\nimport variables, { layout, font } from '../styles/variables'\n\nexport default class TaggableSearch extends Component {\n\n  render() {\n\n    var { tags } = this.props\n\n    return (\n      <TouchableWithoutFeedback onPress={this.props.onSearchFired}>\n        <View style={styles.searchContainer}>\n            { tags.length == 0 && (\n                <View style={styles.emptyContainer}>\n                  <Icon name=\"ios-search-outline\" \n                        color=\"#b5b5b5\" \n                        size={20}/>\n                  <Text style={styles.emptyText}>\n                      Browse showcase\n                  </Text>\n                </View>\n              )\n            }\n\n            <View style={styles.emptyContainer}>\n              <View style={[ layout.centerCenter, { width: 40, }]}>\n                <IconSet name=\"search\"\n                         size={21}\n                         color={variables.BRAND_BLACK}\n                />\n              </View>\n              <ScrollView horizontal={true}\n                          showsHorizontalScrollIndicator={false}\n                          automaticallyAdjustContentInsets={false}\n                          backfaceVisibility={false}\n                          style={styles.tagContainer}>\n                {\n                    tags.map((item) => (\n                      <TouchableWithoutFeedback onPress={this.props.onSearchFired}>\n                        <View style={[styles.tagItem, { justifyContent: 'space-between', alignItems: 'center', }]}>\n                          <Text style={styles.tagLabel}>\n                             {item}\n                          </Text>\n                          <TouchableOpacity style={[{ width: 30, justifyContent: 'center', alignItems: 'flex-end', paddingRight: 5, }]}>\n                            <View style={[layout.centerCenter, { width: 20, height: 20, borderRadius: 20, backgroundColor: '#fff'}]}>\n                              <IconSet name=\"close\" \n                                       size={9} \n                                       color={variables.BRAND_BLACK}\n                              />\n                            </View>\n                          </TouchableOpacity>\n                        </View>\n                      </TouchableWithoutFeedback>\n                    ))\n                }\n              </ScrollView>\n            </View>\n        </View>\n      </TouchableWithoutFeedback>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  searchContainer: {\n    flexDirection: 'row',\n    //width: 210,\n    //paddingHorizontal: 10,\n    paddingVertical: 5,\n    backgroundColor: '#efefef',\n    borderRadius: 4,\n    borderColor: '#b5b5b5',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n  },\n\n  emptyContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n  },\n\n  emptyText: {\n    padding: 3,\n    marginLeft: 5,\n    fontFamily: font.regular,\n    color: '#b5b5b5',\n    fontSize: 16,\n  },\n\n  tagContainer: {\n    paddingRight: 10,\n    flex: 1,\n  },\n\n  tagItem: {\n    flexDirection: 'row',\n    paddingLeft: 10,\n    paddingVertical: 5,\n    borderRadius: 5,\n    marginLeft: 3,\n    backgroundColor: 'rgba(254,95,85, 0.6)',\n  },\n\n  tagLabel: {\n    color: '#fff',\n    fontFamily: font.regular,\n    fontSize: 17,\n  },\n\n  tagRemove: {\n    padding: 3,\n    marginLeft: 3,\n  }\n})\n\nTaggableSearch.propTypes = {\n    tags: PropTypes.array,\n    onSearchFired: PropTypes.func\n}\n\nTaggableSearch.defaultProps = {\n    //tags: [],\n    tags: ['Дээл', 'Цагаан сар', 'Хүннү','Дээл', 'Цагаан сар', 'Хүннү'],\n    onSearchFired: null,\n}"]}]