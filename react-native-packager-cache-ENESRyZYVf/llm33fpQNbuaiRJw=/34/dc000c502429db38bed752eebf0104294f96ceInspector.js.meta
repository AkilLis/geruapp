["557c25baa79529934ce5a35da46daa8a51bb880d","7a9b2c70f8f5bbb9ff424bf476dfd549ff404fda",["Dimensions","InspectorOverlay","InspectorPanel","InspectorUtils","Platform","React","StyleSheet","Touchable","UIManager","View","flattenStyle"],[42,88,138,186,228,261,296,335,373,406,526],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Inspector/Inspector.js"],"names":["Dimensions","require","InspectorOverlay","InspectorPanel","InspectorUtils","Platform","React","StyleSheet","Touchable","UIManager","View","window","__REACT_DEVTOOLS_GLOBAL_HOOK__","resolveRNStyle","Inspector","props","state","devtoolsAgent","hierarchy","panelPos","inspecting","perfing","inspected","selection","inspectedViewTag","networking","attachToDevtools","bind","on","reactDevtoolsAgent","_subs","map","fn","off","newProps","setState","i","instance","publicInstance","source","measure","getHostNode","x","y","width","height","left","top","frame","style","touched","pointerY","getOwnerHierarchy","lastNotNativeInstance","selectFromReactInstance","get","indexOf","val","TOUCH_TARGET_DEBUG","onRequestRerenderApp","panelContainerStyle","bottom","OS","styles","container","onTouchInstance","panelContainer","setPerfing","setInspecting","setSelection","setTouchTargetting","setNetworking","Component","agent","_hideWait","hlSub","sub","node","name","clearTimeout","hideSub","setTimeout","create","position","backgroundColor","right","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Inspector\n * @flow\n */\n\n/* eslint-disable dot-notation, no-dimensions-get-window */\n\n'use strict';\n\nconst Dimensions = require('Dimensions');\nconst InspectorOverlay = require('InspectorOverlay');\nconst InspectorPanel = require('InspectorPanel');\nconst InspectorUtils = require('InspectorUtils');\nconst Platform = require('Platform');\nconst React = require('React');\nconst StyleSheet = require('StyleSheet');\nconst Touchable = require('Touchable');\nconst UIManager = require('UIManager');\nconst View = require('View');\n\nif (window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {\n  // required for devtools to be able to edit react native styles\n  window.__REACT_DEVTOOLS_GLOBAL_HOOK__.resolveRNStyle = require('flattenStyle');\n}\n\nclass Inspector extends React.Component {\n  props: {\n    inspectedViewTag: ?number,\n    onRequestRerenderApp: (callback: (tag: ?number) => void) => void\n  };\n\n  state: {\n    devtoolsAgent: ?Object,\n    hierarchy: any,\n    panelPos: string,\n    inspecting: bool,\n    selection: ?number,\n    perfing: bool,\n    inspected: any,\n    inspectedViewTag: any,\n    networking: bool,\n  };\n\n  _subs: ?Array<() => void>;\n\n  constructor(props: Object) {\n    super(props);\n\n    this.state = {\n      devtoolsAgent: null,\n      hierarchy: null,\n      panelPos: 'bottom',\n      inspecting: true,\n      perfing: false,\n      inspected: null,\n      selection: null,\n      inspectedViewTag: this.props.inspectedViewTag,\n      networking: false,\n    };\n  }\n\n  componentDidMount() {\n    if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {\n      (this : any).attachToDevtools = this.attachToDevtools.bind(this);\n      window.__REACT_DEVTOOLS_GLOBAL_HOOK__.on('react-devtools', this.attachToDevtools);\n      // if devtools is already started\n      if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent) {\n        this.attachToDevtools(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._subs) {\n      this._subs.map(fn => fn());\n    }\n    if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {\n      window.__REACT_DEVTOOLS_GLOBAL_HOOK__.off('react-devtools', this.attachToDevtools);\n    }\n  }\n\n  componentWillReceiveProps(newProps: Object) {\n    this.setState({inspectedViewTag: newProps.inspectedViewTag});\n  }\n\n  attachToDevtools = (agent: Object) => {\n    let _hideWait = null;\n    const hlSub = agent.sub('highlight', ({node, name, props}) => {\n      clearTimeout(_hideWait);\n      UIManager.measure(node, (x, y, width, height, left, top) => {\n        this.setState({\n          hierarchy: [],\n          inspected: {\n            frame: {left, top, width, height},\n            style: props ? props.style : {},\n          },\n        });\n      });\n    });\n    const hideSub = agent.sub('hideHighlight', () => {\n      if (this.state.inspected === null) {\n        return;\n      }\n      // we wait to actually hide in order to avoid flicker\n      _hideWait = setTimeout(() => {\n        this.setState({\n          inspected: null,\n        });\n      }, 100);\n    });\n    this._subs = [hlSub, hideSub];\n\n    agent.on('shutdown', () => {\n      this.setState({devtoolsAgent: null});\n      this._subs = null;\n    });\n    this.setState({\n      devtoolsAgent: agent,\n    });\n  };\n\n  setSelection(i: number) {\n    const instance = this.state.hierarchy[i];\n    // if we inspect a stateless component we can't use the getPublicInstance method\n    // therefore we use the internal _instance property directly.\n    const publicInstance = instance['_instance'] || {};\n    const source = instance['_currentElement'] && instance['_currentElement']['_source'];\n    UIManager.measure(instance.getHostNode(), (x, y, width, height, left, top) => {\n      this.setState({\n        inspected: {\n          frame: {left, top, width, height},\n          style: publicInstance.props ? publicInstance.props.style : {},\n          source,\n        },\n        selection: i,\n      });\n    });\n  }\n\n  onTouchInstance(touched: Object, frame: Object, pointerY: number) {\n    // Most likely the touched instance is a native wrapper (like RCTView)\n    // which is not very interesting. Most likely user wants a composite\n    // instance that contains it (like View)\n    const hierarchy = InspectorUtils.getOwnerHierarchy(touched);\n    const instance = InspectorUtils.lastNotNativeInstance(hierarchy);\n\n    if (this.state.devtoolsAgent) {\n      this.state.devtoolsAgent.selectFromReactInstance(instance, true);\n    }\n\n    // if we inspect a stateless component we can't use the getPublicInstance method\n    // therefore we use the internal _instance property directly.\n    const publicInstance = instance['_instance'] || {};\n    const props = publicInstance.props || {};\n    const source = instance['_currentElement'] && instance['_currentElement']['_source'];\n    this.setState({\n      panelPos: pointerY > Dimensions.get('window').height / 2 ? 'top' : 'bottom',\n      selection: hierarchy.indexOf(instance),\n      hierarchy,\n      inspected: {\n        style: props.style || {},\n        frame,\n        source,\n      },\n    });\n  }\n\n  setPerfing(val: bool) {\n    this.setState({\n      perfing: val,\n      inspecting: false,\n      inspected: null,\n      networking: false,\n    });\n  }\n\n  setInspecting(val: bool) {\n    this.setState({\n      inspecting: val,\n      inspected: null\n    });\n  }\n\n  setTouchTargetting(val: bool) {\n    Touchable.TOUCH_TARGET_DEBUG = val;\n    this.props.onRequestRerenderApp((inspectedViewTag) => {\n      this.setState({inspectedViewTag});\n    });\n  }\n\n  setNetworking(val: bool) {\n    this.setState({\n      networking: val,\n      perfing: false,\n      inspecting: false,\n      inspected: null,\n    });\n  }\n\n  render() {\n    const panelContainerStyle = (this.state.panelPos === 'bottom') ?\n      {bottom: 0} :\n      {top: Platform.OS === 'ios' ? 20 : 0};\n    return (\n      <View style={styles.container} pointerEvents=\"box-none\">\n        {this.state.inspecting &&\n          <InspectorOverlay\n            inspected={this.state.inspected}\n            inspectedViewTag={this.state.inspectedViewTag}\n            onTouchInstance={this.onTouchInstance.bind(this)}\n          />}\n        <View style={[styles.panelContainer, panelContainerStyle]}>\n          <InspectorPanel\n            devtoolsIsOpen={!!this.state.devtoolsAgent}\n            inspecting={this.state.inspecting}\n            perfing={this.state.perfing}\n            setPerfing={this.setPerfing.bind(this)}\n            setInspecting={this.setInspecting.bind(this)}\n            inspected={this.state.inspected}\n            hierarchy={this.state.hierarchy}\n            selection={this.state.selection}\n            setSelection={this.setSelection.bind(this)}\n            touchTargetting={Touchable.TOUCH_TARGET_DEBUG}\n            setTouchTargetting={this.setTouchTargetting.bind(this)}\n            networking={this.state.networking}\n            setNetworking={this.setNetworking.bind(this)}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  panelContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n  },\n});\n\nmodule.exports = Inspector;\n"]}]