["4921fdedeef715c1a537658d4f77cc663898a633","2de35a2f27947912fd978e1fa746c11c8a52a100",["ColorPropType","NativeMethodsMixin","Platform","React","StyleSheet","View","ViewPropTypes","requireNativeComponent"],[44,95,141,174,209,243,281,337],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.js"],"names":["ColorPropType","require","NativeMethodsMixin","Platform","React","StyleSheet","View","ViewPropTypes","requireNativeComponent","PropTypes","GRAY","ActivityIndicator","createClass","mixins","propTypes","animating","bool","color","size","oneOfType","oneOf","number","hidesWhenStopped","getDefaultProps","OS","undefined","render","props","onLayout","style","sizeStyle","styles","sizeSmall","sizeLarge","height","width","container","create","alignItems","justifyContent","RCTActivityIndicator","nativeOnly","activityIndicatorViewStyle","indeterminate","progress","styleAttr","module","exports"],"mappings":";AAWA;;AAEA,IAAMA,gBAAgBC,QAAQ,eAAR,CAAtB;AACA,IAAMC,qBAAqBD,QAAQ,oBAAR,CAA3B;AACA,IAAME,WAAWF,QAAQ,UAAR,CAAjB;AACA,IAAMG,QAAQH,QAAQ,OAAR,CAAd;AACA,IAAMI,aAAaJ,QAAQ,YAAR,CAAnB;AACA,IAAMK,OAAOL,QAAQ,MAAR,CAAb;;AAEA,IAAMM,gBAAgBN,QAAQ,eAAR,CAAtB;;AAEA,IAAMO,yBAAyBP,QAAQ,wBAAR,CAA/B;;AAEA,IAAMQ,YAAYL,MAAMK,SAAxB;;AAEA,IAAMC,OAAO,SAAb;;AAcA,IAAMC,oBAAoBP,MAAMQ,WAAN,CAAkB;AAAA;;AAC1CC,UAAQ,CAACX,kBAAD,CADkC;;AAG1CY,sCACKP,aADL;AAKEQ,eAAWN,UAAUO,IALvB;;AASEC,WAAOjB,aATT;;AAcEkB,UAAMT,UAAUU,SAAV,CAAoB,CACxBV,UAAUW,KAAV,CAAgB,CAAE,OAAF,EAAW,OAAX,CAAhB,CADwB,EAExBX,UAAUY,MAFc,CAApB,CAdR;;AAuBEC,sBAAkBb,UAAUO;AAvB9B,IAH0C;;AA6B1CO,iBA7B0C,6BA6BV;AAC9B,WAAO;AACLR,iBAAW,IADN;AAELE,aAAOd,SAASqB,EAAT,KAAgB,KAAhB,GAAwBd,IAAxB,GAA+Be,SAFjC;AAGLH,wBAAkB,IAHb;AAILJ,YAAM;AAJD,KAAP;AAMD,GApCyC;AAsC1CQ,QAtC0C,oBAsCjC;AAAA,iBAC6B,KAAKC,KADlC;AAAA,QACAC,QADA,UACAA,QADA;AAAA,QACUC,KADV,UACUA,KADV;AAAA,QACoBF,KADpB;;AAEP,QAAIG,kBAAJ;;AAEA,YAAQH,MAAMT,IAAd;AACE,WAAK,OAAL;AACEY,oBAAYC,OAAOC,SAAnB;AACA;AACF,WAAK,OAAL;AACEF,oBAAYC,OAAOE,SAAnB;AACA;AACF;AACEH,oBAAY,EAACI,QAAQP,MAAMT,IAAf,EAAqBiB,OAAOR,MAAMT,IAAlC,EAAZ;AACA;AATJ;;AAYA,WACE;AAAC,UAAD;AAAA;AACE,kBAAUU,QADZ;AAEE,eAAO,CAACG,OAAOK,SAAR,EAAmBP,KAAnB,CAFT;AAGE,0BAAC,oBAAD,2BACMF,KADN;AAEE,eAAOG,SAFT;AAGE,mBAAU,QAHZ;AAIE;AAJF;AAHF,KADF;AAYD;AAlEyC,CAAlB,CAA1B;;AAqEA,IAAMC,SAAS1B,WAAWgC,MAAX,CAAkB;AAC/BD,aAAW;AACTE,gBAAY,QADH;AAETC,oBAAgB;AAFP,GADoB;AAK/BP,aAAW;AACTG,WAAO,EADE;AAETD,YAAQ;AAFC,GALoB;AAS/BD,aAAW;AACTE,WAAO,EADE;AAETD,YAAQ;AAFC;AAToB,CAAlB,CAAf;;AAeA,IAAI/B,SAASqB,EAAT,KAAgB,KAApB,EAA2B;AACzB,MAAIgB,uBAAuBhC,uBACzB,0BADyB,EAEzBG,iBAFyB,EAGzB,EAAC8B,YAAY,EAACC,4BAA4B,IAA7B,EAAb,EAHyB,CAA3B;AAKD,CAND,MAMO,IAAIvC,SAASqB,EAAT,KAAgB,SAApB,EAA+B;AACpC,MAAIgB,uBAAuBhC,uBACzB,oBADyB,EAEzBG,iBAFyB,EAIzB,EAAC8B,YAAY;AACXE,qBAAe,IADJ;AAEXC,gBAAU,IAFC;AAGXC,iBAAW;AAHA,KAAb,EAJyB,CAA3B;AAUD;;AAEDC,OAAOC,OAAP,GAAiBpC,iBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ActivityIndicator\n * @flow\n */\n'use strict';\n\nconst ColorPropType = require('ColorPropType');\nconst NativeMethodsMixin = require('NativeMethodsMixin');\nconst Platform = require('Platform');\nconst React = require('React');\nconst StyleSheet = require('StyleSheet');\nconst View = require('View');\n\nconst ViewPropTypes = require('ViewPropTypes');\n\nconst requireNativeComponent = require('requireNativeComponent');\n\nconst PropTypes = React.PropTypes;\n\nconst GRAY = '#999999';\n\ntype IndicatorSize = number | 'small' | 'large';\n\ntype DefaultProps = {\n  animating: boolean,\n  color: any,\n  hidesWhenStopped: boolean,\n  size: IndicatorSize,\n}\n\n/**\n * Displays a circular loading indicator.\n */\nconst ActivityIndicator = React.createClass({\n  mixins: [NativeMethodsMixin],\n\n  propTypes: {\n    ...ViewPropTypes,\n    /**\n     * Whether to show the indicator (true, the default) or hide it (false).\n     */\n    animating: PropTypes.bool,\n    /**\n     * The foreground color of the spinner (default is gray).\n     */\n    color: ColorPropType,\n    /**\n     * Size of the indicator (default is 'small').\n     * Passing a number to the size prop is only supported on Android.\n     */\n    size: PropTypes.oneOfType([\n      PropTypes.oneOf([ 'small', 'large' ]),\n      PropTypes.number,\n    ]),\n    /**\n     * Whether the indicator should hide when not animating (true by default).\n     *\n     * @platform ios\n     */\n    hidesWhenStopped: PropTypes.bool,\n  },\n\n  getDefaultProps(): DefaultProps {\n    return {\n      animating: true,\n      color: Platform.OS === 'ios' ? GRAY : undefined,\n      hidesWhenStopped: true,\n      size: 'small',\n    };\n  },\n\n  render() {\n    const {onLayout, style, ...props} = this.props;\n    let sizeStyle;\n\n    switch (props.size) {\n      case 'small':\n        sizeStyle = styles.sizeSmall;\n        break;\n      case 'large':\n        sizeStyle = styles.sizeLarge;\n        break;\n      default:\n        sizeStyle = {height: props.size, width: props.size};\n        break;\n    }\n\n    return (\n      <View\n        onLayout={onLayout}\n        style={[styles.container, style]}>\n        <RCTActivityIndicator\n          {...props}\n          style={sizeStyle}\n          styleAttr=\"Normal\"\n          indeterminate\n        />\n      </View>\n    );\n  }\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  sizeSmall: {\n    width: 20,\n    height: 20,\n  },\n  sizeLarge: {\n    width: 36,\n    height: 36,\n  },\n});\n\nif (Platform.OS === 'ios') {\n  var RCTActivityIndicator = requireNativeComponent(\n    'RCTActivityIndicatorView',\n    ActivityIndicator,\n    {nativeOnly: {activityIndicatorViewStyle: true}},\n  );\n} else if (Platform.OS === 'android') {\n  var RCTActivityIndicator = requireNativeComponent(\n    'AndroidProgressBar',\n    ActivityIndicator,\n    // Ignore props that are specific to non inderterminate ProgressBar.\n    {nativeOnly: {\n      indeterminate: true,\n      progress: true,\n      styleAttr: true,\n    }},\n  );\n}\n\nmodule.exports = ActivityIndicator;\n"]}]