["d2149c0cc7ca0995d9ca6957c0ef660982033a12","62d9e61bf524170d6912f1f524257135734f010f",["PooledClass","fbjs/lib/invariant","validateCallback"],[43,84,138],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/stack/reconciler/CallbackQueue.js"],"names":["PooledClass","require","invariant","validateCallback","CallbackQueue","arg","_callbacks","_contexts","_arg","callback","context","push","callbacks","contexts","length","i","call","len","reset","module","exports","addPoolingTo"],"mappings":";;AAYA;;AAEA,IAAIA,cAAcC,QAAQ,aAAR,CAAlB;;AAEA,IAAIC,YAAYD,QAAQ,oBAAR,CAAhB;AACA,IAAIE,mBAAmBF,QAAQ,kBAAR,CAAvB;;IAaMG,a;AAKJ,yBAAYC,GAAZ,EAAiB;AAAA;;AACf,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,IAAL,GAAYH,GAAZ;AACD;;;;4BASOI,Q,EAAsBC,O,EAAY;AACxC,WAAKJ,UAAL,GAAkB,KAAKA,UAAL,IAAmB,EAArC;AACA,WAAKA,UAAL,CAAgBK,IAAhB,CAAqBF,QAArB;AACA,WAAKF,SAAL,GAAiB,KAAKA,SAAL,IAAkB,EAAnC;AACA,WAAKA,SAAL,CAAeI,IAAf,CAAoBD,OAApB;AACD;;;gCAQW;AACV,UAAIE,YAAY,KAAKN,UAArB;AACA,UAAIO,WAAW,KAAKN,SAApB;AACA,UAAIF,MAAM,KAAKG,IAAf;AACA,UAAII,aAAaC,QAAjB,EAA2B;AACzBX,kBACEU,UAAUE,MAAV,KAAqBD,SAASC,MADhC,EAEE,+CAFF;AAIA,aAAKR,UAAL,GAAkB,IAAlB;AACA,aAAKC,SAAL,GAAiB,IAAjB;AACA,aAAK,IAAIQ,IAAI,CAAb,EAAgBA,IAAIH,UAAUE,MAA9B,EAAsCC,GAAtC,EAA2C;AACzCZ,2BAAiBS,UAAUG,CAAV,CAAjB;AACAH,oBAAUG,CAAV,EAAaC,IAAb,CAAkBH,SAASE,CAAT,CAAlB,EAA+BV,GAA/B;AACD;AACDO,kBAAUE,MAAV,GAAmB,CAAnB;AACAD,iBAASC,MAAT,GAAkB,CAAlB;AACD;AACF;;;iCAEY;AACX,aAAO,KAAKR,UAAL,GAAkB,KAAKA,UAAL,CAAgBQ,MAAlC,GAA2C,CAAlD;AACD;;;6BAEQG,G,EAAa;AACpB,UAAI,KAAKX,UAAL,IAAmB,KAAKC,SAA5B,EAAuC;AACrC,aAAKD,UAAL,CAAgBQ,MAAhB,GAAyBG,GAAzB;AACA,aAAKV,SAAL,CAAeO,MAAf,GAAwBG,GAAxB;AACD;AACF;;;4BAOO;AACN,WAAKX,UAAL,GAAkB,IAAlB;AACA,WAAKC,SAAL,GAAiB,IAAjB;AACD;;;iCAKY;AACX,WAAKW,KAAL;AACD;;;;;AAGHC,OAAOC,OAAP,GAAiBpB,YAAYqB,YAAZ,CAAyBjB,aAAzB,CAAjB","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CallbackQueue\n * @flow\n */\n\n'use strict';\n\nvar PooledClass = require('PooledClass');\n\nvar invariant = require('fbjs/lib/invariant');\nvar validateCallback = require('validateCallback');\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class CallbackQueue\n * @implements PooledClass\n * @internal\n */\nclass CallbackQueue<T> {\n  _callbacks: ?Array<() => void>;\n  _contexts: ?Array<T>;\n  _arg: ?mixed;\n\n  constructor(arg) {\n    this._callbacks = null;\n    this._contexts = null;\n    this._arg = arg;\n  }\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n  enqueue(callback: () => void, context: T) {\n    this._callbacks = this._callbacks || [];\n    this._callbacks.push(callback);\n    this._contexts = this._contexts || [];\n    this._contexts.push(context);\n  }\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n  notifyAll() {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    var arg = this._arg;\n    if (callbacks && contexts) {\n      invariant(\n        callbacks.length === contexts.length,\n        'Mismatched list of contexts in callback queue',\n      );\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0; i < callbacks.length; i++) {\n        validateCallback(callbacks[i]);\n        callbacks[i].call(contexts[i], arg);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  }\n\n  checkpoint() {\n    return this._callbacks ? this._callbacks.length : 0;\n  }\n\n  rollback(len: number) {\n    if (this._callbacks && this._contexts) {\n      this._callbacks.length = len;\n      this._contexts.length = len;\n    }\n  }\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n  reset() {\n    this._callbacks = null;\n    this._contexts = null;\n  }\n\n  /**\n   * `PooledClass` looks for this.\n   */\n  destructor() {\n    this.reset();\n  }\n}\n\nmodule.exports = PooledClass.addPoolingTo(CallbackQueue);\n"]}]