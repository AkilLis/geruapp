["eb7115ef2654f50a562c6282976294585d260504","230429b1ee9e2d2e12cd5d102284909539c1d41c",["react-native","./NavigationCardStackPanResponder","./NavigationCardStackStyleInterpolator","./NavigationContainer","./NavigationPagerPanResponder","./NavigationPagerStyleInterpolator","./NavigationPointerEventsContainer","./NavigationPropTypes","react","prop-types"],[39,111,200,277,345,426,512,585,631,666,713,760],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-experimental-navigation/NavigationCard.js"],"names":["Animated","require","NavigationCardStackPanResponder","NavigationCardStackStyleInterpolator","NavigationContainer","NavigationPagerPanResponder","NavigationPagerStyleInterpolator","NavigationPointerEventsContainer","NavigationPropTypes","React","StyleSheet","View","PropTypes","SceneView","nextProps","nextState","sceneRendererProps","scene","navigationState","props","sceneRenderer","Component","propTypes","func","isRequired","SceneRenderer","NavigationCard","panHandlers","pointerEvents","renderScene","style","viewStyle","undefined","forHorizontal","viewPanHandlers","onComponentRef","styles","main","SceneRendererProps","string","any","create","backgroundColor","bottom","left","position","right","top","CardStackPanResponder","CardStackStyleInterpolator","PagerPanResponder","PagerStyleInterpolator","module","exports"],"mappings":";AAgCA;;AAEA,IAAMA,WAAWC,QAAQ,cAAR,EAAwBD,QAAzC;AACA,IAAME,kCAAkCD,QAAQ,mCAAR,CAAxC;AACA,IAAME,uCAAuCF,QAAQ,wCAAR,CAA7C;AACA,IAAMG,sBAAsBH,QAAQ,uBAAR,CAA5B;AACA,IAAMI,8BAA8BJ,QAAQ,+BAAR,CAApC;AACA,IAAMK,mCAAmCL,QAAQ,oCAAR,CAAzC;AACA,IAAMM,mCAAmCN,QAAQ,oCAAR,CAAzC;AACA,IAAMO,sBAAsBP,QAAQ,uBAAR,CAA5B;AACA,IAAMQ,QAAQR,QAAQ,OAAR,CAAd;AACA,IAAMS,aAAaT,QAAQ,cAAR,EAAwBS,UAA3C;AACA,IAAMC,OAAOV,QAAQ,cAAR,EAAwBU,IAArC;;AAqBA,IAAMC,YAAYX,QAAQ,YAAR,CAAlB;;IAEMY,S;;;;;;;;;;0CAOkBC,S,EAA2BC,S,EAAyB;AACxE,aACED,UAAUE,kBAAV,CAA6BC,KAA7B,CAAmCC,eAAnC,KACE,KAAKC,KAAL,CAAWH,kBAAX,CAA8BC,KAA9B,CAAoCC,eAFxC;AAID;;;6BAEuB;AACtB,aAAO,KAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKD,KAAL,CAAWH,kBAApC,CAAP;AACD;;;EAhBqBP,MAAMY,S;;AAAxBR,S,CAEGS,S,GAAY;AACjBF,iBAAeR,UAAUW,IAAV,CAAeC,UADb;AAEjBR,sBAAoBR,oBAAoBiB;AAFvB,C;;IAoBfC,c;;;;;;;;;;6BAYmB;AAAA,mBAOjB,KAAKP,KAPY;AAAA,UAEnBQ,WAFmB,UAEnBA,WAFmB;AAAA,UAGnBC,aAHmB,UAGnBA,aAHmB;AAAA,UAInBC,WAJmB,UAInBA,WAJmB;AAAA,UAKnBC,KALmB,UAKnBA,KALmB;AAAA,UAMhBX,KANgB;;;AASrB,UAAMY,YAAYD,UAAUE,SAAV,GAChB7B,qCAAqC8B,aAArC,CAAmDd,KAAnD,CADgB,GAEhBW,KAFF;;AAIA,UAAMI,kBAAkBP,gBAAgBK,SAAhB,GACtB9B,gCAAgC+B,aAAhC,CAA8Cd,KAA9C,CADsB,GAEtBQ,WAFF;;AAIA,aACE;AAAC,gBAAD,CAAU,IAAV;AAAA,iCACMO,eADN;AAEE,yBAAeN,aAFjB;AAGE,eAAK,KAAKT,KAAL,CAAWgB,cAHlB;AAIE,iBAAO,CAACC,OAAOC,IAAR,EAAcN,SAAd,CAJT;AAKE,4BAAC,SAAD;AACE,yBAAeF,WADjB;AAEE,8BAAoBV;AAFtB;AALF,OADF;AAYD;;;EAzC0BV,MAAMY,S;;AAA7BK,c,CAGGJ,S,4BACFd,oBAAoB8B,kB;AACvBH,kBAAgBvB,UAAUW,IAAV,CAAeC,U;AAC/BG,eAAanB,oBAAoBmB,W;AACjCC,iBAAehB,UAAU2B,MAAV,CAAiBf,U;AAChCK,eAAajB,UAAUW,IAAV,CAAeC,U;AAC5BM,SAAOlB,UAAU4B;;;;AAmCrB,IAAMJ,SAAS1B,WAAW+B,MAAX,CAAkB;AAC/BJ,QAAM;AACJK,qBAAiB,OADb;AAEJC,YAAQ,CAFJ;AAGJC,UAAM,CAHF;AAIJC,cAAU,UAJN;AAKJC,WAAO,CALH;AAMJC,SAAK;AAND;AADyB,CAAlB,CAAf;;AAWArB,iBAAiBnB,iCAAiCkC,MAAjC,CAAwCf,cAAxC,CAAjB;AACAA,iBAAiBtB,oBAAoBqC,MAApB,CAA2Bf,cAA3B,CAAjB;;AAGAA,eAAesB,qBAAf,GAAuC9C,+BAAvC;AACAwB,eAAeuB,0BAAf,GAA4C9C,oCAA5C;AACAuB,eAAewB,iBAAf,GAAmC7C,2BAAnC;AACAqB,eAAeyB,sBAAf,GAAwC7C,gCAAxC;;AAEA8C,OAAOC,OAAP,GAAiB3B,cAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Facebook, Inc. (\"Facebook\") owns all right, title and interest, including\n * all intellectual property and other proprietary rights, in and to the React\n * Native CustomComponents software (the \"Software\").  Subject to your\n * compliance with these terms, you are hereby granted a non-exclusive,\n * worldwide, royalty-free copyright license to (1) use and copy the Software;\n * and (2) reproduce and distribute the Software as part of your own software\n * (\"Your Software\").  Facebook reserves all rights not expressly granted to\n * you in this license agreement.\n *\n * THE SOFTWARE AND DOCUMENTATION, IF ANY, ARE PROVIDED \"AS IS\" AND ANY EXPRESS\n * OR IMPLIED WARRANTIES (INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE) ARE DISCLAIMED.\n * IN NO EVENT SHALL FACEBOOK OR ITS AFFILIATES, OFFICERS, DIRECTORS OR\n * EMPLOYEES BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @providesModule NavigationCard\n * @flow\n */\n'use strict';\n\nconst Animated = require('react-native').Animated;\nconst NavigationCardStackPanResponder = require('./NavigationCardStackPanResponder');\nconst NavigationCardStackStyleInterpolator = require('./NavigationCardStackStyleInterpolator');\nconst NavigationContainer = require('./NavigationContainer');\nconst NavigationPagerPanResponder = require('./NavigationPagerPanResponder');\nconst NavigationPagerStyleInterpolator = require('./NavigationPagerStyleInterpolator');\nconst NavigationPointerEventsContainer = require('./NavigationPointerEventsContainer');\nconst NavigationPropTypes = require('./NavigationPropTypes');\nconst React = require('react');\nconst StyleSheet = require('react-native').StyleSheet;\nconst View = require('react-native').View;\n\nimport type  {\n  NavigationPanPanHandlers,\n  NavigationSceneRenderer,\n  NavigationSceneRendererProps,\n} from 'NavigationTypeDefinition';\n\ntype SceneViewProps =  {\n  sceneRenderer: NavigationSceneRenderer,\n  sceneRendererProps: NavigationSceneRendererProps,\n};\n\ntype Props = NavigationSceneRendererProps & {\n  onComponentRef: (ref: any) => void,\n  panHandlers: ?NavigationPanPanHandlers,\n  pointerEvents: string,\n  renderScene: NavigationSceneRenderer,\n  style: any,\n};\n\nconst PropTypes = require('prop-types');\n\nclass SceneView extends React.Component<any, SceneViewProps, any> {\n\n  static propTypes = {\n    sceneRenderer: PropTypes.func.isRequired,\n    sceneRendererProps: NavigationPropTypes.SceneRenderer,\n  };\n\n  shouldComponentUpdate(nextProps: SceneViewProps, nextState: any): boolean {\n    return (\n      nextProps.sceneRendererProps.scene.navigationState !==\n        this.props.sceneRendererProps.scene.navigationState\n    );\n  }\n\n  render(): ?ReactElement {\n    return this.props.sceneRenderer(this.props.sceneRendererProps);\n  }\n}\n\n/**\n * Component that renders the scene as card for the <NavigationCardStack />.\n */\nclass NavigationCard extends React.Component<any, Props, any> {\n  props: Props;\n\n  static propTypes = {\n    ...NavigationPropTypes.SceneRendererProps,\n    onComponentRef: PropTypes.func.isRequired,\n    panHandlers: NavigationPropTypes.panHandlers,\n    pointerEvents: PropTypes.string.isRequired,\n    renderScene: PropTypes.func.isRequired,\n    style: PropTypes.any,\n  };\n\n  render(): ReactElement {\n    const {\n      panHandlers,\n      pointerEvents,\n      renderScene,\n      style,\n      ...props, /* NavigationSceneRendererProps */\n    } = this.props;\n\n    const viewStyle = style === undefined ?\n      NavigationCardStackStyleInterpolator.forHorizontal(props) :\n      style;\n\n    const viewPanHandlers = panHandlers === undefined ?\n      NavigationCardStackPanResponder.forHorizontal(props) :\n      panHandlers;\n\n    return (\n      <Animated.View\n        {...viewPanHandlers}\n        pointerEvents={pointerEvents}\n        ref={this.props.onComponentRef}\n        style={[styles.main, viewStyle]}>\n        <SceneView\n          sceneRenderer={renderScene}\n          sceneRendererProps={props}\n        />\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  main: {\n    backgroundColor: 'white',\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n});\n\nNavigationCard = NavigationPointerEventsContainer.create(NavigationCard);\nNavigationCard = NavigationContainer.create(NavigationCard);\n\n// Export these buil-in interaction modules.\nNavigationCard.CardStackPanResponder = NavigationCardStackPanResponder;\nNavigationCard.CardStackStyleInterpolator = NavigationCardStackStyleInterpolator;\nNavigationCard.PagerPanResponder = NavigationPagerPanResponder;\nNavigationCard.PagerStyleInterpolator = NavigationPagerStyleInterpolator;\n\nmodule.exports = NavigationCard;\n"]}]