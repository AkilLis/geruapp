["ee6033bcdc7a0d62543010e2ab9538876d867a1a","fd0102f12c61cadb05d6e071a0ee2469d9a2b5f8",["./reactProdInvariant","./ReactCurrentOwner","./ReactElementSymbol","./getIteratorFn","fbjs/lib/invariant","./KeyEscapeUtils","fbjs/lib/warning"],[46,104,161,215,259,311,354],{"version":3,"sources":["/var/www/geruapp/node_modules/react/lib/traverseAllChildren.js"],"names":["_prodInvariant","require","ReactCurrentOwner","REACT_ELEMENT_TYPE","getIteratorFn","invariant","KeyEscapeUtils","warning","SEPARATOR","SUBSEPARATOR","didWarnAboutMaps","getComponentKey","component","index","key","escape","toString","traverseAllChildrenImpl","children","nameSoFar","callback","traverseContext","type","$$typeof","child","nextName","subtreeCount","nextNamePrefix","Array","isArray","i","length","iteratorFn","process","env","NODE_ENV","entries","mapsAsChildrenAddendum","current","mapsAsChildrenOwnerName","getName","iterator","call","step","ii","next","done","value","addendum","name","childrenString","Object","keys","join","traverseAllChildren","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * This is inlined from ReactElement since this file is shared between\n * isomorphic and renderers. We could extract this to a\n *\n */\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' ||\n  // The following is inlined from ReactElement. This means we can optimize\n  // some checks. React Fiber also inlines this logic for similar purposes.\n  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      if (process.env.NODE_ENV !== 'production') {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = '\\n\\nCheck the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step;\n      var ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.';\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += '\\n\\nCheck the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = '' + children;\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;"]}]