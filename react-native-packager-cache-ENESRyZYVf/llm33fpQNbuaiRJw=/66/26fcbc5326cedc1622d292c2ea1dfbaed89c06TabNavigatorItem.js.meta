["475551332c40a777549a32dd1826ddabc3bccdb6","b72044ef708a70b7477ef5dd3f1c5d961721296b",["react","react-native"],[102,199],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native-tab-navigator/TabNavigatorItem.js"],"names":["TabNavigatorItem","child","Children","only","props","children","cloneElement","style","Component","propTypes","renderIcon","func","renderSelectedIcon","badgeText","oneOfType","string","number","renderBadge","title","titleStyle","selectedTitleStyle","tabStyle","selected","bool","onPress","allowFontScaling","defaultProps"],"mappings":"AAAA;;;;;;AAEA;;;;AAGA;;IAKqBA,gB;;;;;;;;;;6BAkBV;AACP,UAAIC,QAAQ,gBAAMC,QAAN,CAAeC,IAAf,CAAoB,KAAKC,KAAL,CAAWC,QAA/B,CAAZ;AACA,aAAO,gBAAMC,YAAN,CAAmBL,KAAnB,EAA0B;AAC/BM,eAAO,CAACN,MAAMG,KAAN,CAAYG,KAAb,EAAoB,KAAKH,KAAL,CAAWG,KAA/B;AADwB,OAA1B,CAAP;AAGD;;;EAvB2C,gBAAMC,S;;AAA/BR,gB,CACZS,S,GAAY;AACjBC,cAAY,iBAAUC,IADL;AAEjBC,sBAAoB,iBAAUD,IAFb;AAGjBE,aAAW,iBAAUC,SAAV,CAAoB,CAAC,iBAAUC,MAAX,EAAmB,iBAAUC,MAA7B,CAApB,CAHM;AAIjBC,eAAa,iBAAUN,IAJN;AAKjBO,SAAO,iBAAUH,MALA;AAMjBI,cAAY,kBAAKV,SAAL,CAAeF,KANV;AAOjBa,sBAAoB,kBAAKX,SAAL,CAAeF,KAPlB;AAQjBc,YAAU,kBAAKZ,SAAL,CAAeF,KARR;AASjBe,YAAU,iBAAUC,IATH;AAUjBC,WAAS,iBAAUb,IAVF;AAWjBc,oBAAkB,iBAAUF;AAXX,C;AADAvB,gB,CAeZ0B,Y,GAAe,E;kBAfH1B,gB","sourcesContent":["'use strict';\n\nimport React, {\n  PropTypes,\n} from 'react';\nimport {\n  Text,\n  View,\n} from 'react-native';\n\nexport default class TabNavigatorItem extends React.Component {\n  static propTypes = {\n    renderIcon: PropTypes.func,\n    renderSelectedIcon: PropTypes.func,\n    badgeText: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    renderBadge: PropTypes.func,\n    title: PropTypes.string,\n    titleStyle: Text.propTypes.style,\n    selectedTitleStyle: Text.propTypes.style,\n    tabStyle: View.propTypes.style,\n    selected: PropTypes.bool,\n    onPress: PropTypes.func,\n    allowFontScaling: PropTypes.bool,\n  };\n\n  static defaultProps = {\n  };\n\n  render() {\n    let child = React.Children.only(this.props.children);\n    return React.cloneElement(child, {\n      style: [child.props.style, this.props.style],\n    });\n  }\n}\n"]}]