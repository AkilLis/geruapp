["4350494c1117eb69fd4fddd8358400c9c774625e","593e1940a33b223013991254567d0ea7cb2def51",["KeyEscapeUtils","traverseAllChildren","fbjs/lib/warning","react/lib/ReactComponentTreeHook"],[46,99,145,319,686],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/shared/utils/flattenChildren.js"],"names":["KeyEscapeUtils","require","traverseAllChildren","warning","ReactComponentTreeHook","process","env","NODE_ENV","flattenSingleChildIntoContext","traverseContext","child","name","selfDebugID","result","keyUnique","undefined","__DEV__","unescape","getStackAddendumByID","flattenChildren","children","module","exports"],"mappings":";;AAYA;;AAEA,IAAIA,iBAAiBC,QAAQ,gBAAR,CAArB;AACA,IAAIC,sBAAsBD,QAAQ,qBAAR,CAA1B;AACA,IAAIE,UAAUF,QAAQ,kBAAR,CAAd;;AAEA,IAAIG,sBAAJ;;AAEA,IACE,OAAOC,OAAP,KAAmB,WAAnB,IACAA,QAAQC,GADR,IAEAD,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,MAH3B,EAIE;AAMAH,2BAAyBH,QAAQ,kCAAR,CAAzB;AACD;;AAQD,SAASO,6BAAT,CACEC,eADF,EAEEC,KAFF,EAGEC,IAHF,EAIEC,WAJF,EAKQ;AAEN,MAAIH,mBAAmB,OAAOA,eAAP,KAA2B,QAAlD,EAA4D;AAC1D,QAAMI,SAASJ,eAAf;AACA,QAAMK,YAAYD,OAAOF,IAAP,MAAiBI,SAAnC;AACA,QAAIC,OAAJ,EAAa;AACX,UAAI,CAACZ,sBAAL,EAA6B;AAC3BA,iCAAyBH,QAAQ,kCAAR,CAAzB;AACD;AACD,UAAI,CAACa,SAAL,EAAgB;AACdX,gBACE,KADF,EAEE,uEACE,uEADF,GAEE,iCAJJ,EAKEH,eAAeiB,QAAf,CAAwBN,IAAxB,CALF,EAMEP,uBAAuBc,oBAAvB,CAA4CN,WAA5C,CANF;AAQD;AACF;AACD,QAAIE,aAAaJ,SAAS,IAA1B,EAAgC;AAC9BG,aAAOF,IAAP,IAAeD,KAAf;AACD;AACF;AACF;;AAOD,SAASS,eAAT,CACEC,QADF,EAEER,WAFF,EAGwC;AACtC,MAAIQ,YAAY,IAAhB,EAAsB;AACpB,WAAOA,QAAP;AACD;AACD,MAAIP,SAAS,EAAb;;AAEA,MAAIG,OAAJ,EAAa;AACXd,wBACEkB,QADF,EAEE,UAACX,eAAD,EAAkBC,KAAlB,EAAyBC,IAAzB;AAAA,aACEH,8BACEC,eADF,EAEEC,KAFF,EAGEC,IAHF,EAIEC,WAJF,CADF;AAAA,KAFF,EASEC,MATF;AAWD,GAZD,MAYO;AACLX,wBAAoBkB,QAApB,EAA8BZ,6BAA9B,EAA6DK,MAA7D;AACD;AACD,SAAOA,MAAP;AACD;;AAEDQ,OAAOC,OAAP,GAAiBH,eAAjB","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule flattenChildren\n * @flow\n */\n\n'use strict';\n\nvar KeyEscapeUtils = require('KeyEscapeUtils');\nvar traverseAllChildren = require('traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (\n  typeof process !== 'undefined' &&\n  process.env &&\n  process.env.NODE_ENV === 'test'\n) {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n}\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n * @param {number=} selfDebugID Optional debugID of the current internal instance.\n */\nfunction flattenSingleChildIntoContext(\n  traverseContext: mixed,\n  child: ReactElement<any>,\n  name: string,\n  selfDebugID?: number,\n): void {\n  // We found a component instance.\n  if (traverseContext && typeof traverseContext === 'object') {\n    const result = traverseContext;\n    const keyUnique = result[name] === undefined;\n    if (__DEV__) {\n      if (!ReactComponentTreeHook) {\n        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n      }\n      if (!keyUnique) {\n        warning(\n          false,\n          'flattenChildren(...): Encountered two children with the same key, ' +\n            '`%s`. Child keys must be unique; when two children share a key, only ' +\n            'the first child will be used.%s',\n          KeyEscapeUtils.unescape(name),\n          ReactComponentTreeHook.getStackAddendumByID(selfDebugID),\n        );\n      }\n    }\n    if (keyUnique && child != null) {\n      result[name] = child;\n    }\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(\n  children: ReactElement<any>,\n  selfDebugID?: number,\n): ?{[name: string]: ReactElement<any>} {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n\n  if (__DEV__) {\n    traverseAllChildren(\n      children,\n      (traverseContext, child, name) =>\n        flattenSingleChildIntoContext(\n          traverseContext,\n          child,\n          name,\n          selfDebugID,\n        ),\n      result,\n    );\n  } else {\n    traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  }\n  return result;\n}\n\nmodule.exports = flattenChildren;\n"]}]