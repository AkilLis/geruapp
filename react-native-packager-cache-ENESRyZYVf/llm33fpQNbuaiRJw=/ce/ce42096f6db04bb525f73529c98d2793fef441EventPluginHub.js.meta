["6c2039042a68d645256aa53e54161130a85de9fc","68882d228fadfab1958909f105c87f63ec6c7147",["EventPluginRegistry","EventPluginUtils","ReactErrorUtils","accumulateInto","forEachAccumulated","fbjs/lib/invariant"],[51,106,157,207,259,306],{"version":3,"sources":["/var/www/geruapp/node_modules/react-native/Libraries/Renderer/src/renderers/shared/shared/event/EventPluginHub.js"],"names":["EventPluginRegistry","require","EventPluginUtils","ReactErrorUtils","accumulateInto","forEachAccumulated","invariant","eventQueue","executeDispatchesAndRelease","event","simulated","executeDispatchesInOrder","isPersistent","constructor","release","executeDispatchesAndReleaseSimulated","e","executeDispatchesAndReleaseTopLevel","isInteractive","tag","shouldPreventMouseEvent","name","type","props","disabled","EventPluginHub","injection","injectEventPluginOrder","injectEventPluginsByName","getListener","inst","registrationName","listener","stateNode","getFiberCurrentPropsFromNode","currentElement","_currentElement","_rootNodeID","extractEvents","topLevelType","targetInst","nativeEvent","nativeEventTarget","events","plugins","i","length","possiblePlugin","extractedEvents","enqueueEvents","processEventQueue","processingEventQueue","rethrowCaughtError","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginHub\n */\n\n'use strict';\n\nvar EventPluginRegistry = require('EventPluginRegistry');\nvar EventPluginUtils = require('EventPluginUtils');\nvar ReactErrorUtils = require('ReactErrorUtils');\n\nvar accumulateInto = require('accumulateInto');\nvar forEachAccumulated = require('forEachAccumulated');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @private\n */\nvar executeDispatchesAndRelease = function(event, simulated) {\n  if (event) {\n    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nvar executeDispatchesAndReleaseSimulated = function(e) {\n  return executeDispatchesAndRelease(e, true);\n};\nvar executeDispatchesAndReleaseTopLevel = function(e) {\n  return executeDispatchesAndRelease(e, false);\n};\n\nfunction isInteractive(tag) {\n  return tag === 'button' ||\n    tag === 'input' ||\n    tag === 'select' ||\n    tag === 'textarea';\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n      return !!(props.disabled && isInteractive(type));\n    default:\n      return false;\n  }\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName,\n  },\n\n  /**\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function(inst, registrationName) {\n    var listener;\n\n    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n    // live here; needs to be moved to a better place soon\n    if (typeof inst.tag === 'number') {\n      const stateNode = inst.stateNode;\n      if (!stateNode) {\n        // Work in progress (ex: onload events in incremental mode).\n        return null;\n      }\n      const props = EventPluginUtils.getFiberCurrentPropsFromNode(stateNode);\n      if (!props) {\n        // Work in progress.\n        return null;\n      }\n      listener = props[registrationName];\n      if (shouldPreventMouseEvent(registrationName, inst.type, props)) {\n        return null;\n      }\n    } else {\n      const currentElement = inst._currentElement;\n      if (\n        typeof currentElement === 'string' || typeof currentElement === 'number'\n      ) {\n        // Text node, let it bubble through.\n        return null;\n      }\n      if (!inst._rootNodeID) {\n        // If the instance is already unmounted, we have no listeners.\n        return null;\n      }\n      const props = currentElement.props;\n      listener = props[registrationName];\n      if (\n        shouldPreventMouseEvent(registrationName, currentElement.type, props)\n      ) {\n        return null;\n      }\n    }\n\n    invariant(\n      !listener || typeof listener === 'function',\n      'Expected %s listener to be a function, instead got type %s',\n      registrationName,\n      typeof listener,\n    );\n    return listener;\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n  ) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0; i < plugins.length; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(\n          topLevelType,\n          targetInst,\n          nativeEvent,\n          nativeEventTarget,\n        );\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function(events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function(simulated) {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    if (simulated) {\n      forEachAccumulated(\n        processingEventQueue,\n        executeDispatchesAndReleaseSimulated,\n      );\n    } else {\n      forEachAccumulated(\n        processingEventQueue,\n        executeDispatchesAndReleaseTopLevel,\n      );\n    }\n    invariant(\n      !eventQueue,\n      'processEventQueue(): Additional events were enqueued while processing ' +\n        'an event queue. Support for this has not yet been implemented.',\n    );\n    // This would be a good time to rethrow if any of the event handlers threw.\n    ReactErrorUtils.rethrowCaughtError();\n  },\n};\n\nmodule.exports = EventPluginHub;\n"]}]