["bff740d13b34010eca0e0ad0d8c6ec18c6bcb826","608b8eb02c03db837dcacb3fb03708cee7b8c617",["react","react-native"],[87,184],{"version":3,"sources":["/var/www/geruapp/src/components/react-native-sticky-view/index.js"],"names":["StickyScrollView","props","_onScroll","bind","e","stickyHeight","onStickyVisibility","nativeEvent","contentOffset","y","children","propTypes","scrollTop","number","isRequired","func","defaultProps","styles","create","container","flex"],"mappings":";;;;AAAA;;;;AACA;;IAKqBA,gB;;;AAEnB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA,gJACXA,KADW;;AAGjB,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,OAAjB;AAHiB;AAIlB;;;;8BAESC,C,EAAG;AAAA,UAEXC,YAFW,GAGR,KAAKJ,KAHG,CAEXI,YAFW;;;AAMZ,UAAG,KAAKJ,KAAL,CAAWK,kBAAX,IAAiC,IAApC,EAA0C;;AAEzC,UAAIF,EAAEG,WAAF,CAAcC,aAAd,CAA4BC,CAA5B,IAAiCJ,YAArC,EAAmD;AACjD,aAAKJ,KAAL,CAAWK,kBAAX,CAA8B,IAA9B;AACD,OAFD,MAEO;AACL,aAAKL,KAAL,CAAWK,kBAAX,CAA8B,KAA9B;AACD;AACF;;;6BAES;AACR,aACE;AAAA;AAAA,iCAAgB,KAAKL,KAArB;AACK,oBAAU,KAAKC;AADpB;AAGG,aAAKD,KAAL,CAAWS;AAHd,OADF;AAOD;;;;;kBA/BkBV,gB;;;AAkCrBA,iBAAiBW,SAAjB,GAA6B;AAC5BC,aAAW,iBAAUC,MAAV,CAAiBC,UADA;AAE5BR,sBAAoB,iBAAUS;AAFF,CAA7B;;AAKAf,iBAAiBgB,YAAjB,GAAgC,EAAhC;;AAIA,IAAIC,SAAS,wBAAWC,MAAX,CAAkB;AAC3BC,aAAW;AACPC,UAAM;AADC;AADgB,CAAlB,CAAb","sourcesContent":["import React, { PropTypes, Component } from 'react'\nimport { \n\tStyleSheet,\n\tScrollView,\n} from 'react-native'\n\nexport default class StickyScrollView extends Component {\n  \n  constructor(props) {\n    super(props)\n  \n    this._onScroll = this._onScroll.bind(this)\n  }\n\n  _onScroll(e) {\n    let {\n  \t\tstickyHeight\n  \t} = this.props\n  //  this._maybeUpdateScrollPosition(e);\n\n  \tif(this.props.onStickyVisibility == null) return\n\n    if (e.nativeEvent.contentOffset.y >= stickyHeight) {\n      this.props.onStickyVisibility(true)\n    } else {\n      this.props.onStickyVisibility(false)\n    }\n  }\n\n  render () {\n    return (\n      <ScrollView {...this.props}\n      \t\t\t  onScroll={this._onScroll}\n      >\n      \t{ this.props.children }\n      </ScrollView>\n    )\n  }\n}\n\nStickyScrollView.propTypes = {\n\tscrollTop: PropTypes.number.isRequired,\n\tonStickyVisibility: PropTypes.func,\n}\n\nStickyScrollView.defaultProps = {\n\t\n}\n\nlet styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    }\n})\n"]}]